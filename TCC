<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>TCC - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "TCC", "wgTitle": "TCC", "wgCurRevisionId": 16406, "wgArticleId": 2690, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["In Progress"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-winbatch {line-height: normal;}
.source-winbatch li, .source-winbatch pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for winbatch
 * CSS class: source-winbatch, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.winbatch.source-winbatch .de1, .winbatch.source-winbatch .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.winbatch.source-winbatch  {font-family:monospace;}
.winbatch.source-winbatch .imp {font-weight: bold; color: red;}
.winbatch.source-winbatch li, .winbatch.source-winbatch .li1 {font-weight: normal; vertical-align:top;}
.winbatch.source-winbatch .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.winbatch.source-winbatch .li2 {font-weight: bold; vertical-align:top;}
.winbatch.source-winbatch .kw1 {color: #800080;}
.winbatch.source-winbatch .kw2 {color: #0080FF; font-weight: bold;}
.winbatch.source-winbatch .kw3 {color: #0000FF;}
.winbatch.source-winbatch .kw4 {color: #FF00FF;}
.winbatch.source-winbatch .kw5 {color: #008000;}
.winbatch.source-winbatch .co1 {color: #008000; font-style: italic;}
.winbatch.source-winbatch .co2 {color: #FF1010; font-weight: bold;}
.winbatch.source-winbatch .coMULTI {color: #808080; font-style: italic;}
.winbatch.source-winbatch .es0 {color: #000099; font-weight: bold;}
.winbatch.source-winbatch .br0 {color: #66cc66;}
.winbatch.source-winbatch .sy0 {color: #66cc66;}
.winbatch.source-winbatch .st0 {color: #ff0000;}
.winbatch.source-winbatch .nu0 {color: #cc66cc;}
.winbatch.source-winbatch .me0 {color: #006600;}
.winbatch.source-winbatch .re0 {color: #0000ff;}
.winbatch.source-winbatch .ln-xtra, .winbatch.source-winbatch li.ln-xtra, .winbatch.source-winbatch div.ln-xtra {background-color: #ffc;}
.winbatch.source-winbatch span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-asm {line-height: normal;}
.source-asm li, .source-asm pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for asm
 * CSS class: source-asm, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.asm.source-asm .de1, .asm.source-asm .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.asm.source-asm  {font-family:monospace;}
.asm.source-asm .imp {font-weight: bold; color: red;}
.asm.source-asm li, .asm.source-asm .li1 {font-weight: normal; vertical-align:top;}
.asm.source-asm .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.asm.source-asm .li2 {font-weight: bold; vertical-align:top;}
.asm.source-asm .kw1 {color: #00007f; font-weight: bold;}
.asm.source-asm .kw2 {color: #0000ff; font-weight: bold;}
.asm.source-asm .kw3 {color: #00007f;}
.asm.source-asm .kw4 {color: #000000; font-weight: bold;}
.asm.source-asm .kw5 {color: #000000; font-weight: bold;}
.asm.source-asm .co1 {color: #666666; font-style: italic;}
.asm.source-asm .co2 {color: #adadad; font-style: italic;}
.asm.source-asm .es0 {color: #000099; font-weight: bold;}
.asm.source-asm .br0 {color: #009900; font-weight: bold;}
.asm.source-asm .sy0 {color: #339933;}
.asm.source-asm .st0 {color: #7f007f;}
.asm.source-asm .nu0 {color: #0000ff;}
.asm.source-asm .ln-xtra, .asm.source-asm li.ln-xtra, .asm.source-asm div.ln-xtra {background-color: #ffc;}
.asm.source-asm span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-bash {line-height: normal;}
.source-bash li, .source-bash pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for bash
 * CSS class: source-bash, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.bash.source-bash .de1, .bash.source-bash .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.bash.source-bash  {font-family:monospace;}
.bash.source-bash .imp {font-weight: bold; color: red;}
.bash.source-bash li, .bash.source-bash .li1 {font-weight: normal; vertical-align:top;}
.bash.source-bash .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.bash.source-bash .li2 {font-weight: bold; vertical-align:top;}
.bash.source-bash .kw1 {color: #000000; font-weight: bold;}
.bash.source-bash .kw2 {color: #c20cb9; font-weight: bold;}
.bash.source-bash .kw3 {color: #7a0874; font-weight: bold;}
.bash.source-bash .co0 {color: #666666; font-style: italic;}
.bash.source-bash .co1 {color: #800000;}
.bash.source-bash .co2 {color: #cc0000; font-style: italic;}
.bash.source-bash .co3 {color: #000000; font-weight: bold;}
.bash.source-bash .co4 {color: #666666;}
.bash.source-bash .es1 {color: #000099; font-weight: bold;}
.bash.source-bash .es2 {color: #007800;}
.bash.source-bash .es3 {color: #007800;}
.bash.source-bash .es4 {color: #007800;}
.bash.source-bash .es5 {color: #780078;}
.bash.source-bash .es_h {color: #000099; font-weight: bold;}
.bash.source-bash .br0 {color: #7a0874; font-weight: bold;}
.bash.source-bash .sy0 {color: #000000; font-weight: bold;}
.bash.source-bash .st0 {color: #ff0000;}
.bash.source-bash .st_h {color: #ff0000;}
.bash.source-bash .nu0 {color: #000000;}
.bash.source-bash .re0 {color: #007800;}
.bash.source-bash .re1 {color: #007800;}
.bash.source-bash .re2 {color: #007800;}
.bash.source-bash .re4 {color: #007800;}
.bash.source-bash .re5 {color: #660033;}
.bash.source-bash .ln-xtra, .bash.source-bash li.ln-xtra, .bash.source-bash div.ln-xtra {background-color: #ffc;}
.bash.source-bash span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-TCC action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">TCC</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="TCC#mw-head">navigation</a>,
					<a href="TCC#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tr>
<td>
<p><a href="File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" width="50" height="50" /></a>
This page is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></table>
</center>
<p>This article describes how to make a sample ELF kernel with <a href="FASM" title="FASM">FASM</a> and <strong class="selflink">Tiny C Compiler</strong> (aka TCC).
It is also possible to use <a href="NASM" title="NASM">NASM</a> (<a href="Bare_Bones_with_NASM" title="Bare Bones with NASM">Bare_Bones_with_NASM</a>).
TCC is a small and fast C compiler, which produces x86, x86_64 or ARM code, and generates PE or ELF executables. 
TCC is heading toward full ISOC99 compliance, and can compile itself, like FASM.
</p><p>TCC includes also a linker and an assembler (only x86). But this assembler is limited: no
16/64-bit support, instructions up to MMX are supported.
</p><p>Note: The Windows version of TCC doesn't produces ELF executables, but only object files. You
need to recompile TCC without PE support, if you want to use this tutorial on Windows. You can
skip this step if you aren't using Windows.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="TCC#Building_TCC_with_ELF_support"><span class="tocnumber">1</span> <span class="toctext">Building TCC with ELF support</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="TCC#A_small_kernel_example"><span class="tocnumber">2</span> <span class="toctext">A small kernel example</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="TCC#start32.asm"><span class="tocnumber">2.1</span> <span class="toctext">start32.asm</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="TCC#kernel.c"><span class="tocnumber">2.2</span> <span class="toctext">kernel.c</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="TCC#Compiling_and_linking"><span class="tocnumber">3</span> <span class="toctext">Compiling and linking</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="TCC#Inline_Assembly"><span class="tocnumber">4</span> <span class="toctext">Inline Assembly</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="TCC#GDT_and_struct_warning"><span class="tocnumber">5</span> <span class="toctext">GDT and struct warning</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="TCC#Inline_Function_Warning"><span class="tocnumber">6</span> <span class="toctext">Inline Function Warning</span></a></li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="Building_TCC_with_ELF_support">Building TCC with ELF support</span></h2>
<p>1. Download <a rel="nofollow" class="external text" href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.26.tar.bz2">TCC sources</a> and <a rel="nofollow" class="external text" href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.26-win32-bin.zip">32-bit TCC</a> and (if you have a 64-bit OS) <a rel="nofollow" class="external text" href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.26-win64-bin.zip">64-bit TCC</a>.
</p><p>2. Extract the source folder tcc-0.9.26.
</p><p>3. Save the 32-bit tcc files to a folder called "win32" in the location containing tcc-0.9.26. If you have a 64-bit OS, also create a win64 folder, and save the 64-bit files to a folder called "win64" in the same location.
</p><p>4. Open Notepad or another text editor, and enter this:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="winbatch source-winbatch"><pre class="de1"><span class="sy0">@</span>echo <span class="kw2">off</span>
&#160;
set \p <span class="kw3">VERSION</span> = <span class="sy0">&lt;</span> .<span class="kw3">VERSION</span>
echo <span class="sy0">&gt;</span> config.h <span class="sy0">#</span>define TCC_VERSION <span class="st0">&quot;%VERSION%&quot;</span>
&#160;
set targetP=I386
set B=<span class="nu0">32</span>
<span class="kw1">goto</span> begin
&#160;
<span class="co2">:x86_64</span>
set targetP=X86_64
set B=<span class="nu0">64</span>
<span class="kw1">goto</span> begin
&#160;
<span class="co2">:begin</span>
set targetF=PE
set CC=..\win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc.exe <span class="sy0">-</span>O0 <span class="sy0">-</span>s <span class="sy0">-</span>fno<span class="sy0">-</span>strict<span class="sy0">-</span>aliasing
set P=<span class="sy0">%</span>B<span class="sy0">%</span>
&#160;
<span class="co2">:start</span>
<span class="kw1">if</span> <span class="sy0">%</span>targetF<span class="sy0">%</span>==ELF set P=<span class="sy0">%</span>B<span class="sy0">%-</span>elf
set target=<span class="sy0">-</span>DTCC_TARGET_<span class="sy0">%</span>targetF<span class="sy0">%</span> <span class="sy0">-</span>DTCC_TARGET_<span class="sy0">%</span>targetP<span class="sy0">%</span>
&#160;
<span class="co2">:tools</span>
<span class="sy0">%</span>CC<span class="sy0">%</span> <span class="sy0">%</span>target<span class="sy0">%</span> win<span class="sy0">%</span>P<span class="sy0">%</span>\tools\tiny_impdef.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\tiny_impdef.exe
<span class="sy0">%</span>CC<span class="sy0">%</span> <span class="sy0">%</span>target<span class="sy0">%</span> win<span class="sy0">%</span>P<span class="sy0">%</span>\tools\tiny_libmaker.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\tiny_libmaker.exe
&#160;
<span class="co2">:libtcc</span>
<span class="kw1">if</span> not exist win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc\nul mkdir win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc
copy libtcc.h win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc\libtcc.h
<span class="sy0">%</span>CC<span class="sy0">%</span> <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>shared <span class="sy0">-</span>DLIBTCC_AS_DLL <span class="sy0">-</span>DONE_SOURCE libtcc.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc.dll
win<span class="sy0">%</span>P<span class="sy0">%</span>\tiny_impdef win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc.dll <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc\libtcc.def
&#160;
<span class="co2">:tcc</span>
<span class="sy0">%</span>CC<span class="sy0">%</span> <span class="sy0">%</span>target<span class="sy0">%</span> tcc.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\tcc.exe <span class="sy0">-</span>ltcc <span class="sy0">-</span>Lwin<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc
&#160;
<span class="co2">:copy_std_includes</span>
copy <span class="kw1">include</span>\<span class="sy0">*</span>.h win<span class="sy0">%</span>P<span class="sy0">%</span>\<span class="kw1">include</span>
&#160;
<span class="co2">:libtcc1.a</span>
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c lib\libtcc1.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc1.o
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c win<span class="sy0">%</span>P<span class="sy0">%</span>\lib\crt1.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\crt1.o
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c win<span class="sy0">%</span>P<span class="sy0">%</span>\lib\wincrt1.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\wincrt1.o
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c win<span class="sy0">%</span>P<span class="sy0">%</span>\lib\dllcrt1.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\dllcrt1.o
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c win<span class="sy0">%</span>P<span class="sy0">%</span>\lib\dllmain.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\dllmain.o
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c win<span class="sy0">%</span>P<span class="sy0">%</span>\lib\chkstk.S <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\chkstk.o
<span class="kw1">goto</span> lib<span class="sy0">%</span>B<span class="sy0">%</span>
&#160;
<span class="co2">:lib32</span>
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c lib\alloca86.S <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\alloca86.o
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c lib\alloca86<span class="sy0">-</span>bt.S <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\alloca86<span class="sy0">-</span>bt.o
win<span class="sy0">%</span>B<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c lib\bcheck.c <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\bcheck.o
win<span class="sy0">%</span>P<span class="sy0">%</span>\tiny_libmaker win<span class="sy0">%</span>P<span class="sy0">%</span>\lib\libtcc1.a win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\alloca86.o win<span class="sy0">%</span>P<span class="sy0">%</span>\alloca86<span class="sy0">-</span>bt.o win<span class="sy0">%</span>P<span class="sy0">%</span>\crt1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\wincrt1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\dllcrt1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\dllmain.o win<span class="sy0">%</span>P<span class="sy0">%</span>\chkstk.o win<span class="sy0">%</span>P<span class="sy0">%</span>\bcheck.o
<span class="sy0">@</span><span class="kw1">goto</span> the_end
&#160;
<span class="co2">:lib64</span>
win<span class="sy0">%</span>P<span class="sy0">%</span>\tcc <span class="sy0">%</span>target<span class="sy0">%</span> <span class="sy0">-</span>c lib\alloca86_64.S <span class="sy0">-</span>o win<span class="sy0">%</span>P<span class="sy0">%</span>\alloca86_64.o
win<span class="sy0">%</span>P<span class="sy0">%</span>\tiny_libmaker win<span class="sy0">%</span>P<span class="sy0">%</span>\lib\libtcc1.a win<span class="sy0">%</span>P<span class="sy0">%</span>\libtcc1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\alloca86_64.o win<span class="sy0">%</span>P<span class="sy0">%</span>\crt1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\wincrt1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\dllcrt1.o win<span class="sy0">%</span>P<span class="sy0">%</span>\dllmain.o win<span class="sy0">%</span>P<span class="sy0">%</span>\chkstk.o
&#160;
<span class="co2">:the_end</span>
del win<span class="sy0">%</span>P<span class="sy0">%</span>\<span class="sy0">*</span>.o
&#160;
<span class="sy0">@</span><span class="kw1">if</span> <span class="sy0">%</span>targetF<span class="sy0">%</span>==PE <span class="br0">&#40;</span>
	<span class="sy0">@</span>set targetF=ELF
	<span class="sy0">@</span><span class="kw1">goto</span> start
<span class="br0">&#41;</span>
&#160;
<span class="sy0">@</span><span class="kw1">if</span> <span class="sy0">%</span>B<span class="sy0">%</span>==<span class="nu0">64</span> <span class="kw1">goto</span> finished
<span class="sy0">@</span><span class="kw1">if</span> _<span class="sy0">%</span>PROCESSOR_ARCHITEW6432<span class="sy0">%</span>_==_AMD64_ <span class="kw1">goto</span> x86_64
<span class="sy0">@</span><span class="kw1">if</span> _<span class="sy0">%</span>PROCESSOR_ARCHITECTURE<span class="sy0">%</span>_==_AMD64_ <span class="kw1">goto</span> x86_64
&#160;
<span class="co2">:finished</span></pre></div></div>
<p>5. Save to tcc-0.9.26 with any name you want, but the extension MUST be .bat. If you use notepad, you will have to change the type from "Text Documents" to "All Files".
</p><p>6. Run the script, make sure everything compiled correctly (note that there may be warnings about assignments from incompatible pointer types and bound checking not supporting malloc in a certain environment, but these are okay), and inside win32-elf you should have a working ELF compiler. You should also have win32 and win64 for 32-bit and 64-bit PE compilers, and a 64-bit ELF compiler in win64-elf. Note: The 64-bit compilers won't be compiled on a non-64 bit OS.
If there are errors compiling TCC, just change the "@echo off" to "@echo on" and run the script again to see where things went wrong.
</p>
<h2> <span class="mw-headline" id="A_small_kernel_example">A small kernel example</span></h2>
<p>This little example builds a small kernel in ELF format, which can be booted by Grub.
</p>
<h3> <span class="mw-headline" id="start32.asm">start32.asm</span></h3>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="asm source-asm"><pre class="de1"><span class="co1">;  Tutorial: A small kernel with Fasm &amp; TCC</span>
<span class="co1">;  By Tommy.</span>
&#160;
        format elf
        <span class="kw5">use32</span>
&#160;
<span class="co1">;</span>
<span class="co1">; Equates</span>
<span class="co1">;</span>
MULTIBOOT_PAGE_ALIGN	   <span class="kw4"> equ</span> <span class="br0">&#40;</span><span class="nu0">1</span> <span class="kw1">shl</span> <span class="nu0">0</span><span class="br0">&#41;</span>
MULTIBOOT_MEMORY_INFO	   <span class="kw4"> equ</span> <span class="br0">&#40;</span><span class="nu0">1</span> <span class="kw1">shl</span> <span class="nu0">1</span><span class="br0">&#41;</span>
MULTIBOOT_AOUT_KLUDGE	   <span class="kw4"> equ</span> <span class="br0">&#40;</span><span class="nu0">1</span> <span class="kw1">shl</span> <span class="nu0">16</span><span class="br0">&#41;</span>
MULTIBOOT_HEADER_MAGIC	   <span class="kw4"> equ</span> <span class="nu0">0x1BADB002</span>
MULTIBOOT_HEADER_FLAGS	   <span class="kw4"> equ</span> MULTIBOOT_PAGE_ALIGN <span class="kw1">or</span> MULTIBOOT_MEMORY_INFO
MULTIBOOT_CHECKSUM         <span class="kw4"> equ</span> <span class="sy0">-</span><span class="br0">&#40;</span>MULTIBOOT_HEADER_MAGIC <span class="sy0">+</span> MULTIBOOT_HEADER_FLAGS<span class="br0">&#41;</span>
&#160;
        section <span class="st0">'.text'</span> executable
<span class="co1">;</span>
<span class="co1">; Multiboot header</span>
<span class="co1">;</span>
<span class="kw4">dd</span> MULTIBOOT_HEADER_MAGIC
<span class="kw4">dd</span> MULTIBOOT_HEADER_FLAGS
<span class="kw4">dd</span> MULTIBOOT_CHECKSUM
&#160;
&#160;
<span class="co1">;</span>
<span class="co1">; Kernel entry point.</span>
<span class="co1">;</span>
        <span class="kw4">public</span>  _start
        <span class="kw4">extrn</span>   kmain
_start<span class="sy0">:</span>
        <span class="co1">; Call the main kernel function.</span>
        <span class="kw1">call</span>    kmain
&#160;
@@<span class="sy0">:</span>
        <span class="kw1">jmp</span>     <span class="kw5">@b</span></pre></div></div>
<h3> <span class="mw-headline" id="kernel.c">kernel.c</span></h3>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="coMULTI">/*  Tutorial: A small kernel with Fasm &amp; TCC
 *  By Tommy.
 */</span>
&#160;
<span class="coMULTI">/*
 * Main kernel function.
 */</span>
<span class="kw4">void</span>
kmain <span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8000</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'H'</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8001</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu12">0x1F</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8002</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'E'</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8003</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu12">0x1F</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8004</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'L'</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8005</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu12">0x1F</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8006</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'L'</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8007</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu12">0x1F</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8008</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">'O'</span><span class="sy0">;</span>
    <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span> <span class="nu12">0xB8009</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu12">0x1F</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2> <span class="mw-headline" id="Compiling_and_linking">Compiling and linking</span></h2>
<p>Assemble start32.asm with:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="bash source-bash"><pre class="de1">fasm start32.asm</pre></div></div>
<p>Compile kernel.c with:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="bash source-bash"><pre class="de1">tcc <span class="re5">-c</span> kernel.c</pre></div></div>
<p>Then link the whole thing with:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="bash source-bash"><pre class="de1">tcc <span class="re5">-nostdlib</span> -Wl,-Ttext,0x100000 start32.o kernel.o <span class="re5">-o</span> kernel-i386.elf</pre></div></div>
<p>If you would prefer it in binary form, for example, if you're using your own bootloader that doesn't support ELF, link it with this:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="bash source-bash"><pre class="de1">tcc <span class="re5">-nostdlib</span> -Wl,-Ttext,0x100000 -Wl,--oformat,binary <span class="re5">-static</span> start32.o kernel.o <span class="re5">-o</span> kernel-i386.bin</pre></div></div>
<p>That's all!
</p>
<h2> <span class="mw-headline" id="Inline_Assembly">Inline Assembly</span></h2>
<p>TCC supports inline GAS syntax assembly like GCC:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">__asm__ __volatile__<span class="br0">&#40;</span><span class="st0">&quot;hlt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></div></div>
<p>You can use this to your benefit for many things, such as debugging in Bochs:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#define breakpoint() __asm__ __volatile__(&quot;xchg&#160;%bx,&#160;%bx&quot;);</span>
&#160;
<span class="kw4">void</span> bochs_print <span class="br0">&#40;</span><span class="kw4">char</span> <span class="sy0">*</span>string<span class="br0">&#41;</span> <span class="br0">&#123;</span>
	<span class="kw4">char</span> <span class="sy0">*</span>c <span class="sy0">=</span> string<span class="sy0">;</span>
	<span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">*</span>c <span class="sy0">!=</span> <span class="st0">'<span class="es5">\0</span>'</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
		outb<span class="br0">&#40;</span><span class="nu12">0xE9</span><span class="sy0">,</span> <span class="sy0">*</span>c<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">// may be outportb</span>
		c<span class="sy0">++;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>Then adding this to your bochsrc.bxrc file in a text editor:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="text source-text"><pre class="de1">port_e9_hack: enabled=1
magic_break: enabled=1</pre></div></div>
<p>And from boch's install location, executing bochsdbg.exe instead of bochs.exe.
</p>
<h2> <span class="mw-headline" id="GDT_and_struct_warning">GDT and struct warning</span></h2>
<p>According to Fabrice Bellard, the creator of TCC, and (painfully) tested to be true: "In TCC 'packed' is supported only for structure fields or variable declarations, not for a whole structure. So a solution for you is to add it to each field of the packed structure."
So if you use structs to store your GDT entries or GDTR, beware, you will encounter issues loading your GDT if you don't specify the packing of structures correctly.
When creating structures, use something like this:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// We use the attribute 'packed' to tell TCC not to change any of the alignment in the structure.</span>
<span class="kw4">struct</span> some_struct <span class="br0">&#123;</span>
   <span class="kw4">unsigned</span> <span class="kw4">char</span> a __attribute__<span class="br0">&#40;</span><span class="br0">&#40;</span>packed<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw4">unsigned</span> <span class="kw4">char</span> b __attribute__<span class="br0">&#40;</span><span class="br0">&#40;</span>packed<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span> __attribute__<span class="br0">&#40;</span><span class="br0">&#40;</span>packed<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co1">// This last attribute can be kept, it won't interfere with the compilation or output, so it may be</span>
<span class="co1">// useful to retain compatilbity with GCC, as long as the above attributes don't interfere with GCC.</span></pre></div></div>
<p>Instead of this:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// We use the attribute 'packed' to tell GCC not to change any of the alignment in the structure.</span>
<span class="kw4">struct</span> some_struct <span class="br0">&#123;</span>
   <span class="kw4">unsigned</span> <span class="kw4">char</span> a<span class="sy0">;</span>
   <span class="kw4">unsigned</span> <span class="kw4">char</span> b<span class="sy0">;</span>
<span class="br0">&#125;</span> __attribute__<span class="br0">&#40;</span><span class="br0">&#40;</span>packed<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span></pre></div></div>
<p><br />
</p>
<h2> <span class="mw-headline" id="Inline_Function_Warning">Inline Function Warning</span></h2>
<p>TCC doesn't support function inlining, because the 'inline' keyword is ignored, so if a function needs to be inlined, you must use defines instead.
</p>
<!-- 
NewPP limit report
Preprocessor node count: 159/1000000
Post-expand include size: 347/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2690-0!*!0!!en!2!* and timestamp 20180121064150 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=TCC&amp;oldid=16406">http://wiki.osdev.org/index.php?title=TCC&amp;oldid=16406</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="Category:In_Progress" title="Category:In Progress">In Progress</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=TCC" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="TCC"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="Talk:TCC"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="TCC#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="TCC" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=TCC&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=TCC&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="TCC#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="/OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="/OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/TCC" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/TCC" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="/index.php?title=TCskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/TCC" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/TCC" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=TCC&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=TCC&amp;oldid=16406" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 27 May 2014, at 00:57.</li>
											<li id="footer-info-viewcount">This page has been accessed 28,608 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.044 secs. -->
	</body>
</html>
