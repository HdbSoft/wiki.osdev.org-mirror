<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Talk:Inline Assembly/Examples - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="../favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "Talk", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 1, "wgPageName": "Talk:Inline_Assembly/Examples", "wgTitle": "Inline Assembly/Examples", "wgCurRevisionId": 11312, "wgArticleId": 2581, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": [], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-1 ns-talk page-Talk_Inline_Assembly_Examples action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Talk:Inline Assembly/Examples</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"><span class="subpages">&lt; <a href="../Talk:Inline_Assembly" title="Talk:Inline Assembly">Talk:Inline Assembly</a></span></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Examples#mw-head">navigation</a>,
					<a href="Examples#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><h2> <span class="mw-headline" id="Rollback"> Rollback </span></h2>
<p>Rolled back edit by imate900 that added the following lgdt function, which is wrong for many reasons. I just did not have time to fix the example yet.
</p>
<pre>
void *lgdt(void *gdt, int entries)
{
 struct { unsigned short *length, void *base } gdtr_t;
 gdtr_t *gdtr;
 gdtr.length = entries;
 gdtr.base = gdt;
 asm(&quot;lgdt (%0)&quot;:&#160;: &quot;p&quot; (&amp;gdtr));
 asm(&quot;mov&#160;%ax, 0x10&quot;);
 asm(&quot;mov&#160;%ds,&#160;%ax&quot;);
 asm(&quot;mov&#160;%es,&#160;%ax&quot;);
 asm(&quot;mov&#160;%fs,&#160;%ax&quot;);
 asm(&quot;mov&#160;%gs,&#160;%ax&quot;);
 asm(&quot;mov&#160;%ss,&#160;%ax&quot;);
 goto fix_cs;
fix_cs:
 return;
}</pre>
<p>--<a href="http://wiki.osdev.org/User:Quok" title="User:Quok">quok</a> 19:17, 2 May 2009 (UTC)
</p>
<h2> <span class="mw-headline" id="Problems_with_article"> Problems with article </span></h2>
<p>I see some problems with this article:
</p>
<ol><li> It only provides GCC inline assembly.
</li><li> It uses GCC-specific extensions although the "inline" keyword was introduced in C99.
</li><li> <b>More importantly, everything here is more suited as a macro than inline assembly. It is important to understand that "inline" is just a compiler hint and may be ignored entirely as far as optimizations go (and probably will). The only thing one can be sure of is that a pointer to the function cannot be obtained.</b>
</li><li> I/O support is directly supported in C (TR 1169).
</li></ol>
<p>It would be nice if someone explained why this article is neccessary.
--<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 05:44, 10 March 2011 (UTC)
</p>
<dl><dd><ol><li> This article is an extension to <a href="../Inline_Assembly" title="Inline Assembly">Inline Assembly</a>, which reads "...this article describes the way it works in GCC since it is by far the most used compiler in the OS world." Feel free to add an example page for MSVC inline assembly if you want.
</li><li> I agree there.
</li><li> The "inline" in "inline assembly" has nothing to do with the "inline" <i>keyword</i>. Any ASM source written in a C source file is "inline", as opposed to ASM source in an external .asm / .s source file. You might want to note that an external ASM function can <i>never</i> be inlined, as the compiler lacks information on register usage etc. - and for the sake of presentation, I prefer a function declared inline over a preprocessor macro anytime.
</li><li> You probably refer to the header &lt;iohw.h&gt;, which was added with TR18015 and TR18037. GCC still does not even follow C99 by default. The &lt;iohw.h&gt; header is absent from the GCC 4.1.2 installation I have available for quick checking. As such, it is not a viable replacement for the information provided in this article (which aims at providing <i>examples</i> of the modus operandi, not copy &amp; paste code snippets anyway).
</li></ol>
</dd><dd>I hope this helps (some). -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 12:57, 10 March 2011 (UTC)
</dd></dl>
<dl><dd><dl><dd>I am not confusing inline assembly with inline functions. However, note that all the inline assembly code is implemented via inlined functions, which is why I suggested macros instead. The inline keyword is the problem, not the assembly. Using functions has not advantage because the compiler itself cannot assemble and has the potential performance disadvantage I have already explained. --<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 14:48, 10 March 2011 (UTC)
<dl><dd>Functions &gt; Macros. They are typed, more legible and improve debugging. If the compiler does inline such functions the performance difference is zero by definition. In professional C++, macro's are not done in favour of templates. For half of those reasons, I also prefer vim over emacs. For the other half, functions must stay. - <a href="http://wiki.osdev.org/User:Combuster" title="User:Combuster">Combuster</a> 15:08, 10 March 2011 (UTC)
</dd><dd>Yes, Combuster, C type checking is of huge advantage in inline assembly which is not even performed by the compiler. --<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 17:14, 10 March 2011 (UTC)
<dl><dd>The C compiler <i>will</i> do type checking on the parameters of an inline function. Inline functions also allow <i>you</i> to decide whether you want them inlined (for speed) or not (for space, or debugging). But that is neither here nor there: Simply for <i>didactic</i> reasons I much prefer inline functions over macros. Replace them with macros if you have <i>proven</i> them not being inlined <i>and</i> being a performance problem. Or replace them with macros <i>in your project</i> on general principles. For presentation, I refuse to write macro code on the mere <i>guess</i> that an inline function might not get inlined. -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 10:56, 21 March 2011 (UTC)
<dl><dd>For didactic reasons you prefer inline functions over macros, yet I need to prove that some compiler doesn't inline although you are perfectly aware that the C standard allows both behaviors? I think you should reconsider what is didactic---foolishly sticking to rules or actually understanding why they are there and how to use them to your advantage. Maybe you like writing code on a per-tool basis. However, I prefer standards-compliant code. This is almost as ridiculous as <a rel="nofollow" class="external text" href="http://forum.osdev.org/viewtopic.php?f=13&amp;p=169259#p169291">this post</a>, where you advocated for the craziest scheme just in order to work around the use of <i>goto</i>. The reason for which it should usually be avoided is to that it renders code less readable---but making the code unreadable just in order to avoid it kind of defeats the purpose, doesn't it? Hopefully, you don't use this to avoid <i>break</i> and <i>continue</i> as well because in this particular situation they are no different from <i>goto</i>. Not only is it unreadable since you need to scroll around to get to read some sequential code that logically is part of the same instruction stream, but it also suffers from the same <b>technical</b> difficulty with the <i>inline</i> keyword. --<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 13:42, 22 March 2011 (UTC)
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p>You are going <i>way</i> off-topic here. What I said elsewhere about "goto" hardly matters here. I say that presenting the examples as inline functions adds information (type of parameters and return values) as well as cleanliness of presentation. I also say that anyone who doesn't want to use inline functions <i>despite</i> the various advantages pointed out here, on the mere <i>suspicion</i> that they might not actually be inlined, can trivially convert the presented code into a macro. I also say that these here are <i>examples</i>, not templates for anyone to copy&amp;paste without some thinking of his own. You are free to disagree, but you asked for your fellow user's input, and you got it. Can we now bury the hatchet and work on the article instead of attacking each other? -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 14:13, 22 March 2011 (UTC)
</p>
<dl><dd>Maybe a note would help but you are right that this wiki is not for production code; you're right in saying this is not production code. Also, sorry for going out of line in trying to prove my point regarding rules. Sometimes I just can't help being a bit of a douche. --<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 14:30, 22 March 2011 (UTC)
</dd></dl>
<dl><dd><dl><dd>Don't worry about it. Happens to everyone once in a while.&#160;;-)
</dd><dd>I did a general cleanup of the article, which was in <i>pitiful</i> state. That's more important than whether it's inline functions or macros.&#160;;-)
</dd><dd>I assume you are more familiar with inline ASM in general; could you double-check the syntax of each example? I have a feeling there might be some bugs in there. The first 'io_wait()' looks funny, several 'asm' calls have only one colon, stuff like that. I'd also prefer 'uintX_t' instead of 'word' or 'unsigned short' and stuff like that (unless I get another flame from you for that&#160;;-) ). -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 14:41, 22 March 2011 (UTC)
</dd></dl>
</dd></dl>
<dl><dd><dl><dd><dl><dd>There was nothing wrong with the io_wait labels but I changed the second anyway in order to avoid confusion. Having only one colon is okay as long as you only have output (the syntax is <i>:output:input:clobber</i>). With the exception of CPUID, everything looked fine but I also changed the way multi-instruction asm blocks were written so that the output doesn't contain all the instructions on a single line (this is only visible for people who want to see the assembly file generated by GCC). Regarding the uintX_t, I fully agree---however, I think there are quite a few articles that need to be modified because they don't use the freestanding headers, which I think is just silly. --<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 15:55, 22 March 2011 (UTC)
</dd></dl>
</dd></dl>
</dd></dl>

<!-- 
NewPP limit report
Preprocessor node count: 20/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2581-0!*!0!!*!*!* and timestamp 20180121054500 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Talk:Inline_Assembly/Examples&amp;oldid=11312">http://wiki.osdev.org/index.php?title=Talk:Inline_Assembly/Examples&amp;oldid=11312</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks catlinks-allhidden'></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Talk%3AInline_Assembly%2FExamples" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main"><span><a href="../Inline_Assembly/Examples"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="selected"><span><a href="Examples"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Examples#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Examples" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Inline_Assembly/Examples&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Inline_Assembly/Examples&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Examples#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="../Main_Page"  title="Visit the main page"></a></div>
			../skins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="../Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="../Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="../Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="../OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="../OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="../OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Talk:Inline_Assembly/Examples" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Talk:Inline_Assembly/Examples" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Talk:Inline_Assembly/Examples&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Talk:Inline_Assembly/Examples&amp;oldid=11312" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 22 March 2011, at 09:55.</li>
											<li id="footer-info-viewcount">This page has been accessed 10,096 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="../OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="../OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="../OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="../skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.033 secs. -->
	</body>
</html>
