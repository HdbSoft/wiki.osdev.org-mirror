<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Talk:Makefile - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "Talk", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 1, "wgPageName": "Talk:Makefile", "wgTitle": "Makefile", "wgCurRevisionId": 19778, "wgArticleId": 1963, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": [], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-1 ns-talk page-Talk_Makefile action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Talk:Makefile</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Talk:Makefile#mw-head">navigation</a>,
					<a href="Talk:Makefile#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Talk:Makefile#rm"><span class="tocnumber">1</span> <span class="toctext">rm</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Talk:Makefile#.24.28RM.29_wildcarding"><span class="tocnumber">2</span> <span class="toctext">$(RM) wildcarding</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Talk:Makefile#Recursive_Make"><span class="tocnumber">3</span> <span class="toctext">Recursive Make</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Talk:Makefile#Extended_todolist..."><span class="tocnumber">4</span> <span class="toctext">Extended todolist...</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Talk:Makefile#Bug_in_Dependencies.2C_pt._3.3F"><span class="tocnumber">5</span> <span class="toctext">Bug in Dependencies, pt. 3?</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="Talk:Makefile#Added_.22What_Is_A.22_and_a_basic_example_to_aid_complete_beginners_to_makefiles"><span class="tocnumber">6</span> <span class="toctext">Added "What Is A" and a basic example to aid complete beginners to makefiles</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="Talk:Makefile#Which_make_to_target.3F"><span class="tocnumber">7</span> <span class="toctext">Which make to target?</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="Talk:Makefile#Proper_use_of_CFLAGS"><span class="tocnumber">8</span> <span class="toctext">Proper use of CFLAGS</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="Talk:Makefile#Commands_Prefixed_with_.40"><span class="tocnumber">9</span> <span class="toctext">Commands Prefixed with @</span></a></li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="rm"> rm </span></h2>
<p>if [ -f $$file ]; then rm $$file; fi;
</p><p>what about using rm -f, or $(RM) which is by default defined as rm -f&#160;?
</p><p>Also, are you very sure you can mark an explanation of your own makefile as a tutorial for makefiles? It seems quite arrogant.
</p><p>-- Candy
</p>
<dl><dd> The "mark an explanation of your own makefile as a tutorial for makefiles" does seem a little weird. Maybe you just got that strange naming convention and programmers block I get sometimes. .. maybe all the time. Look I am doing it now. "Makefile: Tips And Tricks". &lt;Have mercy on me..&gt;
</dd><dd> -- <a href="http://wiki.osdev.org/User:Kmcguire" title="User:Kmcguire">kmcguire</a> 10:40 AM CST 11 March 2007
</dd></dl>
<dl><dd>Everything is relative, so is arrogance. A practical example may be a good starting point, even if it is your own code. As long as it serves its purpose and people learn from it, why should we care?. You have an alternative?&#160;;) - <a href="http://wiki.osdev.org/User:Combuster" title="User:Combuster">Combuster</a> 03:05, 12 March 2007 (CDT)
</dd></dl>
<p>Sorry for taking so long to reply, I'm not a "regular" to the new Wiki (yet?). Candy, you are of course right about the $(RM) implicit variable. The "if"-wrapper is being done to keep the Makefile quiet even if a file from the list does not exist (which is not, in fact, an error, and thus shouldn't bother the user). I know I had problems with "only" rm -f to this end, but would have to do some testing to give an exact explanation.
As for the "arrogance" part... you can't write "the" tutorial about makefiles, because make is far too diverse. You can use them to run everything and the kitchen sink. I thought the PDCLib Makefile - being AFAIK correct, non-trivial, and yet not overly long / complex - would be a good example for others to learn a few tricks about Makefiles, especially the dependency handling and non-recursiveness. I shall make the wording a bit more general, and add a note that this is meant as a <i>starting-point</i>, with feedback / requests for extensions being very welcome. Sorry if it sounded too arrogant. <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 03:02, 28 March 2007 (CDT)
</p>
<dl><dd>Sorry but right now I can't be bothered to do this. I have more or less dropped osdev.org completely, and am spending my time on other projects. I might return later, but for now feel free to rewrite this any way you like. <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 23:31, 22 April 2007 (CDT)
</dd></dl>
<p>Looks better to me. I especially liked the fact that I found a neat section on extracting the <i>TODO:</i>s from a source tree which I just never have thought about doing.
</p><p>--<a href="http://wiki.osdev.org/User:Kmcguire" title="User:Kmcguire">Kevin</a> 18:22, 29 April 2007 (CDT)
</p><p>I did a rework today, including some explanation on why I used the actual PDCLib Makefile instead of giving general tipps. I hope you like it. <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 04:20, 21 January 2008 (CST)
</p>
<h2> <span class="mw-headline" id=".24.28RM.29_wildcarding"> $(RM) wildcarding </span></h2>
<p>-@for file in $(OBJFILES) $(DEPFILES) $(TSTFILES) $(REGFILES) pdclib.a pdclib.tgz; do if [ -f $$file ]; then rm $$file; fi; done
</p><p>Wow, that is ugly, and IMO needlessly complicated. A much better rule would be:
</p><p>@$(RM) $(wildcard $(OBJFILES) $(DEPFILES) $(TSTFILES) $(REGFILES) pdclib.a pdclib.tgz)
</p><p>The wildcard function returns a list of only the files that exist, so the if statement and for loop are no longer necessary. Likewise, the - to ignore failures from $(RM) is unneccessary because all files are guaranteed to exist. Although if you don't have permission to delete them, then
a failure will stop any other rules that may be in that target from being run, but that's correct bahavior anyway.
--<a href="http://wiki.osdev.org/User:Quok" title="User:Quok">quok</a> 07:05, 26 August 2008 (UTC)
</p>
<dl><dd>Very nice. -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 08:43, 26 August 2008 (UTC)
</dd></dl>
<h2> <span class="mw-headline" id="Recursive_Make"> Recursive Make </span></h2>
<p>I'm not an expert in makefiles and I do understand the overhead inolved in recursive invocations of "make". However, parallel builds are impossible without recursivity as far as I can tell. Feel free to correct me.--<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 00:44, 10 April 2010 (UTC)
</p><p>Make will build anything in parallel, as long as you use -j[N]. <a href="http://wiki.osdev.org/User:Nedbrek" title="User:Nedbrek">Nedbrek</a> 10:47, 12 April 2010 (UTC)
</p>
<dl><dd>And it's actually the other way around - recursive Makefiles are always in danger of not representing the whole dependency graph, and the more processes you run in parallel, the higher the chances to break something. Monolithic Makefiles don't suffer from this problem.
</dd><dd>The parallelity doesn't come from multiple <i>Makefiles</i> being executed in parallel, but in multiple <i>rules</i> being run. (You have 100 .c files to be turned into .o files, so you can run 100 compiler processes if you feel like it.) -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 14:26, 13 April 2010 (UTC)
</dd></dl>
<dl><dd><dl><dd>You are right, of course. Thank you for clearing up how parallel building actually works, Solar.--<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 09:22, 14 April 2010 (UTC)
</dd></dl>
</dd></dl>
<h2> <span class="mw-headline" id="Extended_todolist..."> Extended todolist... </span></h2>
<p>I disagree with Virtlink's edit <a rel="nofollow" class="external autonumber" href="http://wiki.osdev.org/index.php?title=Makefile&amp;diff=6210&amp;oldid=6209">[1]</a>. Indeed in the PDCLib makefile that was the "template" for this article, I have two different targets, one for TODO: comments and one for FIXME: comments, as the two represent very different levels of urgency; I only presented one of the two as I felt it would be trivial to adapt this to personal choice. You usually don't want TODOs in a FIXME-list, and vice versa. The -F option may make the grep faster, but I feel it's a bit non-KISS. And while we're at it printing file names, why not line numbers to go? Suggestion:
</p>
<pre>
todolist:
-@for file in $(ALLFILES); do grep -Hn TODO $$file; done; true
</pre>
<p>This will print a list of all <i>TODO</i> comments from my files, complete with file name and line number. Nice to be remembered what's still missing before you do a release.
</p><p><br />
</p>
<dl><dd>'fgrep' seems simple enough, and has advantages, especially when you have a big project to build. On the other hand, '-Hn' (or '-H' for that matter) seems also a bit non-KISS to me, however it may be useful. And it is not that trivial to add another keyword, because you need the '-e' switch for that. To me (any possibly to you too), FIXME's are more urgent than TODO's (in the spirit of 'what's missing before you do a release') so maybe we should use those in the example instead. I suggest the following (or with 'fixme' replaced by 'todo'): <a href="http://wiki.osdev.org/User:Virtlink" title="User:Virtlink">Virtlink</a> 16:03, 20 August 2008 (UTC)
</dd></dl>
<pre>
fixmelist:
    -@for file in $(ALLFILES); do fgrep -Hn -e FIXME $$file; done; true
</pre>
<dl><dd>This will <i>grep</i> all those <i>FIXME</i> comments from the files and display them in the terminal. It's nice to be remembered of what's still missing before you do a release. To add another keyword, just add another <code>-e keyword</code>. Don't forget to add <code>fixmelist</code> to your <code>.PHONY</code> list.
</dd></dl>
<h2> <span class="mw-headline" id="Bug_in_Dependencies.2C_pt._3.3F"> Bug in Dependencies, pt. 3? </span></h2>
<p>Should 
</p>
<pre>  &#160;%.o:&#160;%.c Makefile
           @$(CC) $(CFLAGS) -DNDEBUG -MMD -MP -MT "$*.d $*.t" -g -std=c99 -I./includes -I./internals -c $&lt; -o $@
</pre>
<p>not be 
</p>
<pre>  &#160;%.o:&#160;%.c Makefile
           @$(CC) $(CFLAGS) -DNDEBUG -MMD -MP -MT "$*.o $*.t" -g -std=c99 -I./includes -I./internals -c $&lt; -o $@
</pre>
<p>instead?
--<a href="http://wiki.osdev.org/index.php?title=User:Mikeroz&amp;action=edit&amp;redlink=1" class="new" title="User:Mikeroz (page does not exist)">Mikeroz</a> 01:13, 1 August 2009 (UTC)
</p><p>Not quite. The $*.d is needed to recreate the dependency file itself. But you are absolutely right that the $*.o was missing. Funny that no-one else pointed this out (and a shame that I didn't figure this one out earlier, especially since I've got a corresponding bug sitting in my PDCLib tracker for ages...). -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 14:27, 19 June 2010 (UTC)
</p>
<h2> <span class="mw-headline" id="Added_.22What_Is_A.22_and_a_basic_example_to_aid_complete_beginners_to_makefiles"> Added "What Is A" and a basic example to aid complete beginners to makefiles </span></h2>
<p>I have added two sections into this article and felt they required a brief spot of justification.  Whilst the prerequisites for this wiki include an in-depth knowledge of C, not all flavours of C (maily the Microsoft flavours) use makefiles and some people (like myself) can have survived their whole life of C experience never even having laid eyes on a Makefile.  The first section, "What is a Makefile?", is my attempt to bridge this gap and hopefully convey some of the benefits of having one of these.
Moving on, I have added the most basic of basic examples that I could think of to address the fact that the first actual look at a makefile appears more than half way down this fairly sizable beginner tutorial document.
I hope I'm not treading on anyone's toes here, the tutorial is very good, but speaking from the starting point of my experience it needed this little intro.
Feel free to edit or remove.--<a href="http://wiki.osdev.org/User:Kenny" title="User:Kenny">Kenny</a> 19:12, 19 July 2010 (UTC)
</p>
<h2> <span class="mw-headline" id="Which_make_to_target.3F"> Which make to target? </span></h2>
<p>Should this article target GNU make or POSIX make? I think it wouldn't be bad idea to rewrite this article to conform POSIX, because those features can be trusted to be available unlike some GNU extensions (try to look for pattern rules in pmake, for example), and if someone wants to know if his/her specific make know some fancier tricks, the manual is available. Maybe some tricks could be even shortly listed in the end of the article. After quick skimming I noticed two things which would need changing, pattern rules and usage of <tt>:=</tt> to create macros. IMO at least it should be noted that this article talks about GNU make.
</p><p>And by the way, usage of <tt>=</tt> to create macros can also be sign of trying to be portable instead of an error... <a href="http://wiki.osdev.org/index.php?title=User:Fronty&amp;action=edit&amp;redlink=1" class="new" title="User:Fronty (page does not exist)">Fronty</a> 20:58, 6 April 2011 (UTC)
</p>
<dl><dd>It <i>does</i> say it is targeting GNU make, right in the intro of the Tutorial section. There are several reasons I wrote it like this.
</dd><dd>First, I did not write this tutorial in limbo; the example Makefile presented closely reflects the Makefile I use for PDCLib. Any error I find there gets corrected here, too, which likely wouldn't happen if this tutorial were not connected to a "live" Makefile like that. (And there have been a couple of errors over time, like a complete screw-up of dependency handling I would never have discovered if it had been tutorial code only.)
</dd><dd>All platforms I have access to, both privately and professionally, have a GNU make installation on them, or could be fitted with one in <i>no</i> time (make being one of the few tools having <i>zero</i> dependencies and making true of the <tt>./configure &amp;&amp; make install</tt> promise). And figuring out <i>one</i> make manual was quite enough for me. Two reasons I don't feel like digging through other make's manuals to find out the common denominator...
</dd><dd>Then there's the thing with common denominators... <tt>=</tt> may be more portable, but it is <i>also</i> highly <i>inefficient</i> (as the expression gets re-evaluated every time it appears in a rule). There is no such thing as the <tt>.PHONY</tt> target in POSIX make (I just checked), so you're open for faulty behaviour on that flank.
</dd><dd>That's not touching on where I simply prefer the GNU notation (e.g. "%.o:&#160;%c") over the POSIX one (".c.o:") for expressiveness.
</dd><dd>Bottom line, if you insist on re-structuring this tutorial to target POSIX instead of GNU make, I won't be starting an edit war over it,&#160;:but I think GNU make has some distinct advantages. -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 13:15, 7 April 2011 (UTC)
</dd><dd>I kind of like the idea of portable makefiles but to be fair, it's better to be practical sometimes. The POSIX <i>make</i> is sort of rudimentary; I don't even know any projects actually trying to achieve <i>make</i> compatibility. Furthermore, most people are turning away from make (IMHO, for good reason). --<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 15:59, 7 April 2011 (UTC)
<dl><dd>"Most people are turning away from make"? Not in the C/C++ world, they don't. (CMake, Automake, they all use make in the end, and I haven't heard of any non-make alternative making the mainstream.) -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 05:15, 8 April 2011 (UTC)
<dl><dd>Fair enough but in the same sense that CMake uses make, C compilers usually use assembly. What I meant was that makefiles tend to become very cumbersome for larger projects and that makes people want to learn something else instead. --<a href="http://wiki.osdev.org/User:Love4boobies" title="User:Love4boobies">Love4boobies</a> 08:22, 8 April 2011 (UTC)
</dd></dl>
</dd></dl>
</dd><dd>I don't understand how I could miss that GNU make really is mentioned. Maybe I really should grep more thoroughly before complaining.&#160;:-)
</dd><dd>Yes, I missed .PHONY target. That isn't very big problem, though. The trick is to add a dummy dependency which does nothing to a phony target. Maybe it isn't beautiful, but .PHONY IMO is quite ugly too.
</dd><dd>I checked out PDCLib to see how much worse would the build time be if all the <tt>:=</tt> would be changed to <tt>=</tt> when built with GNU make on Ubuntu 10.04 live cd (my FreeBSD installation has some attitude problems right now). Worst differences were about 0.5s, best differences under 0.1s. I got similar results with version Ubuntu stock make (version 3.81) and 3.75 built from source, so I think this isn't due to some relatively new optimization. I don't think that is highly inefficient.
</dd><dd>So... Looks like we're going to live rest of our lives happily with our opinions on efficiency and aesthetics and compatibility and hope we don't stomp on other's feet. <a href="http://wiki.osdev.org/index.php?title=User:Fronty&amp;action=edit&amp;redlink=1" class="new" title="User:Fronty (page does not exist)">Fronty</a> 16:50, 9 April 2011 (UTC)
<dl><dd>This whole page is for people who want to make a good Makefile, not for comparing build systems in general. Make is <i>quite</i> up to the task, it's just that few people ever bothered to actually <i>learn</i> how to use make efficiently. Oh, and your "trick" for .PHONY doesn't work, if you think about it for a second. (What happens when a file with the name of the dependency exists?) <i>And</i> you can hardly argue with "getting cumbersome for large projects" on the one hand and the comparatively simple PDCLib not making much of a difference on the other hand. Hey, just buy a computer that's twice as fast, and you can get away with crappy algorithms? I don't think so. -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 08:14, 11 April 2011 (UTC)
<dl><dd>This whole page is about that, and this whole discussion is about what does a good Makefile mean, and I think we have found out what is public's opinion on that.
</dd><dd>Yes, I know the .PHONY "trick" isn't completely foolproof, but IMO double check is good enough in this kind of situation. What the heck are some extra files doing in the source/build directory anyway? This can be always argued, though.
</dd><dd>Yes, I understand that PDClib is quite simple project. However, that shows well enough that the impact of the type of macro doesn't have that big impact on build speed that I would care. I don't care if my nightly builds are ready a little earlier or later. Full build won't be once-in-an-hour event while developing, and I'll be making tea or something while my computer is installing something and I don't think someone who has already chosen the slow path will want to stare the compilation the whole time. You won't have anything magical in the macros, maybe to the macros containing list of source and object files will be a bit fancier, but they aren't used very much.
</dd><dd>Can I get away with crappy algorithms with faster computer? No. Can I use maybe a little slower algorithm with some good characteristics if the speed difference won't make any difference in that situation and I fancy the good characteristics? Yes. <a href="http://wiki.osdev.org/index.php?title=User:Fronty&amp;action=edit&amp;redlink=1" class="new" title="User:Fronty (page does not exist)">Fronty</a> 13:56, 11 April 2011 (UTC)
</dd></dl>
</dd></dl>
</dd></dl>
<h2> <span class="mw-headline" id="Proper_use_of_CFLAGS"> Proper use of CFLAGS </span></h2>
<p>I know that using CFLAGS like I did is frowned upon, as it overwrites any environment variable the user might have set. Since I don't feel the pressure in PDCLib, and don't have any other C/C++ project using Makefiles at the moment... does anyone have a canon / working alternative? -- <a href="http://wiki.osdev.org/User:Solar" title="User:Solar">Solar</a> 03:01, 25 May 2012 (CDT)
</p>
<dl><dd>My personal solution is to have a different named set of flags and append CFLAGS as appropriate:
</dd></dl>
<pre>CPARAMS&#160;:= "-m32 -DNEEDED_DEFINE -DOTHER_DEFINE -Wall -Wextra -fno-omit-frame-pointer"
(...)
%.o:&#160;%.c
    $(CC) $(CFLAGS) $(CPARAMS) -c -o $@ $&lt;
</pre>
<dl><dd>Which under many circumstances has exactly the intended effect, but it does little to prevent conflicting params/flagsets other than hoping they override in order. - <a href="http://wiki.osdev.org/User:Combuster" title="User:Combuster">Combuster</a> 15:00, 25 May 2012 (CDT)
</dd></dl>
<p><br />
</p>
<dl><dd>Oops, somehow I made an earlier comment vanish O.o - <a href="http://wiki.osdev.org/User:Combuster" title="User:Combuster">Combuster</a> 03:06, 26 May 2012 (CDT)
</dd></dl>
<p>How about CFLAGS += ...? e.g.
</p>
<pre>
CFLAGS += -g -Wall

make
gcc -g -Wall -o test test.c

CFLAGS=-O3 make
gcc -O3 -g -Wall -o test test.c
</pre>
<dl><dd>Obviously this can lead to errors if the user-specified flags conflict with those you specify.  <a href="http://wiki.osdev.org/User:Jnc100" title="User:Jnc100">John</a> 06:02, 25 May 2012 (CDT)
</dd></dl>
<h2> <span class="mw-headline" id="Commands_Prefixed_with_.40"> Commands Prefixed with @ </span></h2>
<p>Is it really a good idea to cause <tt>make(1)</tt> not to print out the executed commands?
</p><p>When debugging it's probably better to know which command failed.
</p><p>When not debugging you can pass the <tt>-s</tt> to <tt>make(1)</tt>.
</p><p><a href="http://wiki.osdev.org/index.php?title=User:Glauxosdever&amp;action=edit&amp;redlink=1" class="new" title="User:Glauxosdever (page does not exist)">Glauxosdever</a> 06:09, 5 September 2016 (CDT)
</p>
<!-- 
NewPP limit report
Preprocessor node count: 127/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1963-0!*!0!!en!*!* and timestamp 20180121075907 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Talk:Makefile&amp;oldid=19778">http://wiki.osdev.org/index.php?title=Talk:Makefile&amp;oldid=19778</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks catlinks-allhidden'></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Talk%3AMakefile" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main"><span><a href="Makefile"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="selected"><span><a href="Talk:Makefile"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Talk:Makefile#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Talk:Makefile" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Makefile&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Makefile&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Talk:Makefile#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Talk:Makefile" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Talk:Makefile" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Talk:Makefile&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Talk:Makefile&amp;oldid=19778" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 5 September 2016, at 05:09.</li>
											<li id="footer-info-viewcount">This page has been accessed 15,170 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.028 secs. -->
	</body>
</html>
