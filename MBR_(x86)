<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>MBR (x86) - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "MBR_(x86)", "wgTitle": "MBR (x86)", "wgCurRevisionId": 19728, "wgArticleId": 1379, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["X86", "Bootloaders"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-asm {line-height: normal;}
.source-asm li, .source-asm pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for asm
 * CSS class: source-asm, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.asm.source-asm .de1, .asm.source-asm .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.asm.source-asm  {font-family:monospace;}
.asm.source-asm .imp {font-weight: bold; color: red;}
.asm.source-asm li, .asm.source-asm .li1 {font-weight: normal; vertical-align:top;}
.asm.source-asm .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.asm.source-asm .li2 {font-weight: bold; vertical-align:top;}
.asm.source-asm .kw1 {color: #00007f; font-weight: bold;}
.asm.source-asm .kw2 {color: #0000ff; font-weight: bold;}
.asm.source-asm .kw3 {color: #00007f;}
.asm.source-asm .kw4 {color: #000000; font-weight: bold;}
.asm.source-asm .kw5 {color: #000000; font-weight: bold;}
.asm.source-asm .co1 {color: #666666; font-style: italic;}
.asm.source-asm .co2 {color: #adadad; font-style: italic;}
.asm.source-asm .es0 {color: #000099; font-weight: bold;}
.asm.source-asm .br0 {color: #009900; font-weight: bold;}
.asm.source-asm .sy0 {color: #339933;}
.asm.source-asm .st0 {color: #7f007f;}
.asm.source-asm .nu0 {color: #0000ff;}
.asm.source-asm .ln-xtra, .asm.source-asm li.ln-xtra, .asm.source-asm div.ln-xtra {background-color: #ffc;}
.asm.source-asm span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-MBR_x86 action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">MBR (x86)</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="MBR_(x86)#mw-head">navigation</a>,
					<a href="MBR_(x86)#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>A <b>Master Boot Record</b> (<b>MBR</b>) is the bootsector of a hard disk. That is, it is what the BIOS loads and runs, when it boots a hard disk. The MBR is the very first sector of the hard disk; it contains an MBR Bootstrap program (described below),
and a <a href="Partition_Table" title="Partition Table">Partition Table</a>. Devices that emulate a hard disk during system initialization must also contain an MBR, because they
must also have Partition Tables -- even if they are not bootable.
</p><p>The BIOS will only boot an MBR from a device if that device is in the "boot sequence" stored in <a href="CMOS" title="CMOS">CMOS</a>, and if the MBR on the device
is formatted correctly. On the other hand, if a device is not in the boot sequence (but has a "drive number"), it is still possible
for a <a href="Real_Mode" title="Real Mode">Real Mode</a> program (such as another MBR or bootloader) to load and boot that device's MBR directly.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="MBR_(x86)#MBR_Bootstrap"><span class="tocnumber">1</span> <span class="toctext">MBR Bootstrap</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="MBR_(x86)#MBR_Format"><span class="tocnumber">2</span> <span class="toctext">MBR Format</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="MBR_(x86)#Traditional_MBR"><span class="tocnumber">3</span> <span class="toctext">Traditional MBR</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="MBR_(x86)#Dual_Booting"><span class="tocnumber">4</span> <span class="toctext">Dual Booting</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="MBR_(x86)#Generic_MBRs"><span class="tocnumber">5</span> <span class="toctext">Generic MBRs</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="MBR_(x86)#Building_a_Custom_MBR_Bootstrap_program"><span class="tocnumber">6</span> <span class="toctext">Building a Custom MBR Bootstrap program</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="MBR_(x86)#Initial_Environment"><span class="tocnumber">6.1</span> <span class="toctext">Initial Environment</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="MBR_(x86)#Immediate_Priorities"><span class="tocnumber">6.2</span> <span class="toctext">Immediate Priorities</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="MBR_(x86)#Storing_an_MBR_to_the_disk"><span class="tocnumber">7</span> <span class="toctext">Storing an MBR to the disk</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="MBR_(x86)#x86_Examples"><span class="tocnumber">8</span> <span class="toctext">x86 Examples</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="MBR_(x86)#Comments"><span class="tocnumber">9</span> <span class="toctext">Comments</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="MBR_(x86)#See_Also"><span class="tocnumber">10</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="MBR_(x86)#Articles"><span class="tocnumber">10.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="MBR_(x86)#External_Links"><span class="tocnumber">10.2</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="MBR_Bootstrap">MBR Bootstrap</span></h2>
<p>An MBR is loaded by the <a href="BIOS" title="BIOS">BIOS</a> at physical address 0x7c00, with DL set to the "drive number" that the MBR was loaded from.
The BIOS then jumps to the very beginning of the loaded MBR (0x7c00), because that part of the MBR contains the "bootstrap" executable code.
</p><p>Typical MBR bootstrap code will do the following:
</p>
<ul><li> relocate itself away from the 0x7c00 physical address (using a memory copy, and usually a far jump)
</li><li> determine which partition (or hard disk) to boot from (either by looking for the active partition, or by presenting the user with a selection of installed operating systems to choose from)
<ul><li> if the user selected an "inactive" partition, then set the selected partition entry to "active", and clear the "active" bits of other partition entries
</li><li> use <a href="ATA_in_x86_RealMode_(BIOS)" title="ATA in x86 RealMode (BIOS)">BIOS INT 13h</a> commands to rewrite the MBR if the partition table entries were modified
</li></ul>
</li><li> use <a href="ATA_in_x86_RealMode_(BIOS)" title="ATA in x86 RealMode (BIOS)">BIOS INT 13h</a> commands to load the <a href="Volume_Boot_Record" title="Volume Boot Record">Volume Boot Record</a> (VBR, the "bootsector" of the bootloader) from the beginning of the selected partition to physical address 0x7c00
</li><li> set DS:SI pointing to the selected partition table entry
</li><li> jump to 0x7c00 (with CS set to 0, and DL set to the "drive number")
</li></ul>
<p>Note: it is intended for the value of DL, and the DS:SI pointer to be passed all the way into the kernel, for the kernel's use.
This also means that the relocated MBR should not be overwritten during the boot process -- because the DS:SI pointer is aimed
at a partition table entry inside that MBR, and needs to remain valid.
</p>
<h2> <span class="mw-headline" id="MBR_Format">MBR Format</span></h2>
<p>Notes:
</p>
<ul><li> See the <a href="Partition_Table" title="Partition Table">Partition Table</a> article for the format of each partition table entry field.
</li><li> It is important to remember that the partition table entries are <b>not</b> aligned on 32-bit boundaries.
</li><li> Naming the partition table entries as "First" through "Fourth" is for convenience only. The partition table entries are <b>not</b> required to be in any kind of order.
</li><li> <b>Any</b> one of the partitions may be "active".
</li><li> There is supposed to be one active partition table entry, at most.
</li><li> Windows seems to verify and require that the partition it boots from be marked "active".
</li><li> Most other operating systems don't seem to care about the "active" bit in the partition table entry.
</li></ul>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1}}}">
<tr>
<th> Offset
</th>
<th> Size (bytes)
</th>
<th> Description
</th></tr>
<tr>
<td> 0
</td>
<td> 436 (to 446, if you need a little extra)
</td>
<td> MBR <b>Bootstrap</b> (flat binary executable code)
</td></tr>
<tr>
<td> 0x1b4
</td>
<td> 10
</td>
<td> Optional "unique" disk ID<sup>1</sup>
</td></tr>
<tr>
<td> 0x1be
</td>
<td> 64
</td>
<td> MBR <b>Partition Table</b>, with 4 entries (below)
</td></tr>
<tr>
<td> 0x1be
</td>
<td> 16
</td>
<td> First partition table entry
</td></tr>
<tr>
<td> 0x1ce
</td>
<td> 16
</td>
<td> Second partition table entry
</td></tr>
<tr>
<td> 0x1de
</td>
<td> 16
</td>
<td> Third partition table entry
</td></tr>
<tr>
<td> 0x1ee
</td>
<td> 16
</td>
<td> Fourth partition table entry
</td></tr>
<tr>
<td> 0x1fe
</td>
<td> 2
</td>
<td> (0x55, 0xAA) "Valid bootsector" signature bytes
</td></tr></table>
<p><sup>1</sup> The 10 byte "unique disk ID" field was never standardized. It can contain anything -- even the tail end of the bootstrap code.
If there are a few empty bytes left in it, it is nice for the disk partitioning software (that writes this MBR sector in the first place) to
try to put unique values into those empty bytes. "Unique" in this case means that the IDs of all the drives attached to a particular system
are distinct.
</p>
<h2> <span class="mw-headline" id="Traditional_MBR">Traditional MBR</span></h2>
<p>The DOS FDISK program was the first to ever use an MBR, so that MBR became the de-facto standard.
It also automatically became the standard for the minimum level of functionality of an MBR. It was never
changed after it was first introduced.
</p><p>The whole point of the FDISK program is to manipulate the MBRs of the hard disks attached to a system.
When FDISK partitions a blank disk, it writes an MBR to sector 0 of the drive. When FDISK adds a new partition
to a disk, it adds an entry into the Partition Table in the MBR. When FDISK makes a partition "active",
it sets the "flag" byte in the Partition Table entry to 0x80.
</p><p>The MBR that FDISK uses is coded to:
</p>
<ul><li> relocate itself to <tt>0x0000:0x0600</tt>
</li><li> examine the byte at offset 0x1be, 0x1ce, 0x1de, and 0x1ee to determine the active partition
</li><li> load only the first sector of the active partition (which is expected to contain a DOS bootsector) to <tt>0x0000:0x7c00</tt> (hence the previous relocation)
</li><li> set SI
</li><li> jump to 0x7c00 -- transferring control to the DOS bootsector.
</li></ul>
<p>It is extremely unfortunate and stupid that this MBR loads only one sector of the booted partition. There is no
additional complication to load more than one sector in the code; but doing so makes writing bootloaders <b>much</b> simpler
if, perhaps, 8 sectors are loaded instead. So it may be wise to always replace this old MBR with a custom MBR that loads
more than one sector, for your OS. DOS/Windows will still boot correctly if more than one sector is loaded.
</p>
<h2> <span class="mw-headline" id="Dual_Booting">Dual Booting</span></h2>
<p>A typical system may have several hard disks on it, and each hard disk can have 4 standard partitions (without
going into the extra complication of Extended Partitions). Each of those partitions could theoretically hold
its own distinct bootable OS, and filesystem.
</p><p>However, the standard x86 boot sequence will only ever boot the MBR from the "C:" disk
(the first disk found during the disk detection phase). And the standard MBR will only allow a single active
partition on that disk, and will only ever boot that one partition. This is really completely inadequate.
</p><p>It is not possible to modify the BIOS/CMOS boot sequence -- but you <i>can</i> change the MBR. So, one solution is to replace the standard MBR
with a "custom, Dual Booting" MBR. (For a good example, see John Fine's SMBMBR in the <a href="MBR_(x86)#External_Links">External Links</a>, below.)
</p><p>A simple dual booting MBR will allow the user to select any partition on the current drive, to boot. A more
complicated dual booting MBR will also allow the user to select other hard disks, or even to specifically
choose other partitions on other hard disks, to boot.
</p><p>For one MBR to load and run a different MBR off a different drive is called "chain loading". If all the MBRs
are dual booting, then the user can cycle through all the disks, and choose to boot the "correct" partition from
the "correct" drive.
</p><p>A dual booting MBR is a huge improvement over the standard MBR. The only problem is that an MBR bootstrap is limited
to a little over 400 bytes of code. Such a tiny program is insufficient to create a "nice" user-friendly dual
booting system that has commercial appeal. It <b>is</b> enough space to hack up an interface that is good enough
for the person who wrote it.
</p><p>One way around this size limitation is to note that a bootloader can contain a <b>lot</b> more code than an MBR. So a custom
MBR can try to load a "preferred" bootloader (if it can find one on some partition, somewhere) -- and that preferred
bootloader can have a very pretty, user-friendly interface that allows the user to select any partition
off any drive, to boot.
</p><p>It is also nice, if there is only one partition on only one drive (ie. there is no choice for a user to make), if the
MBR will boot that one partition automatically -- without bothering the user with prompts.
</p>
<h2> <span class="mw-headline" id="Generic_MBRs">Generic MBRs</span></h2>
<p>As said above, the MBR that is written to the disk by the DOS FDISK program is "the most generic" one. But every disk partitioning
app must write some sort of MBR to the disk, and every generic bootloader may well need a custom MBR.
</p><p>Fortunately, there was a standard for them to conform to (the FDISK MBR), and they all did conform to it. Some of them may be
Dual Booting, or have other features -- but they will all end up loading your bootloader at the standard address (0x7c00),
with the DL register set to the boot "drive number", and DS:SI pointing at the correct partition table entry of the correct
MBR.
</p>
<h2> <span class="mw-headline" id="Building_a_Custom_MBR_Bootstrap_program">Building a Custom MBR Bootstrap program</span></h2>
<p>When the BIOS transfers control to the MBR bootstrap code, the system is in Real mode. The MBR will probably also run entirely
in Real mode, so it is important to understand <a href="Real_Mode#Real_Mode_Memory_Addressing" title="Real Mode">Real mode addressing</a>.
</p><p>Self-relocation is one of the <a href="C#Things_C_can.27t_do" title="C">things C can't do</a>, and most modern C compilers can't create code that is
compatible with Real mode, anyway. So an MBR must be written in <a href="Assembly" title="Assembly">Assembly</a>.
</p><p>It is necessary to build an MBR that is exactly 512 bytes long. How this is done depends on your assembler and linker.
The last 2 bytes must be the special boot pattern (0x55 followed by 0xAA), and as said above, the bootstrap portion of the
MBR must be less than 447 bytes long. You must also copy at least one partition table entry into the Partition Table
portion of the MBR.
</p>
<h3> <span class="mw-headline" id="Initial_Environment">Initial Environment</span></h3>
<p>When the BIOS loads and runs an MBR, it is loaded into memory at physical address 0x7c00. This is <i>usually</i> <tt>0x0000:0x7c00</tt>
(CS = 0, offset address 0x7c00). However, some BIOSes load
to <tt>0x7c0:0x0000</tt> (CS = 0x07c0, offset address 0) -- which resolves to the same physical address, but can cause problems.
A good practice is to enforce CS:IP with a far jump near the beginning of your bootstrap code.
The MBR will probably need to immediately relocate itself anyway, and that is a good time to enforce CS:IP.
</p><p>The BIOS passes very little useful information directly to the MBR. In fact, the only important number is the value in DL -- the "drive
number". It needs to be passed to all later calls to BIOS function INT 13h, so that byte in DL probably needs to be saved carefully.
</p><p>The values in all the other registers, and in most of memory, are undefined.
</p>
<h3> <span class="mw-headline" id="Immediate_Priorities">Immediate Priorities</span></h3>
<p>It is important to immediately set up a <a href="Stack" title="Stack">stack</a>, and also to set the rest of the CPU's segment registers
(DS, ES, FS, GS) properly. Setting up a stack involves pointing the SS:SP pair of registers at some memory that is not being used for anything
else (and the address must be even). The other segment registers should usually be set to 0.
</p><p>See the <a href="Memory_Map_(x86)" title="Memory Map (x86)">Memory Map (x86)</a> article to understand what memory is available during boot (low memory from 0x500 to 0x7ffff, generally).
</p><p>In general, you do not want to fragment your available memory, or the memory of each 64K "page", if possible. The MBR needs a stack,
and a place to relocate itself to. The MBR will be loading a bootloader at 0x7c00, so it is reasonably convenient for the MBR to
relocate itself either to somewhere around the 0x500 to 0x600 address range, or to 0x7a00 (ie. just below 0x7c00). The stack can then
point to 0x7c00 (if the MBR is not at 0x7a00), or the stack can be just below the relocated MBR.
</p>
<h2> <span class="mw-headline" id="Storing_an_MBR_to_the_disk">Storing an MBR to the disk</span></h2>
<p>To write an MBR to the first sector of a disk, you must use special disk I/O tools, because the MBR (by definition) is not inside any disk partition.
The MBR only exists on the "raw device". There are quite a few "disk editing" tools available; some are listed in
<a href="Category:Disk_Image_Utilities" title="Category:Disk Image Utilities">Disk Image Utilities</a>.
</p>
<h2> <span class="mw-headline" id="x86_Examples">x86 Examples</span></h2>
<p>Assuming one knows how to read sectors from disk and has setup a function allowing them to do so, and assuming the inputs to said function are:
</p>
<ul><li> EBX - 32-bit LBA Address
</li><li> CX - Sector Count
</li><li> ES:DI - Buffer
</li><li> BYTE [bootDrive] - Drive Number<br />
</li></ul>
<p>An extremely simple MBR complying to the standard could look like:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="asm source-asm"><pre class="de1"><span class="br0">&#91;</span>bits <span class="nu0">16</span><span class="br0">&#93;</span>
<span class="br0">&#91;</span><span class="kw4">org</span> <span class="nu0">0x0600</span><span class="br0">&#93;</span>
&#160;
start<span class="sy0">:</span>
  <span class="kw1">cli</span>                         <span class="co1">; We do not want to be interrupted</span>
  <span class="kw1">xor</span> <span class="kw3">ax</span><span class="sy0">,</span> <span class="kw3">ax</span>                  <span class="co1">; 0 AX</span>
  <span class="kw1">mov</span> <span class="kw3">ds</span><span class="sy0">,</span> <span class="kw3">ax</span>                  <span class="co1">; Set Data Segment to 0</span>
  <span class="kw1">mov</span> <span class="kw3">es</span><span class="sy0">,</span> <span class="kw3">ax</span>                  <span class="co1">; Set Extra Segment to 0</span>
  <span class="kw1">mov</span> <span class="kw3">ss</span><span class="sy0">,</span> <span class="kw3">ax</span>                  <span class="co1">; Set Stack Segment to 0</span>
  <span class="kw1">mov</span> <span class="kw3">sp</span><span class="sy0">,</span> <span class="kw3">ax</span>                  <span class="co1">; Set Stack Pointer to 0</span>
  <span class="sy0">.</span>CopyLower<span class="sy0">:</span>
    <span class="kw1">mov</span> <span class="kw3">cx</span><span class="sy0">,</span> <span class="nu0">0x0100</span>            <span class="co1">; 256 WORDs in MBR</span>
    <span class="kw1">mov</span> <span class="kw3">si</span><span class="sy0">,</span> <span class="nu0">0x7C00</span>            <span class="co1">; Current MBR Address</span>
    <span class="kw1">mov</span> <span class="kw3">di</span><span class="sy0">,</span> <span class="nu0">0x0600</span>            <span class="co1">; New MBR Address</span>
    <span class="kw1">rep</span> <span class="kw1">movsw</span>                 <span class="co1">; Copy MBR</span>
  <span class="kw1">jmp</span> <span class="nu0">0</span><span class="sy0">:</span>LowStart              <span class="co1">; Jump to new Address</span>
&#160;
LowStart<span class="sy0">:</span>
  <span class="kw1">sti</span>                         <span class="co1">; Start interrupts</span>
  <span class="kw1">mov</span> <span class="kw5">BYTE</span> <span class="br0">&#91;</span>bootDrive<span class="br0">&#93;</span><span class="sy0">,</span> <span class="kw3">dl</span>    <span class="co1">; Save BootDrive</span>
  <span class="sy0">.</span>CheckPartitions<span class="sy0">:</span>           <span class="co1">; Check Partition Table For Bootable Partition</span>
    <span class="kw1">mov</span> <span class="kw3">bx</span><span class="sy0">,</span> PT1               <span class="co1">; Base = Partition Table Entry 1</span>
    <span class="kw1">mov</span> <span class="kw3">cx</span><span class="sy0">,</span> <span class="nu0">4</span>                 <span class="co1">; There are 4 Partition Table Entries</span>
    <span class="sy0">.</span>CKPTloop<span class="sy0">:</span>
      <span class="kw1">mov</span> <span class="kw3">al</span><span class="sy0">,</span> <span class="kw5">BYTE</span> <span class="br0">&#91;</span><span class="kw3">bx</span><span class="br0">&#93;</span>       <span class="co1">; Get Boot indicator bit flag</span>
      <span class="kw1">test</span> <span class="kw3">al</span><span class="sy0">,</span> <span class="nu0">0x80</span>           <span class="co1">; Check For Active Bit</span>
      <span class="kw1">jnz</span> <span class="sy0">.</span>CKPTFound          <span class="co1">; We Found an Active Partition</span>
      <span class="kw1">add</span> <span class="kw3">bx</span><span class="sy0">,</span> <span class="nu0">0x10</span>            <span class="co1">; Partition Table Entry is 16 Bytes</span>
      <span class="kw1">dec</span> <span class="kw3">cx</span>                  <span class="co1">; Decrement Counter</span>
      <span class="kw1">jnz</span> <span class="sy0">.</span>CKPTloop           <span class="co1">; Loop</span>
    <span class="kw1">jmp</span> <span class="kw5">ERROR</span>                 <span class="co1">; ERROR!</span>
    <span class="sy0">.</span>CKPTFound<span class="sy0">:</span>
      <span class="kw1">mov</span> <span class="kw5">WORD</span> <span class="br0">&#91;</span>PToff<span class="br0">&#93;</span><span class="sy0">,</span> <span class="kw3">bx</span>    <span class="co1">; Save Offset</span>
      <span class="kw1">add</span> <span class="kw3">bx</span><span class="sy0">,</span> <span class="nu0">8</span>               <span class="co1">; Increment Base to LBA Address</span>
  <span class="sy0">.</span>ReadVBR<span class="sy0">:</span>
    <span class="kw1">mov</span> <span class="kw3">EBX</span><span class="sy0">,</span> <span class="kw5">DWORD</span> <span class="br0">&#91;</span><span class="kw3">bx</span><span class="br0">&#93;</span>       <span class="co1">; Start LBA of Active Partition</span>
    <span class="kw1">mov</span> <span class="kw3">di</span><span class="sy0">,</span> <span class="nu0">0x7C00</span>            <span class="co1">; We Are Loading VBR to 0x07C0:0x0000</span>
    <span class="kw1">mov</span> <span class="kw3">cx</span><span class="sy0">,</span> <span class="nu0">1</span>                 <span class="co1">; Only one sector</span>
    <span class="kw1">call</span> ReadSectors          <span class="co1">; Read Sector</span>
&#160;
  <span class="sy0">.</span>jumpToVBR<span class="sy0">:</span>
    <span class="kw1">cmp</span> <span class="kw5">WORD</span> <span class="br0">&#91;</span><span class="nu0">0x7DFE</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="nu0">0xAA55</span> <span class="co1">; Check Boot Signature</span>
    <span class="kw1">jne</span> <span class="kw5">ERROR</span>                 <span class="co1">; Error if not Boot Signature</span>
    <span class="kw1">mov</span> <span class="kw3">si</span><span class="sy0">,</span> <span class="kw5">WORD</span> <span class="br0">&#91;</span>PToff<span class="br0">&#93;</span>      <span class="co1">; Set DS:SI to Partition Table Entry</span>
    <span class="kw1">mov</span> <span class="kw3">dl</span><span class="sy0">,</span> <span class="kw5">BYTE</span> <span class="br0">&#91;</span>bootDrive<span class="br0">&#93;</span>  <span class="co1">; Set DL to Drive Number</span>
    <span class="kw1">jmp</span> <span class="nu0">0x7C00</span>                <span class="co1">; Jump To VBR</span>
&#160;
times <span class="br0">&#40;</span><span class="nu0">218</span> <span class="sy0">-</span> <span class="br0">&#40;</span>$<span class="sy0">-</span>$$<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">nop</span>      <span class="co1">; Pad for disk time stamp</span>
&#160;
DiskTimeStamp times <span class="nu0">8</span> <span class="kw4">db</span> <span class="nu0">0</span>    <span class="co1">; Disk Time Stamp</span>
&#160;
bootDrive <span class="kw4">db</span> <span class="nu0">0</span>                <span class="co1">; Our Drive Number Variable</span>
PToff <span class="kw4">dw</span> <span class="nu0">0</span>                    <span class="co1">; Our Partition Table Entry Offset</span>
&#160;
times <span class="br0">&#40;</span><span class="nu0">0x1b4</span> <span class="sy0">-</span> <span class="br0">&#40;</span>$<span class="sy0">-</span>$$<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">nop</span>    <span class="co1">; Pad For MBR Partition Table</span>
&#160;
UID times <span class="nu0">10</span> <span class="kw4">db</span> <span class="nu0">0</span>             <span class="co1">; Unique Disk ID</span>
PT1 times <span class="nu0">16</span> <span class="kw4">db</span> <span class="nu0">0</span>             <span class="co1">; First Partition Entry</span>
PT2 times <span class="nu0">16</span> <span class="kw4">db</span> <span class="nu0">0</span>             <span class="co1">; Second Partition Entry</span>
PT3 times <span class="nu0">16</span> <span class="kw4">db</span> <span class="nu0">0</span>             <span class="co1">; Third Partition Entry</span>
PT4 times <span class="nu0">16</span> <span class="kw4">db</span> <span class="nu0">0</span>             <span class="co1">; Fourth Partition Entry</span>
&#160;
<span class="kw4">dw</span> <span class="nu0">0xAA55</span>                     <span class="co1">; Boot Signature</span></pre></div></div>
<p>Of course this is an extremely simplified MBR, and is only able to load the [first] active partition.
</p>
<h2> <span class="mw-headline" id="Comments">Comments</span></h2>
<h2> <span class="mw-headline" id="See_Also">See Also</span></h2>
<h3> <span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li> <a href="System_Initialization_(x86)" title="System Initialization (x86)">System Initialization (x86)</a>
</li></ul>
<h3> <span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li> <a rel="nofollow" class="external text" href="http://www.osdever.net/downloads/bootsectors/smbmbr03.zip">Fine's MBR code on osdever</a>
</li><li> <a rel="nofollow" class="external text" href="http://www.nondot.org/sabre/os/articles/TheBootProcess/">OSRC</a> -- for more boot sector info
</li><li> <a rel="nofollow" class="external text" href="http://www.ranish.com/part/">Ranish Partition Manager</a> -- Disk partitioning software
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 117/1000000
Post-expand include size: 162/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1379-0!*!0!!en!*!* and timestamp 20180121052630 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=MBR_(x86)&amp;oldid=19728">http://wiki.osdev.org/index.php?title=MBR_(x86)&amp;oldid=19728</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="Category:X86" title="Category:X86">X86</a></li><li><a href="Category:Bootloaders" title="Category:Bootloaders">Bootloaders</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=MBR_%28x86%29" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="MBR_(x86)"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="Talk:MBR_(x86)"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="MBR_(x86)#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="MBR_(x86)" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=MBR_(x86)&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=MBR_(x86)&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="MBR_(x86)#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="/OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="/OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/MBR_(x86)" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/MBR_(x86)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="/index.php?title=MBR_(x86)&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=MBR_(x86)&amp;oldid=19728" title="Permanent link to this revision of the page">Permanent linskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/MBR_(x86)" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/MBR_(x86)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=MBR_(x86)&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=MBR_(x86)&amp;oldid=19728" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->
<div class="portal" id='p-lang'>
	<h5>In other languages</h5>
	<div class="body">
		<ul>
			<li class="interwiki-de"><a href="http://www.lowlevel.eu/wiki/Master_Boot_Record" title="Master Boot Record">Deutsch</a></li>
		</ul>
	</div>
</div>

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 29 August 2016, at 13:10.</li>
											<li id="footer-info-viewcount">This page has been accessed 88,325 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.047 secs. -->
	</body>
</html>
