<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Opcode syntax - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Opcode_syntax", "wgTitle": "Opcode syntax", "wgCurRevisionId": 17444, "wgArticleId": 1862, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["Assembly"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-bash {line-height: normal;}
.source-bash li, .source-bash pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for bash
 * CSS class: source-bash, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.bash.source-bash .de1, .bash.source-bash .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.bash.source-bash  {font-family:monospace;}
.bash.source-bash .imp {font-weight: bold; color: red;}
.bash.source-bash li, .bash.source-bash .li1 {font-weight: normal; vertical-align:top;}
.bash.source-bash .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.bash.source-bash .li2 {font-weight: bold; vertical-align:top;}
.bash.source-bash .kw1 {color: #000000; font-weight: bold;}
.bash.source-bash .kw2 {color: #c20cb9; font-weight: bold;}
.bash.source-bash .kw3 {color: #7a0874; font-weight: bold;}
.bash.source-bash .co0 {color: #666666; font-style: italic;}
.bash.source-bash .co1 {color: #800000;}
.bash.source-bash .co2 {color: #cc0000; font-style: italic;}
.bash.source-bash .co3 {color: #000000; font-weight: bold;}
.bash.source-bash .co4 {color: #666666;}
.bash.source-bash .es1 {color: #000099; font-weight: bold;}
.bash.source-bash .es2 {color: #007800;}
.bash.source-bash .es3 {color: #007800;}
.bash.source-bash .es4 {color: #007800;}
.bash.source-bash .es5 {color: #780078;}
.bash.source-bash .es_h {color: #000099; font-weight: bold;}
.bash.source-bash .br0 {color: #7a0874; font-weight: bold;}
.bash.source-bash .sy0 {color: #000000; font-weight: bold;}
.bash.source-bash .st0 {color: #ff0000;}
.bash.source-bash .st_h {color: #ff0000;}
.bash.source-bash .nu0 {color: #000000;}
.bash.source-bash .re0 {color: #007800;}
.bash.source-bash .re1 {color: #007800;}
.bash.source-bash .re2 {color: #007800;}
.bash.source-bash .re4 {color: #007800;}
.bash.source-bash .re5 {color: #660033;}
.bash.source-bash .ln-xtra, .bash.source-bash li.ln-xtra, .bash.source-bash div.ln-xtra {background-color: #ffc;}
.bash.source-bash span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Opcode_syntax action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Opcode syntax</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Opcode_syntax#mw-head">navigation</a>,
					<a href="Opcode_syntax#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>The AT&amp;T syntax (as understood by GAS, the GNU assembler) is the standard syntax on most non-Intel platforms, but remains rare on x86 platforms.
However, AT&amp;T syntax is the default for GCC <a href="Inline_Assembly" title="Inline Assembly">Inline Assembly</a>, and it is what objdump will provide you with when debugging your kernel.
</p><p>NASM and FASM use Intel syntax, and Intel syntax is what the <a href="Bochs" title="Bochs">Bochs</a> debugger will provide you when debugging your kernel.
</p>
<h2> <span class="mw-headline" id="Important_Details"> Important Details </span></h2>
<p>There are some substantial differences between the AT&amp;T syntax and the Intel syntax, which a programmer intending to use the GNU tools should be aware of.
Here are a few key things to look for, when moving to AT&amp;T syntax:
</p>
<ul><li><b>Case Sensitivity:</b> MOVL is not the same as movl.
</li><li><b>Numerical Base:</b> expressed as in C: 1 for decimal, 01 for octal, 0x01 for hex. (The Intel postfix-h syntax is not supported.) 
</li><li><b>Escapes:</b> Special characters are written as C-style escapes (\n, \", \#, \\, ...). 
</li><li><b>Comments:</b> Either C-style ( /* ... */ ) or shell style (# ...). 
</li><li><b>Directive syntax:</b> Directives begin with a period (".align 4" to align on a 32-bit boundary, ".word 0x1234" is the equivalent of "DW 1234h"). 
</li><li><b>Strings:</b> Defined using special directives, .ascii (or .asciz for a zero-terminated string). Example: msg: .ascii "Hello, World!\n" 
</li><li><b>Current location address:</b> Indicated by a period (".", equivalent to Intel syntax "$"). 
</li><li><b>Initializing Memory:</b> Done with .fill (roughly equivalent to Intel syntax 'times db'). Example: .fill 0x1fe - (. - START) , 1, 0 (where '1' is the size fill mask in bytes and START is a label marking the entry point of the code) is equal to Intel syntax times 1FEh - ($-$$) db 0. (The .skip and .space directives can be used in a similar manner.) 
</li><li>the <b>code counter</b> can be set multiple times, using the .org directive (as in .org 0x1fe + START, where START is a label marking the entry point of the code. The location-assignment directive, '.=', can be used in the same manner. 
</li><li><b>16/32 bit code</b> can be generated by stating .code16 or .code32 (equivalent to Intel syntax [BITS 16] and [BITS 32], respectively). 
</li><li><b>Target CPU:</b> Set with the .arch directive. It is a Good Idea to set it, even if you are sure that the default is 'i386'. 
</li><li><b>Label Declarations:</b> Always end in a colon. 
</li><li>a <b>new identifier</b> appearing at the beginning of a line, and not ending in a colon, is assumed to be part of an equivalence statement, and must be followed by an equals sign and an assigned value. Example: FOO = 0xF00 
</li><li><b>End of Instruction:</b> Designated either by a newline or with a semi-colon; the latter is primarily seen in macros, to allow multiple lines of code. 
</li><li><b>Line Continuation:</b> As in C, with a backslash ('\') as last character in a line. This also is mostly used in macros. 
</li><li><b>Registers:</b> Always prefixed with a percent sign:&#160;%eax,&#160;%cs,&#160;%esp, etc. 
</li><li><b>Source, Destination:</b> Move, load, store, and similar operations always have operands in the order 'source, destination', which is very unlike Intel syntax. Thus, "movl&#160;%eax,&#160;%ebx" moves the value of&#160;%eax into&#160;%ebx. This is the part that seems to confuse people the most, since it is nearly the opposite of the intel theme: <pre>Opcode    Register/Memory-being-modified, Data, Data</pre>
</li><li><b>Operand Size Suffixes:</b> Always appended to instructions (with the exception of ljmp, lcall, and lret on the x86): movb for "move byte", movw for "move word", movl for "move long", etc.
</li><li><b>Direct-address Operands:</b> are not prefixed. Thus, "movl foo,&#160;%eax" moves the contents of memory location "foo" into&#160;%eax. 
</li><li><b>Immediate Operands:</b> are prefixed with a dollar sign ($): "pushl $4" pushes 0x00000004 onto the stack. This applies to labels as well: "movl $foo,&#160;%eax" moves the value of the label foo (that is, the address of variable foo) into&#160;%eax. 
</li><li><b>Indexed / Indirect Operands:</b> are used in the format segment:displacement (base, index, scale), like so: movl&#160;%eax,&#160;%ss:8(%ebp, 2, 3) (which is equivalent to Intel syntax mov dword [ss:ebp + 2 * 3 + 8], eax, that is, it moves the value of&#160;%eax to offset (%ebp + (2 *3) + 8) in segment&#160;%ss). Any of the five operands of an indirect address may be omitted. 
</li><li><b>Relative Addressing:</b> Used by default in all jump and call instructions. To use absolute addressing, the operand must be prefixed with an asterisk (*). 
</li><li><b>Far jumps / calls / returns:</b> Use the special opcodes 'ljmp', 'lcall' and 'lret'.
</li></ul>
<p>The AT&amp;T syntax format for macros:
</p><p><code>
.macro &lt;name&gt; &lt;args&gt;
&lt;operations&gt;
.endm
</code>
</p><p>Example:
</p>
<pre>
.macro write string
   movw string,&#160;%si
   call printstr
.endm
</pre>
<p>This would be equivalent to the NASM macro:
</p>
<pre>
%macro write 1
   mov si,&#160;%1
   call printstr
%endmacro
</pre>
<p>Additionally, the cpp and m4 macro preprocessors are often used for macro handling.
</p>
<h2> <span class="mw-headline" id="Converting_small_snippets_of_code_from_Intel_syntax_to_AT.26T"> Converting small snippets of code from Intel syntax to AT&amp;T </span></h2>
<p>You can use the following script to convert short snippets of code (one liners) from Intel syntax to AT&amp;T syntax:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="bash source-bash"><pre class="de1"><span class="co0">#!/bin/bash</span>
<span class="kw1">set</span> <span class="re5">-e</span>
&#160;
<span class="co0"># Usage:</span>
<span class="co0">#</span>
<span class="co0"># ./inteltoatt [16|32|64] &quot;mov eax, eax \n xor ecx, edx&quot;</span>
<span class="co0">#</span>
&#160;
<span class="kw1">case</span> <span class="st0">&quot;$1&quot;</span> <span class="kw1">in</span>
<span class="nu0">16</span><span class="sy0">|</span><span class="nu0">32</span><span class="sy0">|</span><span class="nu0">64</span><span class="br0">&#41;</span>
	<span class="re2">bits</span>=<span class="st0">&quot;$1&quot;</span>
	<span class="kw3">shift</span> <span class="sy0">;;</span>
<span class="sy0">*</span><span class="br0">&#41;</span>
	<span class="re2">bits</span>=<span class="st0">&quot;32&quot;</span> <span class="sy0">;;</span>
<span class="kw1">esac</span>
<span class="re2">code</span>=<span class="st0">&quot;$1&quot;</span>
&#160;
<span class="re2">nasm</span>=<span class="st0">&quot;<span class="es4">$(mktemp)</span>&quot;</span>
<span class="re2">obj</span>=<span class="st0">&quot;<span class="es4">$(mktemp)</span>&quot;</span>
<span class="re2">objdump</span>=<span class="st0">&quot;<span class="es4">$(mktemp)</span>&quot;</span>
&#160;
<span class="kw1">case</span> <span class="st0">&quot;<span class="es2">$bits</span>&quot;</span> <span class="kw1">in</span>
	<span class="nu0">16</span><span class="br0">&#41;</span> <span class="re2">m</span>=<span class="st0">&quot;i8086&quot;</span>       <span class="sy0">;;</span>
	<span class="nu0">32</span><span class="br0">&#41;</span> <span class="re2">m</span>=<span class="st0">&quot;i386&quot;</span>        <span class="sy0">;;</span>
	<span class="nu0">64</span><span class="br0">&#41;</span> <span class="re2">m</span>=<span class="st0">&quot;i386:x86-64&quot;</span> <span class="sy0">;;</span>
<span class="kw1">esac</span>
&#160;
<span class="kw3">echo</span> <span class="re5">-e</span> <span class="st0">&quot;BITS <span class="es2">$bits</span><span class="es1">\n</span><span class="es2">$code</span>&quot;</span> <span class="sy0">&gt;</span> <span class="st0">&quot;<span class="es2">$nasm</span>&quot;</span>
&#160;
<span class="kw2">nasm</span> <span class="st0">&quot;<span class="es2">$nasm</span>&quot;</span> <span class="re5">-o</span> <span class="st0">&quot;<span class="es2">$obj</span>&quot;</span>
objdump <span class="re5">-D</span> <span class="re5">-b</span> binary <span class="re5">-m</span> <span class="re1">$m</span> <span class="re5">-Maddr</span><span class="co1">${bits}</span>,data<span class="co1">${bits}</span> <span class="st0">&quot;<span class="es2">$obj</span>&quot;</span> <span class="sy0">&gt;</span> <span class="st0">&quot;<span class="es2">$objdump</span>&quot;</span>
&#160;
<span class="re2">lineno</span>=<span class="st0">&quot;<span class="es4">$(egrep -m 1 -n '&lt;\.data&gt;\:$' &quot;$objdump&quot; | cut -d':' -f1)</span>&quot;</span>
<span class="re2">lineno</span>=$<span class="br0">&#40;</span><span class="br0">&#40;</span>lineno+<span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&#160;
<span class="kw2">tail</span> <span class="re5">-n</span> +<span class="re1">$lineno</span> <span class="st0">&quot;<span class="es2">$objdump</span>&quot;</span></pre></div></div>
<h2> <span class="mw-headline" id="Sources"> Sources </span></h2>
<ul><li><a rel="nofollow" class="external text" href="http://www.delorie.com/djgpp/v2faq/faq17_1.html">DJGPP AT&amp;T Assembly Tutorial</a>
</li><li><a rel="nofollow" class="external text" href="http://asm.sourceforge.net//howto/Assembly-HOWTO.html">Linux Assembly HOWTO</a>
</li><li><a rel="nofollow" class="external text" href="https://savannah.nongnu.org/projects/gas-user/">GAS/AS End User Help Project</a>
</li><li><a rel="nofollow" class="external text" href="http://www.gnu.org/software/binutils/manual/gas-2.9.1/html_chapter/as_toc.html">Using as</a>
</li><li><a rel="nofollow" class="external text" href="http://savannah.nongnu.org/projects/pgubook/">Programming from the Ground Up</a>
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 55/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1862-0!*!0!!*!*!* and timestamp 20180121044612 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Opcode_syntax&amp;oldid=17444">http://wiki.osdev.org/index.php?title=Opcode_syntax&amp;oldid=17444</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="Category:Assembly" title="Category:Assembly">Assembly</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Opcode_syntax" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Opcode_syntax"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="Talk:Opcode_syntax"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Opcode_syntax#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Opcode_syntax" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Opcode_syntax&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Opcode_syntax&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Opcode_syntax#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="/OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="/OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
skins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Opcode_syntax" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Opcode_syntax" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Opcode_syntax&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Opcode_syntax&amp;oldid=17444" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 1 January 2015, at 14:12.</li>
											<li id="footer-info-viewcount">This page has been accessed 33,040 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.033 secs. -->
	</body>
</html>
