<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Mouse Input - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Mouse_Input", "wgTitle": "Mouse Input", "wgCurRevisionId": 20989, "wgArticleId": 1909, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["Human Interface Device"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Mouse_Input action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Mouse Input</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Mouse_Input#mw-head">navigation</a>,
					<a href="Mouse_Input#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Mouse_Input#PC_Mouse_Interfaces"><span class="tocnumber">1</span> <span class="toctext">PC Mouse Interfaces</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Mouse_Input#USB_Mouse"><span class="tocnumber">1.1</span> <span class="toctext">USB Mouse</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="Mouse_Input#Bochs"><span class="tocnumber">1.2</span> <span class="toctext">Bochs</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="Mouse_Input#PS2_Mouse_--_Basic_Operation_.28Microsoft_compliant.29"><span class="tocnumber">1.3</span> <span class="toctext">PS2 Mouse -- Basic Operation (Microsoft compliant)</span></a>
<ul>
<li class="toclevel-3 tocsection-5"><a href="Mouse_Input#Keyboard.2FAux_Data_Bit"><span class="tocnumber">1.3.1</span> <span class="toctext">Keyboard/Aux Data Bit</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="Mouse_Input#PS2_Mouse_Subtypes"><span class="tocnumber">1.3.2</span> <span class="toctext">PS2 Mouse Subtypes</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="Mouse_Input#Mouse_Packet_Info"><span class="tocnumber">1.3.3</span> <span class="toctext">Mouse Packet Info</span></a>
<ul>
<li class="toclevel-4 tocsection-8"><a href="Mouse_Input#Timing.2FGeneration_of_Mouse_Packets"><span class="tocnumber">1.3.3.1</span> <span class="toctext">Timing/Generation of Mouse Packets</span></a></li>
<li class="toclevel-4 tocsection-9"><a href="Mouse_Input#Format_of_First_3_Packet_Bytes"><span class="tocnumber">1.3.3.2</span> <span class="toctext">Format of First 3 Packet Bytes</span></a></li>
<li class="toclevel-4 tocsection-10"><a href="Mouse_Input#Formats_of_Optional_4th_Packet_Byte"><span class="tocnumber">1.3.3.3</span> <span class="toctext">Formats of Optional 4th Packet Byte</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-11"><a href="Mouse_Input#Non-Linear_Movement"><span class="tocnumber">1.3.4</span> <span class="toctext">Non-Linear Movement</span></a></li>
<li class="toclevel-3 tocsection-12"><a href="Mouse_Input#Doubleclicks"><span class="tocnumber">1.3.5</span> <span class="toctext">Doubleclicks</span></a></li>
<li class="toclevel-3 tocsection-13"><a href="Mouse_Input#Timeouts.2FMouse_Disconnect"><span class="tocnumber">1.3.6</span> <span class="toctext">Timeouts/Mouse Disconnect</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-14"><a href="Mouse_Input#PS2_Mouse_Commands"><span class="tocnumber">1.4</span> <span class="toctext">PS2 Mouse Commands</span></a>
<ul>
<li class="toclevel-3 tocsection-15"><a href="Mouse_Input#Waiting_to_Send_Bytes_to_Port_0x60_and_0x64"><span class="tocnumber">1.4.1</span> <span class="toctext">Waiting to Send Bytes to Port 0x60 and 0x64</span></a></li>
<li class="toclevel-3 tocsection-16"><a href="Mouse_Input#0xD4_Byte.2C_Command_Byte.2C_Data_Byte"><span class="tocnumber">1.4.2</span> <span class="toctext">0xD4 Byte, Command Byte, Data Byte</span></a></li>
<li class="toclevel-3 tocsection-17"><a href="Mouse_Input#Wait_for_ACK_from_Mouse"><span class="tocnumber">1.4.3</span> <span class="toctext">Wait for ACK from Mouse</span></a></li>
<li class="toclevel-3 tocsection-18"><a href="Mouse_Input#Useful_Mouse_Command_Set"><span class="tocnumber">1.4.4</span> <span class="toctext">Useful Mouse Command Set</span></a></li>
<li class="toclevel-3 tocsection-19"><a href="Mouse_Input#Additional_Useless_Mouse_Commands"><span class="tocnumber">1.4.5</span> <span class="toctext">Additional Useless Mouse Commands</span></a>
<ul>
<li class="toclevel-4 tocsection-20"><a href="Mouse_Input#Resolution.2C_Scaling_and_Sample_Rate"><span class="tocnumber">1.4.5.1</span> <span class="toctext">Resolution, Scaling and Sample Rate</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-2 tocsection-21"><a href="Mouse_Input#Initializing_a_PS2_Mouse"><span class="tocnumber">1.5</span> <span class="toctext">Initializing a PS2 Mouse</span></a>
<ul>
<li class="toclevel-3 tocsection-22"><a href="Mouse_Input#PS.2F2_Device_Unplugging.2FHot_Plugging"><span class="tocnumber">1.5.1</span> <span class="toctext">PS/2 Device Unplugging/Hot Plugging</span></a>
<ul>
<li class="toclevel-4 tocsection-23"><a href="Mouse_Input#Set_Compaq_Status.2FEnable_IRQ12"><span class="tocnumber">1.5.1.1</span> <span class="toctext">Set Compaq Status/Enable IRQ12</span></a></li>
<li class="toclevel-4 tocsection-24"><a href="Mouse_Input#Aux_Input_Enable_Command"><span class="tocnumber">1.5.1.2</span> <span class="toctext">Aux Input Enable Command</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-25"><a href="Mouse_Input#Mouse_State_at_Power-on"><span class="tocnumber">1.5.2</span> <span class="toctext">Mouse State at Power-on</span></a></li>
<li class="toclevel-3 tocsection-26"><a href="Mouse_Input#MouseID_Byte"><span class="tocnumber">1.5.3</span> <span class="toctext">MouseID Byte</span></a></li>
<li class="toclevel-3 tocsection-27"><a href="Mouse_Input#Init.2FDetection_Command_Sequences"><span class="tocnumber">1.5.4</span> <span class="toctext">Init/Detection Command Sequences</span></a></li>
<li class="toclevel-3 tocsection-28"><a href="Mouse_Input#Enable_Packets"><span class="tocnumber">1.5.5</span> <span class="toctext">Enable Packets</span></a></li>
<li class="toclevel-3 tocsection-29"><a href="Mouse_Input#Streaming_Advantages_and_Disadvantages"><span class="tocnumber">1.5.6</span> <span class="toctext">Streaming Advantages and Disadvantages</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-30"><a href="Mouse_Input#PC_Serial_Mouse"><span class="tocnumber">1.6</span> <span class="toctext">PC Serial Mouse</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-31"><a href="Mouse_Input#Mac_Mouse_Interface"><span class="tocnumber">2</span> <span class="toctext">Mac Mouse Interface</span></a></li>
<li class="toclevel-1 tocsection-32"><a href="Mouse_Input#See_Also"><span class="tocnumber">3</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-33"><a href="Mouse_Input#Threads"><span class="tocnumber">3.1</span> <span class="toctext">Threads</span></a></li>
<li class="toclevel-2 tocsection-34"><a href="Mouse_Input#External_Links"><span class="tocnumber">3.2</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="PC_Mouse_Interfaces">PC Mouse Interfaces</span></h2>
<p>Current PCs generally use PS2 mice, or a similar format that emulates a PS2 mouse. Serial mice are a much
older technology that is no longer common.
</p>
<h3> <span class="mw-headline" id="USB_Mouse">USB Mouse</span></h3>
<p>A USB mouse generally emulates a PS2 mouse, except that it generates IRQs from the USB bus, and not IRQ 12. Good idea is to also select the checkbox "enable mouse capture". "Mouse toggle method" enables you to choose from a list hotkey to switch between mouse capture enabled or disabled.
</p>
<h3> <span class="mw-headline" id="Bochs">Bochs</span></h3>
<p>If you use bochs, and want your mouse to emulate PS2 mouse, you need to edit keyboard &amp; mouse settings and set mouse type to either "ps2" (this is the mouse without mouse wheel button) or "imps2" (this is the mouse with mouse wheel button).
</p>
<h3> <span class="mw-headline" id="PS2_Mouse_--_Basic_Operation_.28Microsoft_compliant.29">PS2 Mouse -- Basic Operation (Microsoft compliant)</span></h3>
<p>Once a mouse has been initialized (see below), a mouse sends 3 or 4 byte packets to communicate mouse
movement, and mouse button press/release events. These packets show up asynchronously as data on IO port 0x60.
Even though the data shows up on port 0x60 (the keyboard port), it does <i>not</i> trigger an IRQ1. The only
way that you will know that mouse data has arrived is if you handle an appropriate IRQ (generally IRQ12), or
if you occasionally poll bit number 0 (value=1) of port 0x64, to see if data is available on port 0x60. It is
not necessary to handle all of the following things inside the driver, but doing so can make things work faster.
</p>
<h4> <span class="mw-headline" id="Keyboard.2FAux_Data_Bit">Keyboard/Aux Data Bit</span></h4>
<p>Since both keyboard and mouse data is showing up to be read on port 0x60, it is necessary to be able to tell
which is which. To tell if there is any available data on port 0x60 at all, it is necessary
to read a byte from port 0x64. In that byte from port 0x64, bit number 0 (value=1) indicates that a byte is
available to be read on port 0x60. An additional bit, bit number 5 (value=0x20), indicates that this next byte
came from the mouse, if the bit is set. If you look at <a href="RBIL" title="RBIL" class="mw-redirect">RBIL</a>, it says that this "mouse bit" is MCA specific,
but this is no longer true. All PCs that support PS2 mice use this bit to indicate that the incoming byte was
generated by the auxiliary PS2 input port.
</p>
<h4> <span class="mw-headline" id="PS2_Mouse_Subtypes"> PS2 Mouse Subtypes</span></h4>
<p>There are several types of mice, but they can be separated into two groups, depending on whether they have a scroll wheel.
Mice with scroll wheels can send an additional byte in each mouse packet,
indicating the status of mouse wheels and extra buttons.
</p><p>Mice with no scroll wheels use 3 byte packets exclusively. Mice with scroll wheels and up to
5 buttons (currently) can send 4 byte packets, if they are initialized properly.
</p>
<h4> <span class="mw-headline" id="Mouse_Packet_Info">Mouse Packet Info</span></h4>
<p>For even greater detail on Microsoft compliant PS2 mouse packets than what is presented next: reference the links below,
or search for the Adam Chapweske article. For mice that are not MS-compliant, see the Linux article.
</p>
<h5> <span class="mw-headline" id="Timing.2FGeneration_of_Mouse_Packets">Timing/Generation of Mouse Packets</span></h5>
<p>A mouse is usually initialized to generate movement packets at a particular rate. The default rate is 100 packets
per second if the mouse is being moved. A mouse also generates a packet if a button is either pressed
or released. If the mouse is not moving and no buttons are being clicked a mouse will not generate any automatic
packets.
</p>
<h5> <span class="mw-headline" id="Format_of_First_3_Packet_Bytes">Format of First 3 Packet Bytes</span></h5>
<p>Even if your mouse is sending 4 byte packets, the first 3 bytes always have the same format. The first byte has
a bunch of bit flags. The second byte is the "delta X" value -- that is, it measures horizontal mouse movement,
with left being negative. The third byte is "delta Y", with down (toward the user) being negative. Typical values
for deltaX and deltaY are one or two for slow movement, and perhaps 20 for very fast movement. Maximum possible
values are +255 to -256 (they are 9-bit quantities, two's complement).
<br />
<br />
byte 1:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> Y overflow
</th>
<th> X overflow
</th>
<th> Y sign bit
</th>
<th> X sign bit
</th>
<th> Always 1
</th>
<th> Middle Btn
</th>
<th> Right Btn
</th>
<th> Left Btn
</th></tr></table>
<p><br />
byte 2:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th>  X movement
</th></tr></table>
<p><br />
byte 3:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th>  Y movement
</th></tr></table>
<p>The top two bits of the first byte (values 0x80 and 0x40) supposedly show Y and X overflows, respectively. They
are not useful. If they are set, you should probably just discard the entire packet.
</p><p>Bit number 5 of the first byte (value 0x20) indicates that delta Y (the 3rd byte) is a negative number, if it is set.
This means that you should OR 0xFFFFFF00 onto the value of delta Y, as a sign extension (if using 32 bits).
</p><p>Bit number 4 of the first byte (value 0x10) indicates that delta X (the 2nd byte) is a negative number, if it is set.
This means that you should OR 0xFFFFFF00 onto the value of delta X, as a sign extension (if using 32 bits).
</p><p>Bit number 3 of the first byte (value 0x8) is supposed to be always set. This helps to maintain and verify packet
alignment. Unfortunately, some older mice (such as 10 year old Microspeed 2 button trackballs) do not set this bit.
<a href="RBIL" title="RBIL" class="mw-redirect">RBIL</a> claims that this bit should be 0, but it is wrong.
</p><p>The bottom 3 bits of the first byte indicate whether the middle, right, or left mouse buttons are currently being
held down, if the respective bit is set. Middle = bit 2 (value=4), right = bit 1 (value=2), left = bit 0 (value=1).
</p>
<h5> <span class="mw-headline" id="Formats_of_Optional_4th_Packet_Byte">Formats of Optional 4th Packet Byte</span></h5>
<p>If the mouse has been initalized so that its mouseID is 3 or 4, it will send a 4th byte in each packet. On all current
mice, the top two bits should be ignored. On some mice, the bits will flip between 0 and 1, based on scroll wheeel
movement. If the mouse has a 4th and 5th mouse button, then their state is indicated by bit 4 (value=0x10), and bit
5 (value=0x20), respectively. Note: if the buttons <i>do not</i> exist, then these bits may flip based on scroll
wheel movement! (ie. Be careful that this does not generate spurious "mouse button click" events for buttons that
do not exist.)
</p><p>The bottom nibble (4 bits) of the 4th byte will be one of the following values:
</p>
<ul><li> 0 -- no scroll wheel movement
</li><li> 1 -- vertical scroll up one click
</li><li> 0xF -- vertical scroll down one click
</li><li> 2 -- horizontal scroll right one click
</li><li> 0xE -- horizontal scroll left one click
</li></ul>
<p>When only the vertical scrollwheel exists or has been activated, the 4th packet byte simply contains:
<br />
byte 4:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th>  Z movement
</th></tr></table>
<p>However, if the mouse has extra buttons and gets initialized properly, then it will look like this:
<br />
byte 4:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> Mostly 0
</th>
<th> Mostly 0
</th>
<th> 5th btn down (pressed)
</th>
<th> 4th btn down (pressed)
</th>
<th> Z3
</th>
<th> Z2
</th>
<th> Z1
</th>
<th> Z0
</th></tr></table>
<p>Where Z0 though Z3 is a 4 bit signed value of the Z movement (scrollwheel), with the values mentioned above (0, 1, 2, 0xE, 0xF)
and with the meanings listed above.
</p>
<h4> <span class="mw-headline" id="Non-Linear_Movement">Non-Linear Movement</span></h4>
<p>When a user is trying to point at something on a screen, they will quickly move the mouse in the general direction
of the target, and then slow down to accurately point at it. The deltaX/Y values from the mouse packets
can be used directly, but doing that will force the user to move the mouse very far to get the cursor from one area of the
screen to another.
</p><p>A better answer may be to scale the mouse movement by additional multiples, based on how fast the mouse is moving.
If the mouse is moving slowly, the scale factor can be 1 -- to allow the highest possible sensitivity. When the mouse
is (or has been) moving fast, the scale factor could be 5 or 10, to allow the cursor to move across large distances on
the screen quickly.
</p><p>There are many ways to do such scaling, obviously. If you are coding the driver in assembler, one suggestion might
be to use the BSR command to generate an approximate log base2 of deltaX plus deltaY, and use that as your scaling factor.
</p>
<h4> <span class="mw-headline" id="Doubleclicks">Doubleclicks</span></h4>
<p>If you intend to implement a doubleclick, you will need to record timestamps of mousedown events to high accuracy.
The only way to know if a doubleclick has occurred is to know how long ago the previous click of the mouse button
happened. If the delay between the two clicks was less than some threshhold, then it was a doubleclick. The problem
here is that you need to be able to measure very short delays, and there may be extremely long delays between clicks (days, perhaps) --
long enough that your timestamp measurement might overflow. This needs to be handled carefully.
</p>
<h4> <span class="mw-headline" id="Timeouts.2FMouse_Disconnect">Timeouts/Mouse Disconnect</span></h4>
<p>If a mouse is operating normally but is not being moved or clicked, it will not send any packets. If a mouse has been unplugged,
it will also not send any packets. If you want to support "hot plugging" of PS2 mice, then you need to know when a mouse has
become disconnected, because you will need to reinitialize it. If you have not seen any packets from the mouse for awhile,
you can query the mouse to see if it is still alive. A convenient way to do this is to send a special request for a single
mouse packet (mouse command 0xEB). You will get back an ACK (0xFA) from the mouse, and then
a mouse packet (with everything set to 0, probably). Please note that you need to make sure that the 0xFA does not
cause a misalignment of your input mouse packet. Also please note that if the contents of the mouse packet are <i>not</i> 0,
then that means that somehow your mouse packets have become disabled.
</p><p>In general, it is a good idea to also have timeouts everywhere that the system is waiting for a response from the mouse,
because it may never come.
</p>
<h3> <span class="mw-headline" id="PS2_Mouse_Commands">PS2 Mouse Commands</span></h3>
<p>After the PS2 Aux port has been enabled, you can send commands to the mouse. It is recommended to disable automatic packet
streaming mode while "reprogramming" the mouse. You can do this by either sending command 0xF5 to the mouse, or disabling
the "master mouse clock" by setting bit 5 of the Compaq Status byte (see below).
</p>
<h4> <span class="mw-headline" id="Waiting_to_Send_Bytes_to_Port_0x60_and_0x64">Waiting to Send Bytes to Port 0x60 and 0x64</span></h4>
<p>All output to port 0x60 or 0x64 must be preceded by waiting for bit 1 (value=2) of port 0x64 to become clear. Similarly,
bytes cannot be read from port 0x60 until bit 0 (value=1) of port 0x64 is set. See <a href="PS2_Keyboard" title="PS2 Keyboard" class="mw-redirect">PS2 Keyboard</a> for further details.
</p>
<h4> <span class="mw-headline" id="0xD4_Byte.2C_Command_Byte.2C_Data_Byte">0xD4 Byte, Command Byte, Data Byte</span></h4>
<p>Sending a command or data byte to the mouse (to port 0x60) must be preceded by sending a 0xD4 byte to port 0x64 (with appropriate
waits on port 0x64, bit 1, before sending each output byte). Note: this 0xD4 byte does <i>not</i> generate any ACK, from
either the keyboard or mouse.
</p>
<h4> <span class="mw-headline" id="Wait_for_ACK_from_Mouse">Wait for ACK from Mouse</span></h4>
<p>It is required to wait until the mouse sends back the 0xFA acknowledgement byte after each command or data byte before sending the
next byte (Note: reset commands might not be ACK'ed -- wait for the 0xAA after a reset). A few commands require an additional
data byte, and both bytes will generate an ACK.
</p>
<h4> <span class="mw-headline" id="Useful_Mouse_Command_Set">Useful Mouse Command Set</span></h4>
<ul><li>Note: remember that the mouse responds to all command bytes and data bytes with an ACK (0xFA).
</li><li>Note2: the commands given in the table are sent to port 0x60. If a command needs additional byte (like sampling rate), this byte goes to port 0x60 too.
</li></ul>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> Hex value
</th>
<th> Meaning
</th>
<th> Description
</th></tr>
<tr>
<th> 0xFF
</th>
<th> Reset
</th>
<th> The mouse probably sends ACK (0xFA) plus several more bytes, then resets itself, and always sends 0xAA.
</th></tr>
<tr>
<th> 0xFE
</th>
<th> Resend
</th>
<th> This command makes the mouse send its most recent packet to the host again.
</th></tr>
<tr>
<th> 0xF6
</th>
<th> Set Defaults
</th>
<th> Disables streaming, sets the packet rate to 100 per second, and resolution to 4 pixels per mm.
</th></tr>
<tr>
<th> 0xF5
</th>
<th> Disable Packet Streaming
</th>
<th> The mouse stops sending automatic packets.
</th></tr>
<tr>
<th> 0xF4
</th>
<th> Enable Packet Streaming
</th>
<th> The mouse starts sending automatic packets when the mouse moves or is clicked.
</th></tr>
<tr>
<th> 0xF3
</th>
<th> Set Sample Rate
</th>
<th> Requires an additional data byte: automatic packets per second (see below for legal values).
</th></tr>
<tr>
<th> 0xF2
</th>
<th> Get MouseID
</th>
<th> The mouse sends sends its current "ID", which may change with mouse initialization.
</th></tr>
<tr>
<th> 0xEB
</th>
<th> Request Single Packet
</th>
<th> The mouse sends ACK, followed by a complete mouse packet with current data.
</th></tr>
<tr>
<th> 0xE9
</th>
<th> Status Request
</th>
<th> The mouse sends ACK, then 3 status bytes. See below for the status byte format.
</th></tr>
<tr>
<th> 0xE8
</th>
<th> Set Resolution
</th>
<th> Requires an additional data byte: pixels per millimeter resolution (value 0 to 3)
</th></tr></table>
<h4> <span class="mw-headline" id="Additional_Useless_Mouse_Commands">Additional Useless Mouse Commands</span></h4>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> Hex value
</th>
<th> Meaning
</th>
<th> Description
</th></tr>
<tr>
<th> 0xF0
</th>
<th> Set Remote Mode
</th>
<th> The mouse sends ACK (0xFA) and  then reset its movement counters, and enters remote mode
</th></tr>
<tr>
<th> 0xEE
</th>
<th> Set Wrap Mode
</th>
<th> The mouse sends ACK (0xFA) and  then reset its movement counters, and enters wrap mode
</th></tr>
<tr>
<th> 0xEC
</th>
<th> Reset Wrap Mode
</th>
<th> The mouse sends ACK, and then enters the last mode, before entering wrap mode, it also resets its movement counters
</th></tr>
<tr>
<th> 0xEA
</th>
<th> Set Stream Mode
</th>
<th> The mouse sends ACK (0xFA) and  then reset its movement counters, and enters reporting  mode
</th></tr>
<tr>
<th> 0xE7
</th>
<th> Set Scaling 2:1
</th>
<th> The mouse sends ACK and sets non-linear scaling "2:1"
</th></tr>
<tr>
<th> 0xE6
</th>
<th> Set Scaling 1:1
</th>
<th> The mouse sends ACK and sets normal linear scaling "1:1"
</th></tr></table>
<p><br />
The status bytes look like this:
<br />
Byte 1:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> Always 0
</th>
<th> mode
</th>
<th> enable
</th>
<th> scaling
</th>
<th> Always 0
</th>
<th> left btn
</th>
<th> middle
</th>
<th> right btn
</th></tr></table>
<p>Byte 2:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th>resolution
</th></tr></table>
<p>Byte 3:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th>sample rate
</th></tr></table><br />
<p>Mode: if it is 1, the current mode is remote mode; if 0 then it is stream mode <br />
Enable: if it is 1, then data reporting is enabled; if 0 then data reporting  is disabled<br />
Scaling: if it is 1, scaling 2:1 is enabled; if 0 then scaling 1:1 is enabled.<br />
</p>
<h5> <span class="mw-headline" id="Resolution.2C_Scaling_and_Sample_Rate">Resolution, Scaling and Sample Rate</span></h5>
<p>Definitions:
</p>
<ul><li>Resolution: DeltaX or DeltaY for each millimeter of mouse movement.
</li><li>Scaling: Apply a simple non-linear distortion to mouse movement (see Non-Linear Movement, above).
</li><li>Sampling Rate: Packets the mouse can send per second.
</li></ul>
<p>Resolution: 
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> value
</th>
<th> resolution
</th></tr>
<tr>
<th>0x00
</th>
<th>1 count /mm
</th></tr>
<tr>
<th>0x01
</th>
<th>2 count /mm
</th></tr>
<tr>
<th>0x02
</th>
<th>4 count /mm
</th></tr>
<tr>
<th>0x03
</th>
<th>8 count /mm
</th></tr></table>
<p><br />
Scaling can either be "1:1" (linear = no scaling) or "2:1" (non-linear). This is the non-linear scaling:
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> Movement Counter
</th>
<th> Reported Movement
</th></tr>
<tr>
<th>0
</th>
<th>0
</th></tr>
<tr>
<th>1
</th>
<th>1
</th></tr>
<tr>
<th>2
</th>
<th>1
</th></tr>
<tr>
<th>3
</th>
<th>3
</th></tr>
<tr>
<th>4
</th>
<th>6
</th></tr>
<tr>
<th>5
</th>
<th>9
</th></tr>
<tr>
<th>more than 5
</th>
<th>2 * Movement Counter
</th></tr></table>
<p>Sample Rate can have the following values:  (all values are Decimal, NOT hex)<br />
</p>
<table border="1" cellspacing="0" cellpadding="5" align="center">
<tr>
<th> value
</th>
<th> Samples pr second
</th></tr>
<tr>
<th>10
</th>
<th>10
</th></tr>
<tr>
<th>20
</th>
<th>20
</th></tr>
<tr>
<th>40
</th>
<th>40
</th></tr>
<tr>
<th>60
</th>
<th>60
</th></tr>
<tr>
<th>80
</th>
<th>80
</th></tr>
<tr>
<th>100
</th>
<th>100
</th></tr>
<tr>
<th>200
</th>
<th>200
</th></tr></table>
<ul><li>Note: human eyes don't see movement faster than 30 samples per second, and human fingers cannot click a button
</li></ul>
<p>that fast either. A sample rate lower than 30 will cause visibly jerky mouse movement, and may miss mousedown events.
A sample rate significantly higher than 30 will waste precious I/O bus bandwidth. You may test these things for
yourself, but sample rates of 10, 20, 100, or 200 are generally not recommended.
</p>
<h3> <span class="mw-headline" id="Initializing_a_PS2_Mouse">Initializing a PS2 Mouse</span></h3>
<p>The PS2 mouse port on a PC is attached to the auxiliary input of the PS2 keyboard controller. That input
might be disabled at bootup, and needs to be enabled. It is usually also desirable to have the mouse generate
IRQ12 interrupts when it sends bytes through the keyboard controller to IO port 0x60. Additionally, it
is necessary to tell the mouse to enable the transmission of packets. Optionally, you may also want to enable additional mouse
features, such as scroll wheels, faster response times, increased resolution, or additional mouse buttons.
</p>
<h4> <span class="mw-headline" id="PS.2F2_Device_Unplugging.2FHot_Plugging">PS/2 Device Unplugging/Hot Plugging</span></h4>
<p>Some idiot who created the PS/2 device specs did not specify that PS/2 devices can be unplugged and replugged
while the computer remains turned on ("hot plugging"). A long time ago, some other idiots actually designed motherboards that would
be slightly damaged if PS2 hot plugging occurs. However, mice and keyboards have cords that were made to be tripped over,
and sometimes it is very logical to try moving a mouse from one machine to another, temporarily, without powering
both systems down. So all computers made in the last 15 years should, in fact, support hot plugging of PS2 devices.
When a mouse is plugged into a running system it may send a 0xAA, then a 0x00 byte, and then go into default state (see below).
</p>
<h5> <span class="mw-headline" id="Set_Compaq_Status.2FEnable_IRQ12">Set Compaq Status/Enable IRQ12</span></h5>
<p>On some systems, the PS2 aux port is disabled at boot. Data coming from the aux port will not generate any interrupts.
To know that data has arrived, you need to enable the aux port to generate IRQ12. There is only one way to do that,
which involves getting/modifying the "compaq status" byte. You need to send the command byte 0x20 ("Get Compaq Status Byte")
to the PS2 controller on port 0x64. If you look at <a href="RBIL" title="RBIL" class="mw-redirect">RBIL</a>, it says that this command
is Compaq specific, but this is no longer true. This command does <i>not</i> generate a 0xFA ACK byte. The very
next byte returned should be the Status byte. (Note: on some versions of Bochs, you will get a <i>second</i> byte, with
a value of 0xD8, after sending this command, for some reason.) After you get the Status byte, you need to set bit number 1
(value=2, Enable IRQ12), and clear bit number 5 (value=0x20, Disable Mouse Clock). Then send command byte 0x60 ("Set Compaq
Status") to port 0x64, followed by the modified Status byte to port 0x60. This might generate a 0xFA ACK byte from the keyboard.
</p>
<h5> <span class="mw-headline" id="Aux_Input_Enable_Command">Aux Input Enable Command</span></h5>
<p>Send the Enable Auxiliary Device command (0xA8) to port 0x64. This will generate an ACK response from the <i>keyboard</i>,
which you must wait to receive. Please note that using this command is not necessary if setting the Compaq Status byte is
successful -- but it does no harm, either.
</p>
<h4> <span class="mw-headline" id="Mouse_State_at_Power-on">Mouse State at Power-on</span></h4>
<p>When the mouse is reset, either by applying power or with a reset command (0xFF), it always goes into
the following default state:
</p>
<ul><li> packets disabled
</li><li> emulate 3 button mouse (buttons 4, 5, and scroll wheels disabled)
</li><li> 3 byte packets
</li><li> 4 pixel/mm resolution
</li><li> 100 packets per second sample rate
</li></ul>
<h4> <span class="mw-headline" id="MouseID_Byte">MouseID Byte</span></h4>
<p>During initialization, a mouse indicates that it has various features (a scroll wheel, a 4th and 5th mouse
button) by changing its mouseID in response to initialization commands. So you send a set of mouse commands,
and then ask for the mouseID byte with the Get MouseID command (0xF2). If the mouseID changed from its previous value,
then the mouse has changed modes. The mouseID byte is always the next byte sent after
the ACK for the Read MouseID command. At initialization, the mouseID is always 0. Other current legal values are
3 and 4.
</p>
<h4> <span class="mw-headline" id="Init.2FDetection_Command_Sequences">Init/Detection Command Sequences</span></h4>
<p>If you would like more than just 3 buttons, you will have to use the following sequence(s). 
If the first sequence is accepted: the number of bytes in the mouse packets changes to 4, the scroll wheel on the
mouse becomes activated, and the mouseID changes from 0 to 3.
</p><p>The first magic sequence goes like this:
</p>
<ul><li>	set sample rate to 200
</li><li>	set sample rate to 100
</li><li>	set sample rate to 80
</li><li>	get the new id to verify acceptance
</li></ul>
<p><br />
</p><p><b>After using the above sequence to activate the scroll wheel</b>, the 4th and 5th mouse buttons can be activated
with the following additional magic sequence:
</p>
<ul><li>	set sample rate to 200
</li><li>	set sample rate to 200
</li><li>	set sample rate to 80
</li><li>	get the new id to verify acceptance
</li></ul>
<p><br />
If this second sequence is accepted, the returned mouse ID value changes from 3 to 4.
</p>
<h4> <span class="mw-headline" id="Enable_Packets">Enable Packets</span></h4>
<p>After the mouse has been initialized to your desired mouseID value, its Samplerate is probably 80 samples per second,
its Resolution is probably 4 pixels/mm, and packets are still disabled. You may want to modify the Samplerate
and Resolution, and then send a 0xF4 command to the mouse to make the mouse automatically generate movement packets.
</p>
<h4> <span class="mw-headline" id="Streaming_Advantages_and_Disadvantages">Streaming Advantages and Disadvantages</span></h4>
<p>Instead of enabling automatic streaming packet mode, it is possible to request mouse packets one at a time. Doing this
has some advantages over streaming packet mode. You may see that you need to send or receive at least 4
extra bytes over the I/O bus in order to get each 0xEB command to the mouse, and the I/O bus is very slow. On the other
hand, a typical streaming mode probably sends hundreds more mouse packet bytes over the I/O bus than you need, every second
-- so if there is a disadvantage, it is probably small.
</p><p>One of the biggest problems with streaming mode is "alignment" -- the packets were never defined to have an obvious boundary.
This means that it is very easy to lose track of which mouse byte is supposed to be the first byte of the next packet.
This problem is completely avoided if you specifically request single packets (instead of using streaming mode) because
every packet begins with an ACK (0xFA), which is easily recognizable.
</p>
<h3> <span class="mw-headline" id="PC_Serial_Mouse">PC Serial Mouse</span></h3>
<p>For info on running a serial mouse on an RS232 port, see <a rel="nofollow" class="external text" href="http://freedos-32.sourceforge.net/showdoc.php?page=sermouse">this document</a>.
</p>
<h2> <span class="mw-headline" id="Mac_Mouse_Interface">Mac Mouse Interface</span></h2>
<p>(stub - to be written later)
</p><p><br />
</p>
<h2> <span class="mw-headline" id="See_Also">See Also</span></h2>
<h3> <span class="mw-headline" id="Threads">Threads</span></h3>
<ul><li> <a rel="nofollow" class="external text" href="http://www.osdev.org/phpBB2/viewtopic.php?t=10247">SANiK's mouse code</a>
</li><li> <a rel="nofollow" class="external text" href="http://www.osdev.org/phpBB2/viewtopic.php?t=24277">Mouse driver code in assembly</a>
</li><li> <a rel="nofollow" class="external text" href="http://www.osdev.org/phpBB2/viewtopic.php?t=8323">PS2 mouse IRQ</a>
</li><li> <a rel="nofollow" class="external text" href="http://www.osdev.org/phpBB2/viewtopic.php?t=6942">PS2 mouse links</a>
</li></ul>
<h3> <span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li> <a rel="nofollow" class="external text" href="http://www.computer-engineering.org">Adam Chapweske on PS/2 Mouse and Keyboard protocols</a>
</li><li> <a rel="nofollow" class="external text" href="http://www.win.tue.nl/~aeb/linux/kbd/scancodes-13.html">Linux PS2 mouse article with non-Microsoft mouse info</a>
</li><li> <a rel="nofollow" class="external text" href="http://houbysoft.com/download/ps2mouse.html">Tutorial with sample C code</a>
</li><li> <a rel="nofollow" class="external text" href="http://www.mcamafia.de/pdf/ibm_hitrc07.pdf">IBM's Keyboard and Auxiliary Device (mouse) Controller documentation</a>
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 177/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1909-0!*!0!!en!*!* and timestamp 20180121032401 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Mouse_Input&amp;oldid=20989">http://wiki.osdev.org/index.php?title=Mouse_Input&amp;oldid=20989</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="Category:Human_Interface_Device" title="Category:Human Interface Device">Human Interface Device</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Mouse_Input" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Mouse_Input"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="Talk:Mouse_Input"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Mouse_Input#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Mouse_Input" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Mouse_Input&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Mouse_Input&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Mouse_Input#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" titleskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Mouse_Input" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Mouse_Input" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Mouse_Input&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Mouse_Input&amp;oldid=20989" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->
<div class="portal" id='p-lang'>
	<h5>In other languages</h5>
	<div class="body">
		<ul>
			<li class="interwiki-de"><a href="http://www.lowlevel.eu/wiki/PS/2-Maus" title="PS/2-Maus">Deutsch</a></li>
		</ul>
	</div>
</div>

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 9 July 2017, at 12:56.</li>
											<li id="footer-info-viewcount">This page has been accessed 87,030 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.031 secs. -->
	</body>
</html>
