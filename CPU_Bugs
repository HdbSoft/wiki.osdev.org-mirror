<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>CPU Bugs - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "CPU_Bugs", "wgTitle": "CPU Bugs", "wgCurRevisionId": 22046, "wgArticleId": 1452, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["X86 CPU"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-asm {line-height: normal;}
.source-asm li, .source-asm pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for asm
 * CSS class: source-asm, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.asm.source-asm .de1, .asm.source-asm .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.asm.source-asm  {font-family:monospace;}
.asm.source-asm .imp {font-weight: bold; color: red;}
.asm.source-asm li, .asm.source-asm .li1 {font-weight: normal; vertical-align:top;}
.asm.source-asm .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.asm.source-asm .li2 {font-weight: bold; vertical-align:top;}
.asm.source-asm .kw1 {color: #00007f; font-weight: bold;}
.asm.source-asm .kw2 {color: #0000ff; font-weight: bold;}
.asm.source-asm .kw3 {color: #00007f;}
.asm.source-asm .kw4 {color: #000000; font-weight: bold;}
.asm.source-asm .kw5 {color: #000000; font-weight: bold;}
.asm.source-asm .co1 {color: #666666; font-style: italic;}
.asm.source-asm .co2 {color: #adadad; font-style: italic;}
.asm.source-asm .es0 {color: #000099; font-weight: bold;}
.asm.source-asm .br0 {color: #009900; font-weight: bold;}
.asm.source-asm .sy0 {color: #339933;}
.asm.source-asm .st0 {color: #7f007f;}
.asm.source-asm .nu0 {color: #0000ff;}
.asm.source-asm .ln-xtra, .asm.source-asm li.ln-xtra, .asm.source-asm div.ln-xtra {background-color: #ffc;}
.asm.source-asm span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-CPU_Bugs action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">CPU Bugs</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="CPU_Bugs#mw-head">navigation</a>,
					<a href="CPU_Bugs#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>Computers are made by humans, and thus inherently prone to errors. This page describes known bugs for various models and brands.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="CPU_Bugs#Affecting_almost_all_modern_architectures"><span class="tocnumber">1</span> <span class="toctext">Affecting almost all modern architectures</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="CPU_Bugs#Spectre"><span class="tocnumber">1.1</span> <span class="toctext">Spectre</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="CPU_Bugs#x86_misfeatures"><span class="tocnumber">2</span> <span class="toctext">x86 misfeatures</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="CPU_Bugs#ESP_is_not_cleared"><span class="tocnumber">2.1</span> <span class="toctext">ESP is not cleared</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="CPU_Bugs#NULL_selector_load_may_not_clear_MSR_GS_BASE"><span class="tocnumber">2.2</span> <span class="toctext">NULL selector load may not clear MSR_GS_BASE</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="CPU_Bugs#FXSAVE.2FFNSAVE"><span class="tocnumber">2.3</span> <span class="toctext">FXSAVE/FNSAVE</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="CPU_Bugs#SYSRET"><span class="tocnumber">2.4</span> <span class="toctext">SYSRET</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="CPU_Bugs#SS_selector"><span class="tocnumber">2.5</span> <span class="toctext">SS selector</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="CPU_Bugs#Nesting_of_NMI_interrupt"><span class="tocnumber">2.6</span> <span class="toctext">Nesting of NMI interrupt</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="CPU_Bugs#Intel"><span class="tocnumber">3</span> <span class="toctext">Intel</span></a>
<ul>
<li class="toclevel-2 tocsection-11"><a href="CPU_Bugs#Transactional_Synchronization_eXtensions_.28TSX.29_Bug"><span class="tocnumber">3.1</span> <span class="toctext">Transactional Synchronization eXtensions (TSX) Bug</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="CPU_Bugs#Extended_Page_Table_.28EPT.29_Bug"><span class="tocnumber">3.2</span> <span class="toctext">Extended Page Table (EPT) Bug</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="CPU_Bugs#F00F_Bug"><span class="tocnumber">3.3</span> <span class="toctext">F00F Bug</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="CPU_Bugs#FDIV_bug"><span class="tocnumber">3.4</span> <span class="toctext">FDIV bug</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="CPU_Bugs#Buggy_HLT"><span class="tocnumber">3.5</span> <span class="toctext">Buggy HLT</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="CPU_Bugs#Core-microarchitecture_Bugs"><span class="tocnumber">3.6</span> <span class="toctext">Core-microarchitecture Bugs</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="CPU_Bugs#.27Meltdown.27_Page_Table_Bug"><span class="tocnumber">3.7</span> <span class="toctext">'Meltdown' Page Table Bug</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-18"><a href="CPU_Bugs#AMD"><span class="tocnumber">4</span> <span class="toctext">AMD</span></a>
<ul>
<li class="toclevel-2 tocsection-19"><a href="CPU_Bugs#DragonFly_BSD_Heavy_Load_Crash"><span class="tocnumber">4.1</span> <span class="toctext">DragonFly BSD Heavy Load Crash</span></a></li>
<li class="toclevel-2 tocsection-20"><a href="CPU_Bugs#Ryzen_Bug"><span class="tocnumber">4.2</span> <span class="toctext">Ryzen Bug</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="CPU_Bugs#CPUID_Bugs"><span class="tocnumber">4.3</span> <span class="toctext">CPUID Bugs</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-22"><a href="CPU_Bugs#Cyrix"><span class="tocnumber">5</span> <span class="toctext">Cyrix</span></a>
<ul>
<li class="toclevel-2 tocsection-23"><a href="CPU_Bugs#Coma_Bug"><span class="tocnumber">5.1</span> <span class="toctext">Coma Bug</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="Affecting_almost_all_modern_architectures"> Affecting almost all modern architectures </span></h2>
<h3> <span class="mw-headline" id="Spectre"> Spectre </span></h3>
<p>Spectre is an exploit that affects most modern CPUs made after 1995 that implement out-of-order execution (x86, x86_64, ARM, AMD, and potentially more) and allows the reading of physical memory by userland code. There is no sensible software fix for this issue. For more details, see (<a rel="nofollow" class="external free" href="https://spectreattack.com/spectre.pdf">https://spectreattack.com/spectre.pdf</a> this paper).
</p>
<h2> <span class="mw-headline" id="x86_misfeatures"> x86 misfeatures </span></h2>
<h3> <span class="mw-headline" id="ESP_is_not_cleared"> ESP is not cleared </span></h3>
<p>The x86 IRET will not clear upper bits of the stack register (32:16) when returning to 16-bit mode. As the result, the kernel high 16bit of ESP may be leaked to the userspace. Same is true for 64-bit kernel to 16-bit userspace transition.
</p>
<h3> <span class="mw-headline" id="NULL_selector_load_may_not_clear_MSR_GS_BASE"> NULL selector load may not clear MSR_GS_BASE </span></h3>
<p>Intel CPUs do not specify what happens with MSR_GS_BASE if NULL selector is loaded. The Intel CPUs seem to load it with zero, AMD CPUs preserve the previous values (now documented in the AMD64 Architecture Programmer's Manual Volume 2: System Programming). This detail needs to be taken into account for the context switches, if kernel tries to optimize the slow MSR operations.
</p>
<h3> <span class="mw-headline" id="FXSAVE.2FFNSAVE"> FXSAVE/FNSAVE </span></h3>
<p>The Intel and AMD differ in what context is saved/restored. AMD CPUs do not save/restore certain parts (FIP/FOP) only when exception is pending (see CVE-2006-1056)
</p>
<h3> <span class="mw-headline" id="SYSRET"> SYSRET </span></h3>
<p>The Intel CPUs do not handle properly the non-canonical return address.  If a non-canonical address is present in RCX when executing SYSRET, a General Protection Fault will be taken in CPL0 with CPL3 registers. (see CVE-2006-0744)
</p>
<h3> <span class="mw-headline" id="SS_selector"> SS selector </span></h3>
<p>On AMD CPU, SS selector may become unusable when in-kernel interrupt arrives (sets SS to NULL) and thread is switched and returned to userspace via SYSRET. The numerical SS value is correct however the descriptor cache is wrong. This affects
only the 32-bit compatibility mode usage of SS.
</p>
<h3> <span class="mw-headline" id="Nesting_of_NMI_interrupt"> Nesting of NMI interrupt </span></h3>
<p>If CPU is executing the NMI interrupt handler, CPU guarantees to keep NMI masked until the IRET is executed. However if for some reason NMI triggers some other exception, which executes IRET then the NMI may trigger again, possibly overwriting
its own stack as on AMD64 it runs with IST stack (fun starts if SMI is triggering IRET for some reason).
</p>
<h2> <span class="mw-headline" id="Intel"> Intel </span></h2>
<h3> <span class="mw-headline" id="Transactional_Synchronization_eXtensions_.28TSX.29_Bug"> Transactional Synchronization eXtensions (TSX) Bug </span></h3>
<p>In August 2014, Intel announced that a bug exists in the TSX implementation on Haswell, Haswell-E, Haswell-EP and early Broadwell CPUs, which resulted in disabling the TSX feature on affected CPUs via a microcode update. The bug was fixed in F-0 steppings of the vPro-enabled Core M-5Y70 Broadwell CPU in November 2014.
</p>
<h3> <span class="mw-headline" id="Extended_Page_Table_.28EPT.29_Bug"> Extended Page Table (EPT) Bug </span></h3>
<p>A MOV to CR3 when EPT is enabled may lead to an unexpected page fault or an incorrect page translation.
</p><p>Affected processors:
</p>
<ul><li>Intel Xeon E5-#### v2, where #### is a 4-digit number, optionally followed by a letter.
</li><li>Intel Xeon E7-#### v2, where #### is a 4-digit number.
</li><li>Intel Xeon E3-12## v2, where ## is a 2-digit number, optionally followed by a letter.
</li></ul>
<h3> <span class="mw-headline" id="F00F_Bug"> F00F Bug </span></h3>
<p>Affects: Intel i586 series (Pentium 1, Pentium MMX, Pentium Overdrive, Pentium MMX Overdrive)
</p><p>This bug is caused by executing LOCK CMPXCHG8B eax (F0 0F C7 C8) By containing two opcode errors, an unallowed lock and a non-memory target, together with trying to cache the results, it confuses the cpu to enter a deadlock state, locking up the entire computer involved.
</p><p>To fix this bug, the <a href="IDT" title="IDT" class="mw-redirect">IDT</a> entry containing the invalid opcode should be marked as uncacheable or writethrough to eliminate one necessary factor, or by marking the same page as not-writable which further confuses the processor, this time into the pagefault handler instead of into a deadlock. If paging is to be left disabled, the only workaround is to disable the cpu's caches, which is far from efficient. Further discussion of various solutions is presented <a rel="nofollow" class="external text" href="http://www.x86.org/errata/dec97/f00fbug.htm">here</a>.
</p><p>We can check, if the processor is Pentium through the <a href="CPUID" title="CPUID">CPUID</a> instruction. Calling it with EAX=1 will return the CPU signature in EAX. We can extract the Family Number from the CPU signature and compare it with 5, because the Pentium belongs to Family 5.
</p>
<h3> <span class="mw-headline" id="FDIV_bug"> FDIV bug </span></h3>
<p>The Pentium FDIV bug is a bug in the Intel P5 Pentium floating point unit (FPU). Because of the bug, the processor can return incorrect decimal results, an issue troublesome for the precise calculations needed in fields like math and science. Discovered by Professor Thomas R. Nicely at Lynchburg College, Intel attributed the error to missing entries in the lookup table used by the floating-point division circuitry.
</p><p>This problem occurs only on some models of the original Pentium processor. Any Pentium family processor with a clock speed of at least 120 MHz is new enough not to have this bug.
</p>
<h3> <span class="mw-headline" id="Buggy_HLT"> Buggy HLT </span></h3>
<p>Some of the first 100 MHz Intel DX chips had a buggy HLT state, prompting the developers of Linux to implement a "no-hlt" option for use when running on those chips, but this was fixed in later chips.
</p>
<h3> <span class="mw-headline" id="Core-microarchitecture_Bugs"> Core-microarchitecture Bugs </span></h3>
<p><a rel="nofollow" class="external autonumber" href="http://www.geek.com/images/geeknews/2006Jan/core_duo_errata__2006_01_21__full.gif">[1]</a>
</p>
<h3> <span class="mw-headline" id=".27Meltdown.27_Page_Table_Bug"> 'Meltdown' Page Table Bug </span></h3>
<p>Modern (1995 and upwards) Intel x86 chips contain a bug in the out-of-order execution hardware that allows unprivileged userland software to gain access to kernel memory when the kernel is mapped into the userland address space. To avoid vulnerability, it is recommended that the kernel and userland page tables remain separate (i.e: PTI, Page Table Isolation). For more details, visit <a rel="nofollow" class="external text" href="https://spectreattack.com/">this page</a>.
</p>
<h2> <span class="mw-headline" id="AMD"> AMD </span></h2>
<h3> <span class="mw-headline" id="DragonFly_BSD_Heavy_Load_Crash"> DragonFly BSD Heavy Load Crash </span></h3>
<p>AMD has confirmed that some of its processors contain a bug that could cause program errors under certain specific conditions. The bug was initially discovered by Matt Dillon, a DragonFly BSD developer.
</p><p>Consecutive back-to-back pops and (near) return instructions can create a condition where the processor incorrectly updates the stack pointer. The specific manifestations in DragonFly were random segmentation faults under heavy load.
</p><p>A program exception has been identified in previous generations of the AMD Opteron processor that occurs in certain environments that leverage a very specific GCC compiler build. A workaround has been identified for the small segment of customers this could potentially impact. Also, this marginal erratum impacts the previous four generations of AMD Opteron processors which include the AMD Opteron 2300, 8300 ("Barcelona" and "Shanghai",) 2400, 8400 ("Istanbul",) and 4100, 6100 ("Lisbon" and "Magny-Cours") series processors.
</p>
<h3> <span class="mw-headline" id="Ryzen_Bug"> Ryzen Bug </span></h3>
<p>AMD has confirmed that some of its processors contain a bug that could cause program errors under certain specific conditions when executing code near the canonical address boundary. Insert a guard page (unmapped 4K page, or larger page) before canonical address boundary.
</p>
<h3> <span class="mw-headline" id="CPUID_Bugs"> CPUID Bugs </span></h3>
<p>For older K5 CPUs, the feature flags returned by "CPUID 0x00000001" in EDX are dodgy - bit 9 is used to indicate support for PGE (and not used to indicate support for the local APIC). 
</p>
<h2> <span class="mw-headline" id="Cyrix"> Cyrix </span></h2>
<h3> <span class="mw-headline" id="Coma_Bug"> Coma Bug </span></h3>
<p>Affects: Cyrix 6x86 series
</p><p>This bug is caused when several implicitly locked instructions are pipelined into an infinite loop. In effect when an instruction completes, the following locked instruction is executed directly afterward, maintaining bus lock and inhibiting interrupts. In an infinite loop, this will lock all interrupts on the processor, rendering it useless.
</p><p>To fix this bug, one must write to the cyrix registers and set the NO-LOCK bit in CCR1, which disables all but the most essential bus locks. The downside of this is that read-modify-write atomicity is no longer guaranteed on multiprocessor systems. Source code that should prevent this condition: (untested)
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="asm source-asm"><pre class="de1"><span class="kw1">MOV</span> <span class="kw3">AL</span><span class="sy0">,</span> <span class="nu0">0xC1</span>   <span class="co1">; 0xC1 refers to CCR1</span>
<span class="kw1">OUT</span> <span class="nu0">0x22</span><span class="sy0">,</span> <span class="kw3">AL</span>   <span class="co1">; Select Register</span>
<span class="kw1">IN</span> <span class="nu0">0x23</span><span class="sy0">,</span> <span class="kw3">AL</span>    <span class="co1">; Load Contents</span>
<span class="kw1">OR</span> <span class="kw3">AL</span><span class="sy0">,</span> <span class="nu0">0x10</span>    <span class="co1">; Set No-Lock bit</span>
<span class="kw1">MOV</span> <span class="kw3">AH</span><span class="sy0">,</span> <span class="kw3">AL</span>     <span class="co1">;</span>
<span class="kw1">MOV</span> <span class="kw3">AL</span><span class="sy0">,</span> <span class="nu0">0xC1</span>   <span class="co1">; 0xC1 refers to CCR1</span>
<span class="kw1">OUT</span> <span class="nu0">0x22</span><span class="sy0">,</span> <span class="kw3">AL</span>   <span class="co1">; Select register</span>
<span class="kw1">MOV</span> <span class="kw3">AL</span><span class="sy0">,</span> <span class="kw3">AH</span>     <span class="co1">; Load new contents</span>
<span class="kw1">OUT</span> <span class="nu0">0x23</span><span class="sy0">,</span> <span class="kw3">AL</span>   <span class="co1">; Write new CCR1 with No-Lock set</span></pre></div></div>

<!-- 
NewPP limit report
Preprocessor node count: 122/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1452-0!*!0!!en!*!* and timestamp 20180121032727 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=CPU_Bugs&amp;oldid=22046">http://wiki.osdev.org/index.php?title=CPU_Bugs&amp;oldid=22046</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="Category:X86_CPU" title="Category:X86 CPU">X86 CPU</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=CPU_Bugs" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="CPU_Bugs"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:CPU_Bugs&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="CPU_Bugs#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="CPU_Bugs" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=CPU_Bugs&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=CPU_Bugs&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="CPU_Bugs#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to fiskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/CPU_Bugs" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/CPU_Bugs" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=CPU_Bugs&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=CPU_Bugs&amp;oldid=22046" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 4 January 2018, at 11:27.</li>
											<li id="footer-info-viewcount">This page has been accessed 57,840 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.031 secs. -->
	</body>
</html>
