<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Thread Local Storage - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Thread_Local_Storage", "wgTitle": "Thread Local Storage", "wgCurRevisionId": 17081, "wgArticleId": 3673, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["ABI", "C", "Processes and Threads"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Thread_Local_Storage action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Thread Local Storage</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Thread_Local_Storage#mw-head">navigation</a>,
					<a href="Thread_Local_Storage#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>Thread Local Storage (TLS) are per-thread global variables. Compilers such as <a href="GCC" title="GCC">GCC</a> provide a <tt>__thread</tt> keyword to mark global variables as per-thread. Support is required in the program loader and thread creator.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">__thread <span class="kw4">int</span> errno<span class="sy0">;</span>
<span class="kw4">int</span> get_errno<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="kw1">return</span> errno<span class="sy0">;</span> <span class="br0">&#125;</span></pre></div></div>
<p>A <a href="X86-64" title="X86-64">x86-64</a> <a href="System_V_ABI" title="System V ABI">System V ABI</a> compiler would compile this code into assembly like this:
</p>
<pre>
	.globl	errno
	.section	.tbss,&quot;awT&quot;,@nobits
	.align 4
	.type	errno, @object
	.size	errno, 4
errno:
	.zero	4
...
	movl	%fs:errno@tpoff,&#160;%eax
</pre>
<p>The <tt>errno</tt> global variable is put into a special thread local bss section (.tbss) (or .tdata if initialized) and special actions occur at program link time and program load time. A per-thread allocation (containing the thread local storage, the user-space thread structure and perhaps other things) is made when the thread is created. Each per-thread variable is located at a fixed offset inside this allocation. In the above example, the&#160;%fs segment starts at the thread's user-space thread structure (%fs thus works as an extra register), and the special <tt>errno@tpoff</tt> linker symbol is the offset from the thread's userspace thread structure to the per-thread errno value.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Thread_Local_Storage#Design"><span class="tocnumber">1</span> <span class="toctext">Design</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Thread_Local_Storage#Master_TLS_Copy"><span class="tocnumber">1.1</span> <span class="toctext">Master TLS Copy</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="Thread_Local_Storage#Per-thread_allocation"><span class="tocnumber">1.2</span> <span class="toctext">Per-thread allocation</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="Thread_Local_Storage#ABI"><span class="tocnumber">2</span> <span class="toctext">ABI</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="Thread_Local_Storage#i386"><span class="tocnumber">2.1</span> <span class="toctext">i386</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="Thread_Local_Storage#x86-64"><span class="tocnumber">2.2</span> <span class="toctext">x86-64</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="Thread_Local_Storage#Other"><span class="tocnumber">2.3</span> <span class="toctext">Other</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-8"><a href="Thread_Local_Storage#Implementation"><span class="tocnumber">3</span> <span class="toctext">Implementation</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="Thread_Local_Storage#See_Also"><span class="tocnumber">4</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="Thread_Local_Storage#Standards"><span class="tocnumber">4.1</span> <span class="toctext">Standards</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="Thread_Local_Storage#Articles"><span class="tocnumber">4.2</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="Thread_Local_Storage#Topics"><span class="tocnumber">4.3</span> <span class="toctext">Topics</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="Thread_Local_Storage#IRC"><span class="tocnumber">4.4</span> <span class="toctext">IRC</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="Thread_Local_Storage#Implementations"><span class="tocnumber">4.5</span> <span class="toctext">Implementations</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="Design"> Design </span></h2>
<h3> <span class="mw-headline" id="Master_TLS_Copy"> Master TLS Copy </span></h3>
<p>The program contains a master copy of its thread local storage (with its initialized-at-compile-time values) which is used when creating threads. This special segment is created by the linker from the <tt>.tdata</tt> (initialized tls) and <tt>.tbss</tt> (zero-initialized tls) sections. You can find it by searching the <a href="ELF" title="ELF">ELF</a> program headers for a segment with type <tt>PT_TLS</tt> (decimal value 7) (as opposed to the normal <tt>PT_LOAD</tt>).
</p><p>The virtual address of the thread local storage master segment is meaningless as it isn't loaded anywhere specific, you decide where you wish to load it. Mind that the segment does have alignment constraints like normal segments (but the linker placed those for you). Besides deciding yourself where to load the segment, you load this segment like a normal <tt>PT_LOAD</tt> segment.
</p>
<h3> <span class="mw-headline" id="Per-thread_allocation"> Per-thread allocation </span></h3>
<p>Each thread has a memory allocation associated with it. It contains the user-space thread structure, the thread local storage, and potentially other things. Each thread has a thread-self-pointer register that points to the thread's user-space thread structure, which is used to quickly determine which thread the current is, as well as providing quick access to the thread local storage. The exact semantics of the per-thread depends on the architecture and its ABI, as well as whether the executable is statically or dynamically linked.
</p><p>The layout of the user-space thread structure is partially mandated by the ABI. On some platforms (i386 and x86-64), there must be a pointer at the start of it that points to itself. Besides those mandatory parts, the rest of the structure is up to you, it is useful for many things such as remembering allocations that must be deallocated when the thread terminates.
</p><p>The thread local storage is located at a fixed offset from the user-space thread structure, therefore each variable in the thread local storage is also at a fixed offset. This offset is determined at link time and accessible through the special <tt>foo@tpoff</tt> linker symbols. Locating a particular thread local variable is as simple as getting the thread-self-pointer and adding a fixed offset.
</p>
<h2> <span class="mw-headline" id="ABI"> ABI </span></h2>
<p>This is a summary of the actual details in the <a href="System_V_ABI" title="System V ABI">System V ABI</a>.
</p>
<h3> <span class="mw-headline" id="i386"> i386 </span></h3>
<p>The thread-self-pointer register is the base of the&#160;%gs segment. It is set to the address of the current thread's user-space thread structure. When you switch the thread on the current CPU, you change the base of the gs segment of that CPU's <a href="GDT" title="GDT" class="mw-redirect">GDT</a> and reload the gs register. A pointer to the user-space thread structure itself is the first member of the user-space thread structure.
</p><p>The thread local storage (after having its size rounded up to its alignment) is located immediately prior to the user-space thread structure. The offsets are negative. To place the user-space thread structure and the thread local storage, do this:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">size_t</span> allocation_alignment <span class="sy0">=</span> max<span class="br0">&#40;</span>master_tls_alignment<span class="sy0">,</span> alignof<span class="br0">&#40;</span><span class="kw4">struct</span> uthread<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw4">size_t</span> allocation_size <span class="sy0">=</span> alignup<span class="br0">&#40;</span>master_tls_size<span class="sy0">,</span> allocation_alignment<span class="br0">&#41;</span> <span class="sy0">+</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> uthread<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy0">*</span> allocation <span class="sy0">=</span> allocate<span class="br0">&#40;</span>allocation_size<span class="sy0">,</span> allocation_alignment<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw4">struct</span> uthread<span class="sy0">*</span> uthread <span class="sy0">=</span> allocation <span class="sy0">+</span> alignup<span class="br0">&#40;</span>master_tls_size<span class="sy0">,</span> allocation_alignment<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy0">*</span> tls <span class="sy0">=</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy0">*</span><span class="br0">&#41;</span> uthread<span class="br0">&#41;</span> <span class="sy0">-</span> alignup<span class="br0">&#40;</span>master_tls_size<span class="sy0">,</span> master_tls_alignment<span class="br0">&#41;</span><span class="sy0">;</span></pre></div></div>
<p>Do note that the thread local structure might not be at the beginning of the per-thread allocation if it its alignment is less of that than struct uthread. It is crucial that both the thread local storage and the user-space thread structure are properly aligned. You then initialize the user-space thread structure's self pointer and the thread local storage:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">uthread<span class="sy0">-&gt;</span>self_pointer <span class="sy0">=</span> uthread<span class="sy0">;</span>
<span class="kw3">memcpy</span><span class="br0">&#40;</span>tls<span class="sy0">,</span> master_tls<span class="sy0">,</span> master_tls_size<span class="br0">&#41;</span><span class="sy0">;</span></pre></div></div>
<h3> <span class="mw-headline" id="x86-64"> x86-64 </span></h3>
<p>The thread-self-pointer register is the base of the&#160;%fs segment. It is set to the address of the current thread's user-space thread structure. When you switch thread, you set the FSBASE <a href="MSR" title="MSR" class="mw-redirect">MSR</a> (0xC0000100). A pointer to the user-space thread structure itself is the first member of the user-space thread structure.
</p><p>The per-thread allocation is arranged and placed as described under <a href="Thread_Local_Storage#i386">#i386</a>.
</p>
<h3> <span class="mw-headline" id="Other"> Other </span></h3>
<p>See the <tt>tls.pdf</tt> document below and please document the specifics here afterwards.&#160;:)
</p>
<h2> <span class="mw-headline" id="Implementation"> Implementation </span></h2>
<p>Your kernel should bootstrap the thread local storage for the main thread after having loaded a program:
</p>
<ol><li> During program load, locate the thread local storage segment among the program headers, and load it somewhere.
</li><li> Create the per-thread allocation for the main thread.
</li><li> Copy the master thread local storage to the thread local storage of main thread.
</li><li> In the main thread's user-space thread structure, store: The location/size of the per-thread allocation, master thread local storage location/size/alignment, main thread's thread local storage location/size, the main thread's stack location/size, and so on. This allows the thread to make new threads and to clean up after itself.
</li><li> Set the thread-self-pointer register of the main thread to the main thread's user-space thread structure.
</li></ol>
<p>This approach allows thread local storage to be operational immediately when a program is loaded and makes it simple to create new thread.
</p><p>Setting up thread local storage for a new thread is simple:
</p>
<ol><li> Create a per-thread allocation for the new thread.
</li><li> Copy the master thread local storage to the thread local storage of new thread.
</li><li> Initialize the user-space thread structure for the new thread.
</li><li> Set the thread-self-pointer register of the new thread to the new thread's user-space thread structure.
</li></ol>
<p>Some Unix kernels such as Linux actually doesn't set up the thread local storage for the main thread. The libc is required to parse the ELF executable of the program to locate and load the master thread local storage copy itself and bootstrap the main thread. This has the obvious disadvantages of having early times where language features doesn't work and that every executable gets linked in an ELF loader (in case it uses thread local storage).
</p>
<h2> <span class="mw-headline" id="See_Also"> See Also </span></h2>
<h3> <span class="mw-headline" id="Standards"> Standards </span></h3>
<ul><li> <a rel="nofollow" class="external text" href="http://www.akkadia.org/drepper/tls.pdf">ELF Handling For Thread-Local Storage</a>
</li></ul>
<h3> <span class="mw-headline" id="Articles"> Articles </span></h3>
<ul><li> <a href="ELF" title="ELF">ELF</a>
</li><li> <a href="GDT" title="GDT" class="mw-redirect">GDT</a>
</li><li> <a href="MSR" title="MSR" class="mw-redirect">MSR</a>
</li><li> <a href="System_V_ABI" title="System V ABI">System V ABI</a>
</li></ul>
<h3> <span class="mw-headline" id="Topics"> Topics </span></h3>
<ul><li> <a rel="nofollow" class="external text" href="http://forum.osdev.org/viewtopic.php?f=15&amp;t=28339">Minimal Static Link</a> - <a href="http://wiki.osdev.org/User:Sortie" title="User:Sortie">sortie</a> posts about reducing startup libc bloat such as thread local storage initialization by moving it into the kernel to much success.
</li></ul>
<h3> <span class="mw-headline" id="IRC"> IRC </span></h3>
<ul><li> <a rel="nofollow" class="external text" href="http://bespin.org/~qz/search/?view=1&amp;c=osdev&amp;y=14&amp;m=11&amp;d=17">#osdev 2014-11-17</a> - <tt>sortie</tt> and <tt>maxdev</tt> have a conversation about thread local storage.
</li></ul>
<h3> <span class="mw-headline" id="Implementations"> Implementations </span></h3>
<ul><li> <a href="http://wiki.osdev.org/User:Sortie/Sortix_Thread_Local_Storage" title="User:Sortie/Sortix Thread Local Storage">Sortix Thread Local Storage Implementation</a> - Notes on <a href="http://wiki.osdev.org/User:Sortie" title="User:Sortie">sortie</a>'s implementation.
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 132/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3673-0!*!0!!en!*!* and timestamp 20180121044618 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Thread_Local_Storage&amp;oldid=17081">http://wiki.osdev.org/index.php?title=Thread_Local_Storage&amp;oldid=17081</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="Category:ABI" title="Category:ABI">ABI</a></li><li><a href="Category:C" title="Category:C">C</a></li><li><a href="Category:Processes_and_Threads" title="Category:Processes and Threads">Processes and Threads</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Thread_Local_Storage" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Thread_Local_Storage"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Thread_Local_Storage&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Thread_Local_Storage#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Thread_Local_Storage" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Thread_Local_Storage&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Thread_Local_Storage&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Thread_Local_Storage#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OSskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Thread_Local_Storage" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Thread_Local_Storage" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Thread_Local_Storage&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Thread_Local_Storage&amp;oldid=17081" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 18 November 2014, at 14:50.</li>
											<li id="footer-info-viewcount">This page has been accessed 11,614 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.034 secs. -->
	</body>
</html>
