<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Undefined Behavior Sanitization - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Undefined_Behavior_Sanitization", "wgTitle": "Undefined Behavior Sanitization", "wgCurRevisionId": 20578, "wgArticleId": 4038, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": [], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Undefined_Behavior_Sanitization action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Undefined Behavior Sanitization</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Undefined_Behavior_Sanitization#mw-head">navigation</a>,
					<a href="Undefined_Behavior_Sanitization#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>Undefined Behavior occurs when running code whose behavior is not described by the programming language specification. Languages like C and C++ have quite a lot of undefined behavior to allow compilers the opportunity to generate efficient code for different architectures. When compilers encounter undefined behavior may generate code which does unexpected things, or may even do nothing at all. Fortunately, GCC can generate code to analyze a program at runtime and catch certain types of undefined behavior using a library called <tt>ubsan</tt>. <tt>ubsan</tt> can catch runtime bugs such as dereferencing NULL or non-canonical addresses, certain undefined overflow errors, shifting or multiplying data which is out of bounds, and other errors. Adding ubsan support for a hobbyist operating system is as simple as defining a few hooks which are called when the kernel detects undefined behavior, and re-compiling with special flags.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Undefined_Behavior_Sanitization#GCC.27s_Libsanitizer_ubsan_Implementation"><span class="tocnumber">1</span> <span class="toctext">GCC's Libsanitizer ubsan Implementation</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Undefined_Behavior_Sanitization#Compiling_With_ubsan"><span class="tocnumber">2</span> <span class="toctext">Compiling With ubsan</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Undefined_Behavior_Sanitization#ubsan_Data_Structures"><span class="tocnumber">3</span> <span class="toctext">ubsan Data Structures</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Undefined_Behavior_Sanitization#Example_Hook_Implementation"><span class="tocnumber">4</span> <span class="toctext">Example Hook Implementation</span></a></li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="GCC.27s_Libsanitizer_ubsan_Implementation"> GCC's Libsanitizer <tt>ubsan</tt> Implementation </span></h2>
<p>GCC provides a library called Libsanitizer with a C++ implementation of the <tt>ubsan</tt> hooks for userland programs in the <a rel="nofollow" class="external text" href="https://github.com/gcc-mirror/gcc/tree/master/libsanitizer/ubsan">libsanitizer/ubsan/ directory</a> of the GCC repository. Attempting to link libsanitizer into a kernel may be problematic, so it is instead recommended to implement ones own hooks by looking at the GCC structure and function definitions and rewriting them. <a rel="nofollow" class="external text" href="https://gitlab.com/sortix/sortix/blob/master/libc/ubsan/ubsan.c">Sortix</a> and the Kernel of Truth have good pure C implementations of these hooks as examples.
</p>
<h2> <span class="mw-headline" id="Compiling_With_ubsan"> Compiling With <tt>ubsan</tt> </span></h2>
<p>Compiling a kernel with <tt>ubsan</tt> support is as simple as adding <tt>-fsanitize=undefined</tt> to the flags provided to GCC. Note that adding undefined behavior sanitization will bulk up the kernel and result in lots of inefficient runtime checks. However, it's easy to add a debug specific phony target using a Makefile which builds the kernel with debug information and undefined behavior sanitization. To make a normal build, use <tt>make all</tt> and to build a special debug build use <tt>make debug</tt>
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">CFLAGS <span class="sy0">:=</span> <span class="sy0">-</span>O2 <span class="sy0">-</span>Werror <span class="sy0">-</span>Wall
ASFLAGS <span class="sy0">:=</span> <span class="sy0">-</span>O2 <span class="sy0">-</span>Werror <span class="sy0">-</span>Wall
CC <span class="sy0">:=</span> x86_64<span class="sy0">-</span>elf<span class="sy0">-</span>gcc
&#160;
debug<span class="sy0">:</span> CFLAGS <span class="sy0">+=</span> <span class="sy0">-</span>g <span class="sy0">-</span>fsanitize<span class="sy0">=</span>undefined
debug<span class="sy0">:</span> ASFLAGS <span class="sy0">+=</span> <span class="sy0">-</span>g
debug<span class="sy0">:</span> all
&#160;
all<span class="sy0">:</span>
    <span class="co2"># Invoke GCC, GAS, etc.</span>
    $<span class="br0">&#40;</span>CC<span class="br0">&#41;</span> <span class="sy0">-</span>c myos.<span class="me1">c</span> <span class="sy0">-</span>o myos.<span class="me1">elf</span> $<span class="br0">&#40;</span>CFLAGS<span class="br0">&#41;</span></pre></div></div>
<h2> <span class="mw-headline" id="ubsan_Data_Structures"> <tt>ubsan</tt> Data Structures </span></h2>
<p><tt>ubsan</tt>  defines a few data structures for determining the cause and location of the error. One of the most helpful of these is the structure which holds the source location of the original code. It has a pointer to a C string with the file name which caused the error, as well as the exact line and column where it happened. There is also a type descriptor for types which may have been involved in undefined behavior, which includes a C string representing the type name. Each specific type of behavior, such as type mismatches, overflows, or out of bounds errors, has its own structure type which always begins with an embedded source location structure.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">struct</span> source_location <span class="br0">&#123;</span>
    <span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span>file<span class="sy0">;</span>
    <span class="kw4">uint32_t</span> line<span class="sy0">;</span>
    <span class="kw4">uint32_t</span> column<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&#160;
<span class="kw4">struct</span> type_descriptor <span class="br0">&#123;</span>
    <span class="kw4">uint16_t</span> kind<span class="sy0">;</span>
    <span class="kw4">uint16_t</span> info<span class="sy0">;</span>
    <span class="kw4">char</span> name<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&#160;
<span class="kw4">struct</span> type_mismatch_info <span class="br0">&#123;</span>
    <span class="kw4">struct</span> source_location location<span class="sy0">;</span>
    <span class="kw4">struct</span> type_descriptor <span class="sy0">*</span>type<span class="sy0">;</span>
    <span class="kw4">uintptr_t</span> alignment<span class="sy0">;</span>
    <span class="kw4">uint8_t</span> type_check_kind<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&#160;
<span class="kw4">struct</span> out_of_bounds_info <span class="br0">&#123;</span>
    <span class="kw4">struct</span> source_location location<span class="sy0">;</span>
    <span class="kw4">struct</span> type_descriptor left_type<span class="sy0">;</span>
    <span class="kw4">struct</span> type_descriptor right_type<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">;</span></pre></div></div>
<h2> <span class="mw-headline" id="Example_Hook_Implementation"> Example Hook Implementation </span></h2>
<p>One particularly helpful hook is called <tt>__ubsan_handle_type_mismatch</tt>. As of this writing, this hook handles three different types of errors: NULL pointer access, unaligned memory access, or accessing memory from a pointer whose data is an insufficient size. This also catches non-canonical address dereferences on x86_64. This function takes two arguments, a pointer to a type mismatch info structure, and a pointer to the original data. We can check the data to diagnose the error, and log it for the user, and kernel panic.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// Alignment must be a power of 2.</span>
<span class="co2">#define is_aligned(value, alignment)&#160;!(value &amp; (alignment - 1))</span>
&#160;
<span class="kw4">struct</span> type_mismatch_info <span class="br0">&#123;</span>
    <span class="kw4">struct</span> source_location location<span class="sy0">;</span>
    <span class="kw4">struct</span> type_descriptor <span class="sy0">*</span>type<span class="sy0">;</span>
    <span class="kw4">uintptr_t</span> alignment<span class="sy0">;</span>
    <span class="kw4">uint8_t</span> type_check_kind<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&#160;
&#160;
<span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span>Type_Check_Kinds<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span>
    <span class="st0">&quot;load of&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;store to&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;reference binding to&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;member access within&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;member call on&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;constructor call on&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;downcast of&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;downcast of&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;upcast of&quot;</span><span class="sy0">,</span>
    <span class="st0">&quot;cast to virtual base of&quot;</span><span class="sy0">,</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&#160;
<span class="kw4">static</span> <span class="kw4">void</span> log_location<span class="br0">&#40;</span><span class="kw4">struct</span> source_location <span class="sy0">*</span>location<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    logf<span class="br0">&#40;</span><span class="st0">&quot;<span class="es1">\t</span>file:&#160;%s<span class="es1">\n</span><span class="es1">\t</span>line:&#160;%i<span class="es1">\n</span><span class="es1">\t</span>column:&#160;%i<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>
         location<span class="sy0">-&gt;</span>file<span class="sy0">,</span> location<span class="sy0">-&gt;</span>line<span class="sy0">,</span> location<span class="sy0">-&gt;</span>column<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
&#160;
<span class="kw4">void</span> __ubsan_handle_type_mismatch<span class="br0">&#40;</span><span class="kw4">struct</span> type_mismatch_info <span class="sy0">*</span>type_mismatch<span class="sy0">,</span>
                                  <span class="kw4">uintptr_t</span> pointer<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="kw4">struct</span> source_location <span class="sy0">*</span>location <span class="sy0">=</span> <span class="sy0">&amp;</span>type_mismatch<span class="sy0">-&gt;</span>location<span class="sy0">;</span>
    <span class="kw1">if</span> <span class="br0">&#40;</span>pointer <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="kw3">log</span><span class="br0">&#40;</span><span class="st0">&quot;Null pointer access&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>type_mismatch<span class="sy0">-&gt;</span>alignment <span class="sy0">!=</span> <span class="nu0">0</span> <span class="sy0">&amp;&amp;</span>
               is_aligned<span class="br0">&#40;</span>pointer<span class="sy0">,</span> type_mismatch<span class="sy0">-&gt;</span>alignment<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="co1">// Most useful on architectures with stricter memory alignment requirements, like ARM.</span>
        <span class="kw3">log</span><span class="br0">&#40;</span><span class="st0">&quot;Unaligned memory access&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
        <span class="kw3">log</span><span class="br0">&#40;</span><span class="st0">&quot;Insufficient size&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
        logf<span class="br0">&#40;</span><span class="st0">&quot;%s address&#160;%p with insufficient space for object of type&#160;%s<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>
             Type_Check_Kinds<span class="br0">&#91;</span>type_mismatch<span class="sy0">-&gt;</span>type_check_kind<span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#40;</span><span class="kw4">void</span> <span class="sy0">*</span><span class="br0">&#41;</span>pointer<span class="sy0">,</span>
             type_mismatch<span class="sy0">-&gt;</span>type<span class="sy0">-&gt;</span>name<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
    log_location<span class="br0">&#40;</span>location<span class="br0">&#41;</span><span class="sy0">;</span>
&#160;
    kernel_panic<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></div></div>

<!-- 
NewPP limit report
Preprocessor node count: 41/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4038-0!*!*!!en!*!* and timestamp 20180121080144 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Undefined_Behavior_Sanitization&amp;oldid=20578">http://wiki.osdev.org/index.php?title=Undefined_Behavior_Sanitization&amp;oldid=20578</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks catlinks-allhidden'></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Undefined_Behavior_Sanitization" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Undefined_Behavior_Sanitization"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Undefined_Behavior_Sanitization&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Undefined_Behavior_Sanitization#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Undefined_Behavior_Sanitization" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Undefined_Behavior_Sanitization&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Undefined_Behavior_Sanitization&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Undefined_Behavior_Sanitization#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="/OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="/OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Undefined_Behavior_Sanitization" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Undefined_Behavior_Sanitization" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]skins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Undefined_Behavior_Sanitization" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Undefined_Behavior_Sanitization" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Undefined_Behavior_Sanitization&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Undefined_Behavior_Sanitization&amp;oldid=20578" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 11 March 2017, at 14:06.</li>
											<li id="footer-info-viewcount">This page has been accessed 888 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.071 secs. -->
	</body>
</html>
