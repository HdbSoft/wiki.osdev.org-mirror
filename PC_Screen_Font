<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>PC Screen Font - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "PC_Screen_Font", "wgTitle": "PC Screen Font", "wgCurRevisionId": 19990, "wgArticleId": 3999, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": [], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-bash {line-height: normal;}
.source-bash li, .source-bash pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for bash
 * CSS class: source-bash, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.bash.source-bash .de1, .bash.source-bash .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.bash.source-bash  {font-family:monospace;}
.bash.source-bash .imp {font-weight: bold; color: red;}
.bash.source-bash li, .bash.source-bash .li1 {font-weight: normal; vertical-align:top;}
.bash.source-bash .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.bash.source-bash .li2 {font-weight: bold; vertical-align:top;}
.bash.source-bash .kw1 {color: #000000; font-weight: bold;}
.bash.source-bash .kw2 {color: #c20cb9; font-weight: bold;}
.bash.source-bash .kw3 {color: #7a0874; font-weight: bold;}
.bash.source-bash .co0 {color: #666666; font-style: italic;}
.bash.source-bash .co1 {color: #800000;}
.bash.source-bash .co2 {color: #cc0000; font-style: italic;}
.bash.source-bash .co3 {color: #000000; font-weight: bold;}
.bash.source-bash .co4 {color: #666666;}
.bash.source-bash .es1 {color: #000099; font-weight: bold;}
.bash.source-bash .es2 {color: #007800;}
.bash.source-bash .es3 {color: #007800;}
.bash.source-bash .es4 {color: #007800;}
.bash.source-bash .es5 {color: #780078;}
.bash.source-bash .es_h {color: #000099; font-weight: bold;}
.bash.source-bash .br0 {color: #7a0874; font-weight: bold;}
.bash.source-bash .sy0 {color: #000000; font-weight: bold;}
.bash.source-bash .st0 {color: #ff0000;}
.bash.source-bash .st_h {color: #ff0000;}
.bash.source-bash .nu0 {color: #000000;}
.bash.source-bash .re0 {color: #007800;}
.bash.source-bash .re1 {color: #007800;}
.bash.source-bash .re2 {color: #007800;}
.bash.source-bash .re4 {color: #007800;}
.bash.source-bash .re5 {color: #660033;}
.bash.source-bash .ln-xtra, .bash.source-bash li.ln-xtra, .bash.source-bash div.ln-xtra {background-color: #ffc;}
.bash.source-bash span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-PC_Screen_Font action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">PC Screen Font</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="PC_Screen_Font#mw-head">navigation</a>,
					<a href="PC_Screen_Font#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>On every Linux distributions, you can find a lot of console fonts with the extension .psf or .psfu. They can be found in /usr/share/kbd/consolefonts/. This article describes how to display those on graphical screen, which has the advantage that
you don't have to mess with your fonts, you can directly use the ones shipped with your Linux. The other advantage is that
PSF fonts can store the whole UNICODE character set, although consolefonts have maximum 512 glyphs usually.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="PC_Screen_Font#Structure_of_file"><span class="tocnumber">1</span> <span class="toctext">Structure of file</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="PC_Screen_Font#File_Header"><span class="tocnumber">1.1</span> <span class="toctext">File Header</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="PC_Screen_Font#Glyphs"><span class="tocnumber">1.2</span> <span class="toctext">Glyphs</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="PC_Screen_Font#Unicode_Table"><span class="tocnumber">1.3</span> <span class="toctext">Unicode Table</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="PC_Screen_Font#Dealing_with_PSF"><span class="tocnumber">2</span> <span class="toctext">Dealing with PSF</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="PC_Screen_Font#Loading_the_font"><span class="tocnumber">3</span> <span class="toctext">Loading the font</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="PC_Screen_Font#Displaying_a_character"><span class="tocnumber">4</span> <span class="toctext">Displaying a character</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="PC_Screen_Font#External_Links"><span class="tocnumber">4.1</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="Structure_of_file"> Structure of file </span></h2>
<p>The PSF file itself consist of a header, bitmaps for the glyphs and optionally a unicode character translation table.
</p>
<h3> <span class="mw-headline" id="File_Header"> File Header </span></h3>
<p>It's a fixed, 32 bytes long chunk at the beginning of the file. It's as simple as it gets.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co2">#define PSF_FONT_MAGIC 0x864ab572</span>
&#160;
<span class="kw4">typedef</span> <span class="kw4">struct</span> <span class="br0">&#123;</span>
    <span class="kw4">uint32_t</span> magic<span class="sy0">;</span>         <span class="coMULTI">/* magic bytes to identify PSF */</span>
    <span class="kw4">uint32_t</span> version<span class="sy0">;</span>       <span class="coMULTI">/* zero */</span>
    <span class="kw4">uint32_t</span> headersize<span class="sy0">;</span>    <span class="coMULTI">/* offset of bitmaps in file, 32 */</span>
    <span class="kw4">uint32_t</span> flags<span class="sy0">;</span>         <span class="coMULTI">/* 0 if there's no unicode table */</span>
    <span class="kw4">uint32_t</span> numglyph<span class="sy0">;</span>      <span class="coMULTI">/* number of glyphs */</span>
    <span class="kw4">uint32_t</span> bytesperglyph<span class="sy0">;</span> <span class="coMULTI">/* size of each glyph */</span>
    <span class="kw4">uint32_t</span> height<span class="sy0">;</span>        <span class="coMULTI">/* height in pixels */</span>
    <span class="kw4">uint32_t</span> width<span class="sy0">;</span>         <span class="coMULTI">/* width in pixels */</span>
<span class="br0">&#125;</span> PSF_font<span class="sy0">;</span></pre></div></div>
<h3> <span class="mw-headline" id="Glyphs"> Glyphs </span></h3>
<p>Each glyph is a bitmap, encoded the same way as <a href="VGA_Fonts" title="VGA Fonts">VGA Fonts</a>. For a 8x16 font, each glyph is 16 bytes long, and every byte encodes exactly one row of the glyph.
</p>
<pre>
00000000b  byte  0
00000000b  byte  1
00000000b  byte  2
00010000b  byte  3
00111000b  byte  4
01101100b  byte  5
11000110b  byte  6
11000110b  byte  7
11111110b  byte  8
11000110b  byte  9
11000110b  byte 10
11000110b  byte 11
11000110b  byte 12
00000000b  byte 13
00000000b  byte 14
00000000b  byte 15
</pre>
<h3> <span class="mw-headline" id="Unicode_Table"> Unicode Table </span></h3>
<p>If the flags in the PSF header is 1, it indicates that the font has a unicode table for glyph mapping. Without such a table, unicode characters and glyphs are mapped identically, so first glyph is for unicode character 0, second glyph for unicode character 1 and so forth.
</p><p>The table is as follows: each glyph has a variable length record. Those are very similar to lines in a text file, only here lines are ended in 0xFF character not '\n' (0x0A). The nth line describes the nth glyph's mappings. Every line contains at least one, but possibly more UTF-8 character sequences.
</p>
<h2> <span class="mw-headline" id="Dealing_with_PSF"> Dealing with PSF </span></h2>
<p>Although there are lot of PSF editors out there, I've found all of them broken or hard to use. So I'd recommend two neat perl scripts instead: <a rel="nofollow" class="external text" href="https://github.com/talamus/solarize-12x29-psf/">readpsf, writepsf</a>. They can convert PSF into easily editable ascii text file or a bitmap image that can be opened with Gimp or Photoshop and vice versa.
</p>
<h2> <span class="mw-headline" id="Loading_the_font"> Loading the font </span></h2>
<p>As described in <a href="VGA_Fonts" title="VGA Fonts">VGA Fonts</a>, you have several options. For simplicity, we'll embed it. Here's how to convert PSF into an <a href="ELF" title="ELF">ELF</a> so that you can link with your kernel:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="bash source-bash"><pre class="de1">objcopy <span class="re5">-O</span> elf64-x86-<span class="nu0">64</span> <span class="re5">-B</span> i386 <span class="re5">-I</span> binary font.psf font.o
readelf <span class="re5">-s</span> font.o
&#160;
Symbol table <span class="st_h">'.symtab'</span> contains <span class="nu0">5</span> entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     <span class="nu0">0</span>: 0000000000000000     <span class="nu0">0</span> NOTYPE  LOCAL  DEFAULT  UND 
     <span class="nu0">1</span>: 0000000000000000     <span class="nu0">0</span> SECTION LOCAL  DEFAULT    <span class="nu0">1</span> 
     <span class="nu0">2</span>: 0000000000000000     <span class="nu0">0</span> NOTYPE  GLOBAL DEFAULT    <span class="nu0">1</span> _binary_font_psf_start
     <span class="nu0">3</span>: 0000000000008020     <span class="nu0">0</span> NOTYPE  GLOBAL DEFAULT    <span class="nu0">1</span> _binary_font_psf_end
     <span class="nu0">4</span>: 0000000000008020     <span class="nu0">0</span> NOTYPE  GLOBAL DEFAULT  ABS _binary_font_psf_size</pre></div></div>
<p>As you can see the resulting object exports three symbols that can be referenced as any other variables.
</p><p>Before we can use our font, first we have to decode the unicode table. That's a bit tricky to do, and you'll have to have calloc(), but the good news is it's optional. You can skip this if you're happy with the first glyph is for character 0, second glyph is for character 1, etc. scheme.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="coMULTI">/* import our font that's in the object file we've created above */</span>
<span class="kw2">extern</span> <span class="kw4">char</span> _binary_font_psf_start<span class="sy0">;</span>
<span class="kw2">extern</span> <span class="kw4">char</span> _binary_font_psf_end<span class="sy0">;</span>
&#160;
<span class="kw4">uint16_t</span> <span class="sy0">*</span>unicode<span class="sy0">;</span>
&#160;
<span class="kw4">void</span> psf_init<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw4">uint16_t</span> glyph <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
    <span class="coMULTI">/* cast the address to PSF header struct */</span>
    PSF_font <span class="sy0">*</span>font <span class="sy0">=</span> <span class="br0">&#40;</span>PSF_font<span class="sy0">*</span><span class="br0">&#41;</span><span class="sy0">&amp;</span>_binary_font_psf_start<span class="sy0">;</span>
    <span class="coMULTI">/* is there a unicode table? */</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>font<span class="sy0">-&gt;</span>flags<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="coMULTI">/* get the offset of the table */</span>
        <span class="kw4">char</span> <span class="sy0">*</span>s <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span><span class="br0">&#40;</span>
          <span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy0">*</span><span class="br0">&#41;</span><span class="sy0">&amp;</span>_binary_font_psf_start <span class="sy0">+</span>
          font<span class="sy0">-&gt;</span>headersize <span class="sy0">+</span>
          font<span class="sy0">-&gt;</span>numglyph <span class="sy0">*</span> font<span class="sy0">-&gt;</span>bytesperglyph
        <span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="coMULTI">/* allocate memory for translation table */</span>
        unicode <span class="sy0">=</span> <span class="kw3">calloc</span><span class="br0">&#40;</span>USHRT_MAX<span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="kw1">while</span><span class="br0">&#40;</span>s<span class="sy0">&gt;</span>_binary_font_psf_end<span class="br0">&#41;</span> <span class="br0">&#123;</span>
            <span class="kw4">uint16_t</span> uc <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">uint16_t</span><span class="br0">&#41;</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span><span class="br0">&#41;</span>s<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="kw1">if</span><span class="br0">&#40;</span>uc <span class="sy0">==</span> <span class="nu12">0xFF</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                glyph<span class="sy0">++;</span>
                s<span class="sy0">++;</span>
                <span class="kw1">continue</span><span class="sy0">;</span>
            <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span><span class="br0">&#40;</span>uc <span class="sy0">&amp;</span> <span class="nu0">128</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                <span class="coMULTI">/* UTF-8 to unicode */</span>
                <span class="kw1">if</span><span class="br0">&#40;</span><span class="br0">&#40;</span>uc <span class="sy0">&amp;</span> <span class="nu0">32</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="nu0">0</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    uc <span class="sy0">=</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x1F</span><span class="br0">&#41;</span><span class="sy0">&lt;&lt;</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x3F</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    s<span class="sy0">++;</span>
                <span class="br0">&#125;</span> <span class="kw1">else</span>
                <span class="kw1">if</span><span class="br0">&#40;</span><span class="br0">&#40;</span>uc <span class="sy0">&amp;</span> <span class="nu0">16</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="nu0">0</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    uc <span class="sy0">=</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0xF</span><span class="br0">&#41;</span><span class="sy0">&lt;&lt;</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x3F</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">&lt;&lt;</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x3F</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    s<span class="sy0">+=</span><span class="nu0">2</span><span class="sy0">;</span>
                <span class="br0">&#125;</span> <span class="kw1">else</span>
                <span class="kw1">if</span><span class="br0">&#40;</span><span class="br0">&#40;</span>uc <span class="sy0">&amp;</span> <span class="nu0">8</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="nu0">0</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    uc <span class="sy0">=</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x7</span><span class="br0">&#41;</span><span class="sy0">&lt;&lt;</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x3F</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">&lt;&lt;</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x3F</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">&lt;&lt;</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy0">+</span><span class="br0">&#40;</span>s<span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> <span class="sy0">&amp;</span> <span class="nu12">0x3F</span><span class="br0">&#41;</span><span class="sy0">;</span>
                    s<span class="sy0">+=</span><span class="nu0">3</span><span class="sy0">;</span>
                <span class="br0">&#125;</span> <span class="kw1">else</span>
                    uc <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
            <span class="br0">&#125;</span>
            <span class="coMULTI">/* save translation */</span>
            unicode<span class="br0">&#91;</span>uc<span class="br0">&#93;</span> <span class="sy0">=</span> glyph<span class="sy0">;</span>
            s<span class="sy0">++;</span>
        <span class="br0">&#125;</span>
    <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
        unicode <span class="sy0">=</span> NULL<span class="sy0">;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2> <span class="mw-headline" id="Displaying_a_character"> Displaying a character </span></h2>
<p>I'll assume that you've set up linear frame buffer properly and you can plot a pixel from your kernel. This example uses 32 bit RGBA format, but can be adopted to other formats easily.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="coMULTI">/* the linear framebuffer */</span>
<span class="kw2">extern</span> <span class="kw4">char</span> <span class="sy0">*</span>fb<span class="sy0">;</span>
<span class="coMULTI">/* number of bytes in each line, it's possible it's not screen width * bytesperpixel! */</span>
<span class="kw2">extern</span> <span class="kw4">int</span> scanline<span class="sy0">;</span>
<span class="coMULTI">/* import our font that's in the object file we've created above */</span>
<span class="kw2">extern</span> <span class="kw4">char</span> _binary_font_start<span class="sy0">;</span>
&#160;
<span class="kw4">void</span> <span class="kw3">putchar</span><span class="br0">&#40;</span>
    <span class="coMULTI">/* note that this is int, not char as it's a unicode character */</span>
    <span class="kw4">unsigned</span> <span class="kw4">short</span> <span class="kw4">int</span> c<span class="sy0">,</span>
    <span class="coMULTI">/* cursor position on screen, in characters not in pixels */</span>
    <span class="kw4">int</span> cx<span class="sy0">,</span> <span class="kw4">int</span> cy<span class="sy0">,</span>
    <span class="coMULTI">/* foreground and background colors, say 0xFFFFFF and 0x000000 */</span>
    <span class="kw4">uint32_t</span> fg<span class="sy0">,</span> <span class="kw4">uint32_t</span> bg<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="coMULTI">/* cast the address to PSF header struct */</span>
    PSF_font <span class="sy0">*</span>font <span class="sy0">=</span> <span class="br0">&#40;</span>PSF_font<span class="sy0">*</span><span class="br0">&#41;</span><span class="sy0">&amp;</span>_binary_font_psf_start<span class="sy0">;</span>
    <span class="coMULTI">/* we need to know how many bytes encode one row */</span>
    <span class="kw4">int</span> bytesperline<span class="sy0">=</span><span class="br0">&#40;</span>font<span class="sy0">-&gt;</span>width<span class="sy0">+</span><span class="nu0">7</span><span class="br0">&#41;</span><span class="sy0">/</span><span class="nu0">8</span><span class="sy0">;</span>
    <span class="coMULTI">/* unicode translation */</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>unicode <span class="sy0">!=</span> NULL<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        c <span class="sy0">=</span> unicode<span class="br0">&#91;</span>c<span class="br0">&#93;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
    <span class="coMULTI">/* get the glyph for the character. If there's no
       glyph for a given character, we'll display the first glyph. */</span>
    <span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span>glyph <span class="sy0">=</span>
     <span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy0">*</span><span class="br0">&#41;</span><span class="sy0">&amp;</span>_binary_font_psf_start <span class="sy0">+</span>
     font<span class="sy0">-&gt;</span>headersize <span class="sy0">+</span>
     <span class="br0">&#40;</span>c<span class="sy0">&gt;</span><span class="nu0">0</span><span class="sy0">&amp;&amp;</span>c<span class="sy0">&lt;</span>font<span class="sy0">-&gt;</span>numglyph<span class="sy0">?</span>c<span class="sy0">:</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">*</span>font<span class="sy0">-&gt;</span>bytesperglyph<span class="sy0">;</span>
    <span class="coMULTI">/* calculate the upper left corner on screen where we want to display.
       we only do this once, and adjust the offset later. This is faster. */</span>
    <span class="kw4">int</span> offs <span class="sy0">=</span>
        <span class="br0">&#40;</span>cy <span class="sy0">*</span> font<span class="sy0">-&gt;</span>height <span class="sy0">*</span> scanline<span class="br0">&#41;</span> <span class="sy0">+</span>
        <span class="br0">&#40;</span>cx <span class="sy0">*</span> <span class="br0">&#40;</span>font<span class="sy0">-&gt;</span>width<span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">*</span> <span class="nu0">4</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="coMULTI">/* finally display pixels according to the bitmap */</span>
    <span class="kw4">int</span> x<span class="sy0">,</span>y<span class="sy0">,</span> line<span class="sy0">,</span>mask<span class="sy0">;</span>
    <span class="kw1">for</span><span class="br0">&#40;</span>y<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>y<span class="sy0">&lt;</span>font<span class="sy0">-&gt;</span>height<span class="sy0">;</span>y<span class="sy0">++</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
        <span class="coMULTI">/* save the starting position of the line */</span>
        line<span class="sy0">=</span>offs<span class="sy0">;</span>
        mask<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">&lt;&lt;</span><span class="br0">&#40;</span>font<span class="sy0">-&gt;</span>width<span class="sy0">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="coMULTI">/* display a row */</span>
        <span class="kw1">for</span><span class="br0">&#40;</span>x<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>x<span class="sy0">&lt;</span>font<span class="sy0">-&gt;</span>width<span class="sy0">;</span>x<span class="sy0">++</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
            <span class="sy0">*</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">uint32_t</span><span class="sy0">*</span><span class="br0">&#41;</span><span class="br0">&#40;</span><span class="sy0">&amp;</span>fb <span class="sy0">+</span> line<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span><span class="sy0">*</span>glyph<span class="br0">&#41;</span> <span class="sy0">&amp;</span> <span class="br0">&#40;</span>mask<span class="br0">&#41;</span> <span class="sy0">?</span> fg <span class="sy0">:</span> bg<span class="sy0">;</span>
            <span class="coMULTI">/* adjust to the next pixel */</span>
            mask <span class="sy0">&gt;&gt;=</span> <span class="nu0">1</span><span class="sy0">;</span>
            line <span class="sy0">+=</span> <span class="nu0">4</span><span class="sy0">;</span>
        <span class="br0">&#125;</span>
        <span class="coMULTI">/* adjust to the next line */</span>
        glyph <span class="sy0">+=</span> bytesperline<span class="sy0">;</span>
        offs  <span class="sy0">+=</span> scanline<span class="sy0">;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>With this you can display strings on a linear frame buffer just like Linux does on it's ttys. Please note that this code is not optimal, it's for demonstration purposes, but it's a good start.
</p>
<h3> <span class="mw-headline" id="External_Links"> External Links </span></h3>
<ul><li><a rel="nofollow" class="external free" href="http://www.win.tue.nl/~aeb/linux/kbd/font-formats-1.html">http://www.win.tue.nl/~aeb/linux/kbd/font-formats-1.html</a> PC Screen Font format description
</li><li><a rel="nofollow" class="external free" href="https://en.wikipedia.org/wiki/PC_Screen_Font">https://en.wikipedia.org/wiki/PC_Screen_Font</a> Wikipedia on PC Screen Font
</li><li><a rel="nofollow" class="external free" href="https://github.com/talamus/solarize-12x29-psf/blob/master/readpsf">https://github.com/talamus/solarize-12x29-psf/blob/master/readpsf</a> Perl script to convert PSF into txt or bmp.
</li><li><a rel="nofollow" class="external free" href="https://github.com/talamus/solarize-12x29-psf/blob/master/writepsf">https://github.com/talamus/solarize-12x29-psf/blob/master/writepsf</a> Perl script to convert txt or bmp into PSF.
</li><li><a rel="nofollow" class="external free" href="https://github.com/bztsrc/osz/blob/master/etc/system.8x16.psf">https://github.com/bztsrc/osz/blob/master/etc/system.8x16.psf</a> originated from uni-vga.bdf, this font has almost all the glyphs for UNICODE 0 - 2048 without a translation table in 32k. Free to use.
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 91/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3999-0!*!0!!en!*!* and timestamp 20180121061638 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=PC_Screen_Font&amp;oldid=19990">http://wiki.osdev.org/index.php?title=PC_Screen_Font&amp;oldid=19990</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks catlinks-allhidden'></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=PC_Screen_Font" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="PC_Screen_Font"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:PC_Screen_Font&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="PC_Screen_Font#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="PC_Screen_Font" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=PC_Screen_Font&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=PC_Screen_Font&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="PC_Screen_Font#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="/OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="/OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/PC_Screen_Font" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/PC_Screen_Font" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="/index.php?title=PC_Screen_Font&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=PC_Screen_Font&amp;oldid=19990" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 15 December 2016, at 13:24.</li>
											<li id="footer-info-viewcount">This page has been accessed 1,743 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="/OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="/OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"eskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/PC_Screen_Font" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/PC_Screen_Font" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=PC_Screen_Font&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=PC_Screen_Font&amp;oldid=19990" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 15 December 2016, at 13:24.</li>
											<li id="footer-info-viewcount">This page has been accessed 1,743 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.029 secs. -->
	</body>
</html>
