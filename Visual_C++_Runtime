<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Visual C++ Runtime - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Visual_C++_Runtime", "wgTitle": "Visual C++ Runtime", "wgCurRevisionId": 11637, "wgArticleId": 2992, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["Compilers", "Visual C++"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Visual_C_Runtime action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Visual C++ Runtime</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Visual_C++_Runtime#mw-head">navigation</a>,
					<a href="Visual_C++_Runtime#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>Since you can't link standard C++ runtime to your kernel, you'll need several functions to replace it's functionality. This article provides information on how to implement your own C++ runtime for Visual C++ compiler.
</p><p><br />
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Visual_C++_Runtime#Call_Constructors_For_Global_Static_Variables"><span class="tocnumber">1</span> <span class="toctext">Call Constructors For Global Static Variables</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Visual_C++_Runtime#new_And_delete_Operators"><span class="tocnumber">2</span> <span class="toctext">new And delete Operators</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Visual_C++_Runtime#See_Also"><span class="tocnumber">3</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="Visual_C++_Runtime#Articles"><span class="tocnumber">3.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="Visual_C++_Runtime#External_Links"><span class="tocnumber">3.2</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="Call_Constructors_For_Global_Static_Variables">Call Constructors For Global Static Variables</span></h2>
<p>This code will help to call all constructors for global static variables.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// Constructor prototypes</span>
<span class="kw4">typedef</span> <span class="kw4">void</span> <span class="br0">&#40;</span>__cdecl <span class="sy0">*</span>_PVFV<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw4">typedef</span> <span class="kw4">int</span>  <span class="br0">&#40;</span>__cdecl <span class="sy0">*</span>_PIFV<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span><span class="sy0">;</span>
&#160;
<span class="co1">// Linker puts constructors between these sections, and we use them to locate constructor pointers.</span>
<span class="co2">#pragma section(&quot;.CRT$XIA&quot;,long,read)</span>
<span class="co2">#pragma section(&quot;.CRT$XIZ&quot;,long,read)</span>
<span class="co2">#pragma section(&quot;.CRT$XCA&quot;,long,read)</span>
<span class="co2">#pragma section(&quot;.CRT$XCZ&quot;,long,read)</span>
&#160;
<span class="co1">// Put .CRT data into .rdata section</span>
<span class="co2">#pragma comment(linker, &quot;/merge:.CRT=.rdata&quot;)</span>
&#160;
<span class="co1">// Pointers surrounding constructors</span>
__declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XIA&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PIFV __xi_a<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span> <span class="nu0">0</span> <span class="br0">&#125;</span><span class="sy0">;</span>
__declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XIZ&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PIFV __xi_z<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span> <span class="nu0">0</span> <span class="br0">&#125;</span><span class="sy0">;</span>
__declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XCA&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PVFV __xc_a<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span> <span class="nu0">0</span> <span class="br0">&#125;</span><span class="sy0">;</span>
__declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XCZ&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PVFV __xc_z<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span> <span class="nu0">0</span> <span class="br0">&#125;</span><span class="sy0">;</span>
&#160;
<span class="kw2">extern</span> __declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XIA&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PIFV __xi_a<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="kw2">extern</span> __declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XIZ&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PIFV __xi_z<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">;</span>    <span class="co1">// C initializers</span>
<span class="kw2">extern</span> __declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XCA&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PVFV __xc_a<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="kw2">extern</span> __declspec<span class="br0">&#40;</span>allocate<span class="br0">&#40;</span><span class="st0">&quot;.CRT$XCZ&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> _PVFV __xc_z<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">;</span>    <span class="co1">// C++ initializers</span>
&#160;
<span class="co1">// Call C constructors</span>
<span class="kw4">static</span> <span class="kw4">int</span> _initterm_e<span class="br0">&#40;</span>_PIFV <span class="sy0">*</span> pfbegin<span class="sy0">,</span> _PIFV <span class="sy0">*</span> pfend<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="kw4">int</span> ret <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&#160;
        <span class="co1">// walk the table of function pointers from the bottom up, until</span>
        <span class="co1">// the end is encountered.  Do not skip the first entry.  The initial</span>
        <span class="co1">// value of pfbegin points to the first valid entry.  Do not try to</span>
        <span class="co1">// execute what pfend points to.  Only entries before pfend are valid.</span>
        <span class="kw1">while</span> <span class="br0">&#40;</span> pfbegin <span class="sy0">&lt;</span> pfend  <span class="sy0">&amp;&amp;</span> ret <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span>
        <span class="br0">&#123;</span>
            <span class="co1">// if current table entry is non-NULL, call thru it.</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span> <span class="sy0">*</span>pfbegin <span class="sy0">!=</span> <span class="nu0">0</span> <span class="br0">&#41;</span>
                ret <span class="sy0">=</span> <span class="br0">&#40;</span><span class="sy0">**</span>pfbegin<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="sy0">++</span>pfbegin<span class="sy0">;</span>
        <span class="br0">&#125;</span>
&#160;
        <span class="kw1">return</span> ret<span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="co1">// Call C++ constructors</span>
<span class="kw4">static</span> <span class="kw4">void</span> _initterm <span class="br0">&#40;</span>_PVFV <span class="sy0">*</span> pfbegin<span class="sy0">,</span> _PVFV <span class="sy0">*</span> pfend<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
        <span class="co1">// walk the table of function pointers from the bottom up, until</span>
        <span class="co1">// the end is encountered.  Do not skip the first entry.  The initial</span>
        <span class="co1">// value of pfbegin points to the first valid entry.  Do not try to</span>
        <span class="co1">// execute what pfend points to.  Only entries before pfend are valid.</span>
        <span class="kw1">while</span> <span class="br0">&#40;</span> pfbegin <span class="sy0">&lt;</span> pfend <span class="br0">&#41;</span>
        <span class="br0">&#123;</span>
            <span class="co1">// if current table entry is non-NULL, call thru it.</span>
            <span class="kw1">if</span> <span class="br0">&#40;</span> <span class="sy0">*</span>pfbegin <span class="sy0">!=</span> <span class="nu0">0</span> <span class="br0">&#41;</span>
                <span class="br0">&#40;</span><span class="sy0">**</span>pfbegin<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="sy0">++</span>pfbegin<span class="sy0">;</span>
        <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&#160;
<span class="co1">// Call this function as soon as possible. Basically should be at the moment you</span>
<span class="co1">// jump into your C/C++ kernel. But keep in mind that kernel is not yet initialized,</span>
<span class="co1">// and you can't use a lot of stuff in your constructors!</span>
bool CallConstructors<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
	<span class="co1">// Do C initialization</span>
	<span class="kw4">int</span> initret <span class="sy0">=</span> _initterm_e<span class="br0">&#40;</span>__xi_a<span class="sy0">,</span> __xi_z<span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span> initret <span class="sy0">!=</span> <span class="nu0">0</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
            <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
&#160;
        <span class="co1">// Do C++ initialization</span>
        _initterm<span class="br0">&#40;</span>__xc_a<span class="sy0">,</span> __xc_z<span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p><br />
</p>
<h2> <span class="mw-headline" id="new_And_delete_Operators">new And delete Operators</span></h2>
<p>One of the first things you'll want to do is implement new and delete operators. At first, you can't really implement them, and just need to have their stubs. Later on, when you get your memory manager working, you can fully implement them. Bellow are the stubs:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">void</span><span class="sy0">*</span> __cdecl operator new<span class="br0">&#40;</span><span class="kw4">size_t</span> size<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">// Allocate memory</span>
	<span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
&#160;
<span class="kw4">void</span><span class="sy0">*</span> __cdecl operator new<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="kw4">size_t</span> size<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">// Allocate memory</span>
	<span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
&#160;
<span class="kw4">void</span> __cdecl operator delete<span class="br0">&#40;</span><span class="kw4">void</span> <span class="sy0">*</span>p<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>p <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
		<span class="kw1">return</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="co1">// Release allocated memory</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> __cdecl operator delete<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#40;</span><span class="kw4">void</span> <span class="sy0">*</span>p<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>p <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
		<span class="kw1">return</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="co1">// Release allocated memory</span>
<span class="br0">&#125;</span></pre></div></div>
<p><br />
If you'll want to use placement new, then you'll need to put the following implementation into a header file, and include it whenever you need it.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw2">inline</span> <span class="kw4">void</span><span class="sy0">*</span> __cdecl operator new<span class="br0">&#40;</span><span class="kw4">size_t</span> size<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> address<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">return</span> address<span class="sy0">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p><br />
</p>
<h2> <span class="mw-headline" id="See_Also">See Also</span></h2>
<h3> <span class="mw-headline" id="Articles"> Articles </span></h3>
<ul><li> <a href="Visual_Studio" title="Visual Studio">Visual Studio</a>
</li><li> <a href="C++" title="C++">C++</a>
</li></ul>
<h3> <span class="mw-headline" id="External_Links"> External Links </span></h3>
<ul><li> <a rel="nofollow" class="external text" href="http://msdn.microsoft.com/en-us/library/bb918180.aspx">CRT Initialization on MSDN</a>
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 56/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2992-0!*!0!!en!*!* and timestamp 20180121064150 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Visual_C%2B%2B_Runtime&amp;oldid=11637">http://wiki.osdev.org/index.php?title=Visual_C%2B%2B_Runtime&amp;oldid=11637</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="Category:Compilers" title="Category:Compilers">Compilers</a></li><li><a href="Category:Visual_C++" title="Category:Visual C++">Visual C++</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Visual_C%2B%2B_Runtime" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Visual_C++_Runtime"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Visual_C%2B%2B_Runtime&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Visual_C++_Runtime#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Visual_C++_Runtime" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Visual_C%2B%2B_Runtime&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Visual_C%2B%2B_Runtime&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Visual_C++_Runtime#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joinskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Visual_C%2B%2B_Runtime" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Visual_C%2B%2B_Runtime" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Visual_C%2B%2B_Runtime&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Visual_C%2B%2B_Runtime&amp;oldid=11637" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 22 June 2011, at 14:53.</li>
											<li id="footer-info-viewcount">This page has been accessed 20,289 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.031 secs. -->
	</body>
</html>
