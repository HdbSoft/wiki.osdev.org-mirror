<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Bare Bones with NASM - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "Bare_Bones_with_NASM", "wgTitle": "Bare Bones with NASM", "wgCurRevisionId": 21628, "wgArticleId": 3361, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": [], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-asm {line-height: normal;}
.source-asm li, .source-asm pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for asm
 * CSS class: source-asm, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.asm.source-asm .de1, .asm.source-asm .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.asm.source-asm  {font-family:monospace;}
.asm.source-asm .imp {font-weight: bold; color: red;}
.asm.source-asm li, .asm.source-asm .li1 {font-weight: normal; vertical-align:top;}
.asm.source-asm .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.asm.source-asm .li2 {font-weight: bold; vertical-align:top;}
.asm.source-asm .kw1 {color: #00007f; font-weight: bold;}
.asm.source-asm .kw2 {color: #0000ff; font-weight: bold;}
.asm.source-asm .kw3 {color: #00007f;}
.asm.source-asm .kw4 {color: #000000; font-weight: bold;}
.asm.source-asm .kw5 {color: #000000; font-weight: bold;}
.asm.source-asm .co1 {color: #666666; font-style: italic;}
.asm.source-asm .co2 {color: #adadad; font-style: italic;}
.asm.source-asm .es0 {color: #000099; font-weight: bold;}
.asm.source-asm .br0 {color: #009900; font-weight: bold;}
.asm.source-asm .sy0 {color: #339933;}
.asm.source-asm .st0 {color: #7f007f;}
.asm.source-asm .nu0 {color: #0000ff;}
.asm.source-asm .ln-xtra, .asm.source-asm li.ln-xtra, .asm.source-asm div.ln-xtra {background-color: #ffc;}
.asm.source-asm span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-bash {line-height: normal;}
.source-bash li, .source-bash pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for bash
 * CSS class: source-bash, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.bash.source-bash .de1, .bash.source-bash .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.bash.source-bash  {font-family:monospace;}
.bash.source-bash .imp {font-weight: bold; color: red;}
.bash.source-bash li, .bash.source-bash .li1 {font-weight: normal; vertical-align:top;}
.bash.source-bash .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.bash.source-bash .li2 {font-weight: bold; vertical-align:top;}
.bash.source-bash .kw1 {color: #000000; font-weight: bold;}
.bash.source-bash .kw2 {color: #c20cb9; font-weight: bold;}
.bash.source-bash .kw3 {color: #7a0874; font-weight: bold;}
.bash.source-bash .co0 {color: #666666; font-style: italic;}
.bash.source-bash .co1 {color: #800000;}
.bash.source-bash .co2 {color: #cc0000; font-style: italic;}
.bash.source-bash .co3 {color: #000000; font-weight: bold;}
.bash.source-bash .co4 {color: #666666;}
.bash.source-bash .es1 {color: #000099; font-weight: bold;}
.bash.source-bash .es2 {color: #007800;}
.bash.source-bash .es3 {color: #007800;}
.bash.source-bash .es4 {color: #007800;}
.bash.source-bash .es5 {color: #780078;}
.bash.source-bash .es_h {color: #000099; font-weight: bold;}
.bash.source-bash .br0 {color: #7a0874; font-weight: bold;}
.bash.source-bash .sy0 {color: #000000; font-weight: bold;}
.bash.source-bash .st0 {color: #ff0000;}
.bash.source-bash .st_h {color: #ff0000;}
.bash.source-bash .nu0 {color: #000000;}
.bash.source-bash .re0 {color: #007800;}
.bash.source-bash .re1 {color: #007800;}
.bash.source-bash .re2 {color: #007800;}
.bash.source-bash .re4 {color: #007800;}
.bash.source-bash .re5 {color: #660033;}
.bash.source-bash .ln-xtra, .bash.source-bash li.ln-xtra, .bash.source-bash div.ln-xtra {background-color: #ffc;}
.bash.source-bash span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Bare_Bones_with_NASM action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">Bare Bones with NASM</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="Bare_Bones_with_NASM#mw-head">navigation</a>,
					<a href="Bare_Bones_with_NASM#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>This article is an extension to the <a href="Bare_Bones" title="Bare Bones">Bare Bones</a> article and describes how to use <a href="NASM" title="NASM">NASM</a> in a Hello World kernel. Mentally add the following changes to the base article.
</p>
<h2> <span class="mw-headline" id="Booting_the_Operating_System">  Booting the Operating System  </span></h2>
<h3> <span class="mw-headline" id="Bootstrap_Assembly_.28NASM.29"> Bootstrap Assembly (NASM) </span></h3>
<p>We will now create a file called boot.asm and discuss its contents. In this example, we are using the <a href="NASM" title="NASM">Netwide Assembler</a> which is not part of your previously built cross-compiler toolchain and you will have to install it separately.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="asm source-asm"><pre class="de1"><span class="co1">; Declare constants for the multiboot header.</span>
MBALIGN <span class="kw4"> equ</span>  <span class="nu0">1</span>&lt;&lt;<span class="nu0">0</span>              <span class="co1">; align loaded modules on page boundaries</span>
MEMINFO <span class="kw4"> equ</span>  <span class="nu0">1</span>&lt;&lt;<span class="nu0">1</span>              <span class="co1">; provide memory map</span>
FLAGS   <span class="kw4"> equ</span>  MBALIGN | MEMINFO <span class="co1">; this is the Multiboot 'flag' field</span>
MAGIC   <span class="kw4"> equ</span>  <span class="nu0">0x1BADB002</span>        <span class="co1">; 'magic number' lets bootloader find the header</span>
CHECKSUM equ <span class="sy0">-</span><span class="br0">&#40;</span>MAGIC <span class="sy0">+</span> FLAGS<span class="br0">&#41;</span>   <span class="co1">; checksum of above, to prove we are multiboot</span>
&#160;
<span class="co1">; Declare a multiboot header that marks the program as a kernel. These are magic</span>
<span class="co1">; values that are documented in the multiboot standard. The bootloader will</span>
<span class="co1">; search for this signature in the first 8 KiB of the kernel file, aligned at a</span>
<span class="co1">; 32-bit boundary. The signature is in its own section so the header can be</span>
<span class="co1">; forced to be within the first 8 KiB of the kernel file.</span>
section <span class="sy0">.</span>multiboot
<span class="kw4">align</span> <span class="nu0">4</span>
	<span class="kw4">dd</span> MAGIC
	<span class="kw4">dd</span> FLAGS
	<span class="kw4">dd</span> CHECKSUM
&#160;
<span class="co1">; The multiboot standard does not define the value of the stack pointer register</span>
<span class="co1">; (esp) and it is up to the kernel to provide a stack. This allocates room for a</span>
<span class="co1">; small stack by creating a symbol at the bottom of it, then allocating 16384</span>
<span class="co1">; bytes for it, and finally creating a symbol at the top. The stack grows</span>
<span class="co1">; downwards on x86. The stack is in its own section so it can be marked nobits,</span>
<span class="co1">; which means the kernel file is smaller because it does not contain an</span>
<span class="co1">; uninitialized stack. The stack on x86 must be 16-byte aligned according to the</span>
<span class="co1">; System V ABI standard and de-facto extensions. The compiler will assume the</span>
<span class="co1">; stack is properly aligned and failure to align the stack will result in</span>
<span class="co1">; undefined behavior.</span>
section <span class="sy0">.</span>bss
<span class="kw4">align</span> <span class="nu0">16</span>
stack_bottom<span class="sy0">:</span>
resb <span class="nu0">16384</span> <span class="co1">; 16 KiB</span>
stack_top<span class="sy0">:</span>
&#160;
<span class="co1">; The linker script specifies _start as the entry point to the kernel and the</span>
<span class="co1">; bootloader will jump to this position once the kernel has been loaded. It</span>
<span class="co1">; doesn't make sense to return from this function as the bootloader is gone.</span>
<span class="co1">; Declare _start as a function symbol with the given symbol size.</span>
section <span class="sy0">.</span>text
global _start<span class="sy0">:</span>function <span class="br0">&#40;</span>_start<span class="sy0">.</span><span class="kw4">end</span> <span class="sy0">-</span> _start<span class="br0">&#41;</span>
_start<span class="sy0">:</span>
	<span class="co1">; The bootloader has loaded us into 32-bit protected mode on a x86</span>
	<span class="co1">; machine. Interrupts are disabled. Paging is disabled. The processor</span>
	<span class="co1">; state is as defined in the multiboot standard. The kernel has full</span>
	<span class="co1">; control of the CPU. The kernel can only make use of hardware features</span>
	<span class="co1">; and any code it provides as part of itself. There's no printf</span>
	<span class="co1">; function, unless the kernel provides its own &lt;stdio.h&gt; header and a</span>
	<span class="co1">; printf implementation. There are no security restrictions, no</span>
	<span class="co1">; safeguards, no debugging mechanisms, only what the kernel provides</span>
	<span class="co1">; itself. It has absolute and complete power over the</span>
	<span class="co1">; machine.</span>
&#160;
	<span class="co1">; To set up a stack, we set the esp register to point to the top of our</span>
	<span class="co1">; stack (as it grows downwards on x86 systems). This is necessarily done</span>
	<span class="co1">; in assembly as languages such as C cannot function without a stack.</span>
	<span class="kw1">mov</span> <span class="kw3">esp</span><span class="sy0">,</span> stack_top
&#160;
	<span class="co1">; This is a good place to initialize crucial processor state before the</span>
	<span class="co1">; high-level kernel is entered. It's best to minimize the early</span>
	<span class="co1">; environment where crucial features are offline. Note that the</span>
	<span class="co1">; processor is not fully initialized yet: Features such as floating</span>
	<span class="co1">; point instructions and instruction set extensions are not initialized</span>
	<span class="co1">; yet. The GDT should be loaded here. Paging should be enabled here.</span>
	<span class="co1">; C++ features such as global constructors and exceptions will require</span>
	<span class="co1">; runtime support to work as well.</span>
&#160;
	<span class="co1">; Enter the high-level kernel. The ABI requires the stack is 16-byte</span>
	<span class="co1">; aligned at the time of the call instruction (which afterwards pushes</span>
	<span class="co1">; the return pointer of size 4 bytes). The stack was originally 16-byte</span>
	<span class="co1">; aligned above and we've since pushed a multiple of 16 bytes to the</span>
	<span class="co1">; stack since (pushed 0 bytes so far) and the alignment is thus</span>
	<span class="co1">; preserved and the call is well defined.</span>
        <span class="co1">; note, that if you are building on Windows, C functions may have &quot;_&quot; prefix in assembly: _kernel_main</span>
	<span class="kw4">extern</span> kernel_main
	<span class="kw1">call</span> kernel_main
&#160;
	<span class="co1">; If the system has nothing more to do, put the computer into an</span>
	<span class="co1">; infinite loop. To do that:</span>
	<span class="co1">; 1) Disable interrupts with cli (clear interrupt enable in eflags).</span>
	<span class="co1">;    They are already disabled by the bootloader, so this is not needed.</span>
	<span class="co1">;    Mind that you might later enable interrupts and return from</span>
	<span class="co1">;    kernel_main (which is sort of nonsensical to do).</span>
	<span class="co1">; 2) Wait for the next interrupt to arrive with hlt (halt instruction).</span>
	<span class="co1">;    Since they are disabled, this will lock up the computer.</span>
	<span class="co1">; 3) Jump to the hlt instruction if it ever wakes up due to a</span>
	<span class="co1">;    non-maskable interrupt occurring or due to system management mode.</span>
	<span class="kw1">cli</span>
<span class="sy0">.</span>hang<span class="sy0">:</span>	<span class="kw1">hlt</span>
	<span class="kw1">jmp</span> <span class="sy0">.</span>hang
<span class="sy0">.</span><span class="kw4">end</span><span class="sy0">:</span></pre></div></div>
<p>You can then assemble boot.asm using:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="bash source-bash"><pre class="de1"><span class="kw2">nasm</span> <span class="re5">-felf32</span> boot.asm <span class="re5">-o</span> boot.o</pre></div></div>

<!-- 
NewPP limit report
Preprocessor node count: 20/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3361-0!*!0!!*!*!* and timestamp 20180121072019 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=Bare_Bones_with_NASM&amp;oldid=21628">http://wiki.osdev.org/index.php?title=Bare_Bones_with_NASM&amp;oldid=21628</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks catlinks-allhidden'></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Bare_Bones_with_NASM" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Bare_Bones_with_NASM"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:Bare_Bones_with_NASM&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="Bare_Bones_with_NASM#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Bare_Bones_with_NASM" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=Bare_Bones_with_NASM&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=Bare_Bones_with_NASM&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="Bare_Bones_with_NASM#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</askins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/Bare_Bones_with_NASM" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/Bare_Bones_with_NASM" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=Bare_Bones_with_NASM&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=Bare_Bones_with_NASM&amp;oldid=21628" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 18 October 2017, at 16:16.</li>
											<li id="footer-info-viewcount">This page has been accessed 26,562 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.028 secs. -->
	</body>
</html>
