<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>AML - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "AML", "wgTitle": "AML", "wgCurRevisionId": 20451, "wgArticleId": 3184, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["Stubs", "ACPI"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-AML action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">AML</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="AML#mw-head">navigation</a>,
					<a href="AML#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tr>
<td>
<p><a href="File:Stub.png" class="image" title="This article is a stub!"><img alt="This article is a stub!" src="images/f/fe/Stub.png" width="50" height="50" /></a>
This page or section is a <a href="Category:Stubs" title="Category:Stubs">stub</a>. You can help the wiki by <i>accurately</i> <a rel="nofollow" class="external text" href="http://wiki.osdev.org/index.php?title=AML&amp;action=edit">contributing</a> to it.
</p>
</td>
<td>
</td></tr></table>
</center>
<p>ACPI Machine Language (AML) is the platform independent code that ACPI utilizes. A knowledge of it is required to even shutdown the computer. It is found in the <a href="DSDT" title="DSDT">DSDT</a> and <a href="SSDT" title="SSDT">SSDT</a> tables, which are in turn found by parsing the <a href="RSDT" title="RSDT">RSDT</a> or <a href="XSDT" title="XSDT">XSDT</a>.
</p><p>AML code is byte code which is parsed from the beginning of each table when that table is read.  It contains definitions of devices and objects within the ACPI namespace.  By parsing the code, paying attention to all appropriate control-flow statements, an AML interpreter can build up a database of all devices within a system and the properties and functions they support (in reference to configuration and power management).
</p><p>The specification is available from the <a rel="nofollow" class="external text" href="http://www.acpi.info/spec.htm">ACPI website</a>.  In addition, Intel provides a reference implementation in its <a href="ACPICA" title="ACPICA">ACPICA</a> software.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="AML#ASL_and_AML"><span class="tocnumber">1</span> <span class="toctext">ASL and AML</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="AML#Sample_ASL_code"><span class="tocnumber">2</span> <span class="toctext">Sample ASL code</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="AML#AML_Opcodes"><span class="tocnumber">3</span> <span class="toctext">AML Opcodes</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="AML#Parsing_AML"><span class="tocnumber">4</span> <span class="toctext">Parsing AML</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="AML#PkgLength"><span class="tocnumber">4.1</span> <span class="toctext">PkgLength</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="AML#MethodInvocation"><span class="tocnumber">4.2</span> <span class="toctext">MethodInvocation</span></a></li>
</ul>
</li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="ASL_and_AML">ASL and AML</span></h2>
<p>ASL is ACPI source language.  It is a more human-readable form of the byte code that is AML.  This difference is similar to that between assembly code and the actual binary machine code.  The Intel ASL assembler (iasl) is freely available on many Linux distributions and can convert in either direction between these formats.
</p>
<h2> <span class="mw-headline" id="Sample_ASL_code">Sample ASL code</span></h2>
<p>The following is a very simple example of ASL code for a DSDT.
</p><p>test.asl:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">DefinitionBlock <span class="br0">&#40;</span><span class="st0">&quot;test.aml&quot;</span><span class="sy0">,</span> <span class="st0">&quot;DSDT&quot;</span><span class="sy0">,</span> <span class="nu0">1</span><span class="sy0">,</span> <span class="st0">&quot;OEMID &quot;</span><span class="sy0">,</span> <span class="st0">&quot;TABLEID  &quot;</span><span class="sy0">,</span> <span class="nu12">0x00000000</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    Scope <span class="br0">&#40;</span>_SB<span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        Device <span class="br0">&#40;</span>PCI0<span class="br0">&#41;</span>
        <span class="br0">&#123;</span>
            Name <span class="br0">&#40;</span>_HID<span class="sy0">,</span> EisaId <span class="br0">&#40;</span><span class="st0">&quot;PNP0A03&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
        <span class="br0">&#125;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>This can then be compiled to AML by running 'iasl test.asl' to generate test.aml.
</p><p>Here is an actual device off an HP pavilion g6 (RTC). This is embedded in a much larger DefinitionBlock:
</p>
 <div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">                Device <span class="br0">&#40;</span>RTC<span class="br0">&#41;</span>
                <span class="br0">&#123;</span>
                    Name <span class="br0">&#40;</span>_HID<span class="sy0">,</span> EisaId <span class="br0">&#40;</span><span class="st0">&quot;PNP0B00&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>  <span class="co1">// _HID: Hardware ID</span>
                    Name <span class="br0">&#40;</span>_CRS<span class="sy0">,</span> ResourceTemplate <span class="br0">&#40;</span><span class="br0">&#41;</span>  <span class="co1">// _CRS: Current Resource Settings</span>
                    <span class="br0">&#123;</span>
                        IO <span class="br0">&#40;</span>Decode16<span class="sy0">,</span>
                            <span class="nu12">0x0070</span><span class="sy0">,</span>             <span class="co1">// Range Minimum</span>
                            <span class="nu12">0x0070</span><span class="sy0">,</span>             <span class="co1">// Range Maximum</span>
                            <span class="nu12">0x01</span><span class="sy0">,</span>               <span class="co1">// Alignment</span>
                            <span class="nu12">0x08</span><span class="sy0">,</span>               <span class="co1">// Length</span>
                            <span class="br0">&#41;</span>
                        IRQNoFlags <span class="br0">&#40;</span><span class="br0">&#41;</span>
                            <span class="br0">&#123;</span><span class="nu0">8</span><span class="br0">&#125;</span>
                    <span class="br0">&#125;</span><span class="br0">&#41;</span>
                    OperationRegion <span class="br0">&#40;</span>CMS0<span class="sy0">,</span> SystemCMOS<span class="sy0">,</span> Zero<span class="sy0">,</span> <span class="nu12">0x40</span><span class="br0">&#41;</span>
                    Field <span class="br0">&#40;</span>CMS0<span class="sy0">,</span> ByteAcc<span class="sy0">,</span> NoLock<span class="sy0">,</span> Preserve<span class="br0">&#41;</span>
                    <span class="br0">&#123;</span>
                        RTSE<span class="sy0">,</span>   <span class="nu0">8</span><span class="sy0">,</span> 
                        Offset <span class="br0">&#40;</span><span class="nu12">0x02</span><span class="br0">&#41;</span><span class="sy0">,</span> 
                        RTMN<span class="sy0">,</span>   <span class="nu0">8</span><span class="sy0">,</span> 
                        Offset <span class="br0">&#40;</span><span class="nu12">0x04</span><span class="br0">&#41;</span><span class="sy0">,</span> 
                        RTHR<span class="sy0">,</span>   <span class="nu0">8</span><span class="sy0">,</span> 
                        Offset <span class="br0">&#40;</span><span class="nu12">0x06</span><span class="br0">&#41;</span><span class="sy0">,</span> 
                        RTDY<span class="sy0">,</span>   <span class="nu0">8</span><span class="sy0">,</span> 
                        RTDE<span class="sy0">,</span>   <span class="nu0">8</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span></pre></div></div>
<p>Notice that the region is in the CMOS.
</p><p>Following on from the RTC, here is a PS/2 Keyboard off the same PC:
</p>
 <div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">                Device <span class="br0">&#40;</span>PS2K<span class="br0">&#41;</span>
                <span class="br0">&#123;</span>
                    Name <span class="br0">&#40;</span>_HID<span class="sy0">,</span> EisaId <span class="br0">&#40;</span><span class="st0">&quot;PNP0303&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>  <span class="co1">// _HID: Hardware ID</span>
                    Method <span class="br0">&#40;</span>_STA<span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> NotSerialized<span class="br0">&#41;</span>  <span class="co1">// _STA: Status</span>
                    <span class="br0">&#123;</span>
                        Return <span class="br0">&#40;</span><span class="nu12">0x0F</span><span class="br0">&#41;</span>
                    <span class="br0">&#125;</span>
&#160;
                    Name <span class="br0">&#40;</span>_CRS<span class="sy0">,</span> ResourceTemplate <span class="br0">&#40;</span><span class="br0">&#41;</span>  <span class="co1">// _CRS: Current Resource Settings</span>
                    <span class="br0">&#123;</span>
                        IO <span class="br0">&#40;</span>Decode16<span class="sy0">,</span>
                            <span class="nu12">0x0060</span><span class="sy0">,</span>             <span class="co1">// Range Minimum</span>
                            <span class="nu12">0x0060</span><span class="sy0">,</span>             <span class="co1">// Range Maximum</span>
                            <span class="nu12">0x01</span><span class="sy0">,</span>               <span class="co1">// Alignment</span>
                            <span class="nu12">0x01</span><span class="sy0">,</span>               <span class="co1">// Length</span>
                            <span class="br0">&#41;</span>
                        IO <span class="br0">&#40;</span>Decode16<span class="sy0">,</span>
                            <span class="nu12">0x0064</span><span class="sy0">,</span>             <span class="co1">// Range Minimum</span>
                            <span class="nu12">0x0064</span><span class="sy0">,</span>             <span class="co1">// Range Maximum</span>
                            <span class="nu12">0x01</span><span class="sy0">,</span>               <span class="co1">// Alignment</span>
                            <span class="nu12">0x01</span><span class="sy0">,</span>               <span class="co1">// Length</span>
                            <span class="br0">&#41;</span>
                        IRQ <span class="br0">&#40;</span>Edge<span class="sy0">,</span> ActiveHigh<span class="sy0">,</span> Exclusive<span class="sy0">,</span> <span class="br0">&#41;</span>
                            <span class="br0">&#123;</span><span class="nu0">1</span><span class="br0">&#125;</span>
                    <span class="br0">&#125;</span><span class="br0">&#41;</span>
                    Name <span class="br0">&#40;</span>_PRS<span class="sy0">,</span> ResourceTemplate <span class="br0">&#40;</span><span class="br0">&#41;</span>  <span class="co1">// _PRS: Possible Resource Settings</span>
                    <span class="br0">&#123;</span>
                        StartDependentFn <span class="br0">&#40;</span><span class="nu12">0x00</span><span class="sy0">,</span> <span class="nu12">0x00</span><span class="br0">&#41;</span>
                        <span class="br0">&#123;</span>
                            FixedIO <span class="br0">&#40;</span>
                                <span class="nu12">0x0060</span><span class="sy0">,</span>             <span class="co1">// Address</span>
                                <span class="nu12">0x01</span><span class="sy0">,</span>               <span class="co1">// Length</span>
                                <span class="br0">&#41;</span>
                            FixedIO <span class="br0">&#40;</span>
                                <span class="nu12">0x0064</span><span class="sy0">,</span>             <span class="co1">// Address</span>
                                <span class="nu12">0x01</span><span class="sy0">,</span>               <span class="co1">// Length</span>
                                <span class="br0">&#41;</span>
                            IRQNoFlags <span class="br0">&#40;</span><span class="br0">&#41;</span>
                                <span class="br0">&#123;</span><span class="nu0">1</span><span class="br0">&#125;</span>
                        <span class="br0">&#125;</span>
                        EndDependentFn <span class="br0">&#40;</span><span class="br0">&#41;</span>
                    <span class="br0">&#125;</span><span class="br0">&#41;</span>
                    Name <span class="br0">&#40;</span>_PRW<span class="sy0">,</span> Package <span class="br0">&#40;</span><span class="nu12">0x02</span><span class="br0">&#41;</span>  <span class="co1">// _PRW: Power Resources for Wake</span>
                    <span class="br0">&#123;</span>
                        <span class="nu12">0x18</span><span class="sy0">,</span> 
                        <span class="nu12">0x03</span>
                    <span class="br0">&#125;</span><span class="br0">&#41;</span>
                    Method <span class="br0">&#40;</span>_PSW<span class="sy0">,</span> <span class="nu0">1</span><span class="sy0">,</span> NotSerialized<span class="br0">&#41;</span>  <span class="co1">// _PSW: Power State Wake</span>
                    <span class="br0">&#123;</span>
                        Store <span class="br0">&#40;</span>Arg0<span class="sy0">,</span> KBWK<span class="br0">&#41;</span>
                    <span class="br0">&#125;</span>
                <span class="br0">&#125;</span></pre></div></div>
<p>the above 2 samples were gathered via a utility I wrote to snatch DSDT data from the Registry, disassembled by iASL.--<a href="http://wiki.osdev.org/User:Bellezzasolo" title="User:Bellezzasolo">Bellezzasolo</a> 14:58, 20 January 2013 (CST)
</p><p>This defines one table (the DSDT), and requests that the output AML be placed in a file called test.aml.  The "OEMID " is a 6 character string defining the name of the OEM who made the firmware of the system, the "TABLEID  " is an 8 character string defining the name of the table - it is normally OEM specific.  The last entry in the DefinitionBlock line is the OEM revision id.  It defines one namespace within the root namespace which is called _SB.  Note that all device/scope/object names are 4 characters long, therefore this is sometimes represented as "_SB ".  _SB is a special name in the ACPI namespace called "System Bus", which is the main scope under which all devices and bus objects are found.  See the ACPI specification table 5-67 for a list of predefined names.
</p><p>Within the _SB scope we define a device called PCI0, which has one object within it called _HID.  _HID is again a predefined name that refers to a device's Plug and Play hardware ID, in this case the built-in macro EisaId is used to generate the value 0x030ad041 from "PNP0A03", which is the PNP ID of a PCI root bus.  A reasonably complete list of PNP ids is available from <a rel="nofollow" class="external free" href="http://tuxmobil.org/pnp_ids.html">http://tuxmobil.org/pnp_ids.html</a>.
</p>
<h2> <span class="mw-headline" id="AML_Opcodes"> AML Opcodes </span></h2>
<p>This table comes from the ACPI specification, where it is provided mainly for use during debugging an AML parser. For example, if your parser fails and the next byte (that it couldn't parse) is "0x72" then you could refer to this table to see that it is an "Add" operation. Don't let this table confuse you into thinking that AML consists a linear flow of simple instructions to be decoded one at a time. Most AML consists of nested, recursively defined structures and lists.
</p>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1}}}">
<tr>
<th> Value (Hex)
</th>
<th> Name
</th></tr>
<tr>
<td> 0x00 </td>
<td> ZeroOp
</td></tr>
<tr>
<td> 0x01 </td>
<td> OneOp
</td></tr>
<tr>
<td> 0x06 </td>
<td> AliasOp
</td></tr>
<tr>
<td> 0x08 </td>
<td> NameOp
</td></tr>
<tr>
<td> 0x0A </td>
<td> BytePrefix
</td></tr>
<tr>
<td> 0x0B </td>
<td> WordPrefix
</td></tr>
<tr>
<td> 0x0C </td>
<td> DWordPrefix
</td></tr>
<tr>
<td> 0x0D </td>
<td> StringPrefix
</td></tr>
<tr>
<td> 0x0E </td>
<td> QWordPrefix
</td></tr>
<tr>
<td> 0x10 </td>
<td> ScopeOp
</td></tr>
<tr>
<td> 0x11 </td>
<td> BufferOp
</td></tr>
<tr>
<td> 0x12 </td>
<td> PackageOp
</td></tr>
<tr>
<td> 0x13 </td>
<td> VarPackageOp
</td></tr>
<tr>
<td> 0x14 </td>
<td> MethodOp
</td></tr>
<tr>
<td> 0x2E (‘.’) </td>
<td> DualNamePrefix
</td></tr>
<tr>
<td> 0x2F (‘/’) </td>
<td> MultiNamePrefix
</td></tr>
<tr>
<td> 0x30-0x39 ('0'-'9') </td>
<td> DigitChar
</td></tr>
<tr>
<td> 0x41-0x5A (‘A’-‘Z’) </td>
<td> NameChar
</td></tr>
<tr>
<td> 0x5B (‘[’) </td>
<td> ExtOpPrefix
</td></tr>
<tr>
<td> 0x5B 0x01 </td>
<td> MutexOp
</td></tr>
<tr>
<td> 0x5B 0x02 </td>
<td> EventOp
</td></tr>
<tr>
<td> 0x5B 0x12 </td>
<td> CondRefOfOp
</td></tr>
<tr>
<td> 0x5B 0x13 </td>
<td> CreateFieldOp
</td></tr>
<tr>
<td> 0x5B 0x1F </td>
<td> LoadTableOp
</td></tr>
<tr>
<td> 0x5B 0x20 </td>
<td> LoadOp
</td></tr>
<tr>
<td> 0x5B 0x21 </td>
<td> StallOp
</td></tr>
<tr>
<td> 0x5B 0x22 </td>
<td> SleepOp
</td></tr>
<tr>
<td> 0x5B 0x23 </td>
<td> AcquireOp
</td></tr>
<tr>
<td> 0x5B 0x24 </td>
<td> SignalOp
</td></tr>
<tr>
<td> 0x5B 0x25 </td>
<td> WaitOp
</td></tr>
<tr>
<td> 0x5B 0x26 </td>
<td> ResetOp
</td></tr>
<tr>
<td> 0x5B 0x27 </td>
<td> ReleaseOp
</td></tr>
<tr>
<td> 0x5B 0x28 </td>
<td> FromBCDOp
</td></tr>
<tr>
<td> 0x5B 0x29 </td>
<td> ToBCD
</td></tr>
<tr>
<td> 0x5B 0x2A </td>
<td> UnloadOp
</td></tr>
<tr>
<td> 0x5B 0x30 </td>
<td> RevisionOp
</td></tr>
<tr>
<td> 0x5B 0x31 </td>
<td> DebugOp
</td></tr>
<tr>
<td> 0x5B 0x32 </td>
<td> FatalOp
</td></tr>
<tr>
<td> 0x5B 0x33 </td>
<td> TimerOp
</td></tr>
<tr>
<td> 0x5B 0x80 </td>
<td> OpRegionOp
</td></tr>
<tr>
<td> 0x5B 0x81 </td>
<td> FieldOp
</td></tr>
<tr>
<td> 0x5B 0x82 </td>
<td> DeviceOpList
</td></tr>
<tr>
<td> 0x5B 0x83 </td>
<td> ProcessorOp
</td></tr>
<tr>
<td> 0x5B 0x84 </td>
<td> PowerResOp
</td></tr>
<tr>
<td> 0x5B 0x85 </td>
<td> ThermalZoneOpList
</td></tr>
<tr>
<td> 0x5B 0x86 </td>
<td> IndexFieldOp
</td></tr>
<tr>
<td> 0x5B 0x87 </td>
<td> BankFieldOp
</td></tr>
<tr>
<td> 0x5B 0x88 </td>
<td> DataRegionOp
</td></tr>
<tr>
<td> 0x5C (‘\’) </td>
<td> RootChar
</td></tr>
<tr>
<td> 0x5E (‘^’) </td>
<td> ParentPrefixChar
</td></tr>
<tr>
<td> 0x5F(‘_’) </td>
<td> NameChar
</td></tr>
<tr>
<td> 0x60 (‘`’) </td>
<td> Local0Op
</td></tr>
<tr>
<td> 0x61 (‘a’) </td>
<td> Local1Op
</td></tr>
<tr>
<td> 0x62 (‘b’) </td>
<td> Local2Op
</td></tr>
<tr>
<td> 0x63 (‘c’) </td>
<td> Local3Op
</td></tr>
<tr>
<td> 0x64 (‘d’) </td>
<td> Local4Op
</td></tr>
<tr>
<td> 0x65 (‘e’) </td>
<td> Local5Op
</td></tr>
<tr>
<td> 0x66 (‘f’) </td>
<td> Local6Op
</td></tr>
<tr>
<td> 0x67 (‘g’) </td>
<td> Local7Op
</td></tr>
<tr>
<td> 0x68 (‘h’) </td>
<td> Arg0Op
</td></tr>
<tr>
<td> 0x69 (‘i’) </td>
<td> Arg1Op
</td></tr>
<tr>
<td> 0x6A (‘j’) </td>
<td> Arg2Op
</td></tr>
<tr>
<td> 0x6B (‘k’) </td>
<td> Arg3Op
</td></tr>
<tr>
<td> 0x6C (‘l’) </td>
<td> Arg4Op
</td></tr>
<tr>
<td> 0x6D (‘m’) </td>
<td> Arg5Op
</td></tr>
<tr>
<td> 0x6E (‘n’) </td>
<td> Arg6Op
</td></tr>
<tr>
<td> 0x70 </td>
<td> StoreOp
</td></tr>
<tr>
<td> 0x71 </td>
<td> RefOfOp
</td></tr>
<tr>
<td> 0x72 </td>
<td> AddOp
</td></tr>
<tr>
<td> 0x73 </td>
<td> ConcatOp
</td></tr>
<tr>
<td> 0x74 </td>
<td> SubtractOp
</td></tr>
<tr>
<td> 0x75 </td>
<td> IncrementOp
</td></tr>
<tr>
<td> 0x76 </td>
<td> DecrementOp
</td></tr>
<tr>
<td> 0x77 </td>
<td> MultiplyOp
</td></tr>
<tr>
<td> 0x78 </td>
<td> DivideOp
</td></tr>
<tr>
<td> 0x79 </td>
<td> ShiftLeftOp
</td></tr>
<tr>
<td> 0x7A </td>
<td> ShiftRightOp
</td></tr>
<tr>
<td> 0x7B </td>
<td> AndOp
</td></tr>
<tr>
<td> 0x7C </td>
<td> NandOp
</td></tr>
<tr>
<td> 0x7D </td>
<td> OrOp
</td></tr>
<tr>
<td> 0x7E </td>
<td> NorOp
</td></tr>
<tr>
<td> 0x7F </td>
<td> XorOp
</td></tr>
<tr>
<td> 0x80 </td>
<td> NotOp
</td></tr>
<tr>
<td> 0x81 </td>
<td> FindSetLeftBitOp
</td></tr>
<tr>
<td> 0x82 </td>
<td> FindSetRightBitOp
</td></tr>
<tr>
<td> 0x83 </td>
<td> DerefOfOp
</td></tr>
<tr>
<td> 0x84 </td>
<td> ConcatResOp
</td></tr>
<tr>
<td> 0x85 </td>
<td> ModOp
</td></tr>
<tr>
<td> 0x86 </td>
<td> NotifyOp
</td></tr>
<tr>
<td> 0x87 </td>
<td> SizeOfOp
</td></tr>
<tr>
<td> 0x88 </td>
<td> IndexOp
</td></tr>
<tr>
<td> 0x89 </td>
<td> MatchOp
</td></tr>
<tr>
<td> 0x8A </td>
<td> CreateDWordFieldOp
</td></tr>
<tr>
<td> 0x8B </td>
<td> CreateWordFieldOp
</td></tr>
<tr>
<td> 0x8C </td>
<td> CreateByteFieldOp
</td></tr>
<tr>
<td> 0x8D </td>
<td> CreateBitFieldOp
</td></tr>
<tr>
<td> 0x8E </td>
<td> TypeOp
</td></tr>
<tr>
<td> 0x8F </td>
<td> CreateQWordFieldOp
</td></tr>
<tr>
<td> 0x90 </td>
<td> LandOp
</td></tr>
<tr>
<td> 0x91 </td>
<td> LorOp
</td></tr>
<tr>
<td> 0x92 </td>
<td> LnotOp
</td></tr>
<tr>
<td> 0x92 0x93 </td>
<td> LNotEqualOp
</td></tr>
<tr>
<td> 0x92 0x94 </td>
<td> LLessEqualOp
</td></tr>
<tr>
<td> 0x92 0x95 </td>
<td> LGreaterEqualOp
</td></tr>
<tr>
<td> 0x93 </td>
<td> LEqualOp
</td></tr>
<tr>
<td> 0x94 </td>
<td> LGreaterOp
</td></tr>
<tr>
<td> 0x95 </td>
<td> LLessOp
</td></tr>
<tr>
<td> 0x96 </td>
<td> ToBufferOp
</td></tr>
<tr>
<td> 0x97 </td>
<td> ToDecimalStringOp
</td></tr>
<tr>
<td> 0x98 </td>
<td> ToHexStringOp
</td></tr>
<tr>
<td> 0x99 </td>
<td> ToIntegerOp
</td></tr>
<tr>
<td> 0x9C </td>
<td> ToStringOp
</td></tr>
<tr>
<td> 0x9D </td>
<td> CopyObjectOp
</td></tr>
<tr>
<td> 0x9E </td>
<td> MidOp
</td></tr>
<tr>
<td> 0x9F </td>
<td> ContinueOp
</td></tr>
<tr>
<td> 0xA0 </td>
<td> IfOp
</td></tr>
<tr>
<td> 0xA1 </td>
<td> ElseOp
</td></tr>
<tr>
<td> 0xA2 </td>
<td> WhileOp
</td></tr>
<tr>
<td> 0xA3 </td>
<td> NoopOp
</td></tr>
<tr>
<td> 0xA4 </td>
<td> ReturnOp
</td></tr>
<tr>
<td> 0xA5 </td>
<td> BreakOp
</td></tr>
<tr>
<td> 0xCC </td>
<td> BreakPointOp
</td></tr>
<tr>
<td> 0xFF </td>
<td> OnesOp
</td></tr>
</table>
<h2> <span class="mw-headline" id="Parsing_AML"> Parsing AML </span></h2>
<p>While the ACPI specification (and therefore the <i>meaning</i> of the AML in the <a href="DSDT" title="DSDT">DSDT</a> and <a href="SSDT" title="SSDT">SSDT</a>) is very complicated, the bytecode itself is described by a formal grammar described in the ACPI specification. For example, here is the grammar that describes a simple ASCII string.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">String <span class="sy0">:=</span> StringPrefix AsciiCharList NullChar
StringPrefix <span class="sy0">:=</span> <span class="nu12">0x0D</span>
AsciiCharList <span class="sy0">:=</span> Nothing <span class="sy0">|</span> <span class="sy0">&lt;</span>AsciiChar AsciiCharList<span class="sy0">&gt;</span>
AsciiChar <span class="sy0">:=</span> <span class="nu12">0x01</span> <span class="sy0">-</span> <span class="nu12">0x7F</span></pre></div></div>
<p>It seems reasonable that you could write recursive descent parsers for these individual objects, as below.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw2">function</span> parse_string<span class="sy0">:</span>
  <span class="kw1">if</span> parse_string_prefix<span class="sy0">:</span>
    <span class="kw1">if</span> parse_ascii_char_list<span class="sy0">:</span>
      <span class="kw1">if</span> parse_null_char<span class="sy0">:</span>
        <span class="kw1">return</span> <span class="nu0">1</span>
      <span class="kw1">else</span><span class="sy0">:</span>
        <span class="kw1">return</span> <span class="nu0">0</span>
    <span class="kw1">else</span><span class="sy0">:</span>
      <span class="kw1">return</span> <span class="nu0">0</span>
  <span class="kw1">else</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">0</span>
&#160;
<span class="kw2">function</span> parse_string_prefix<span class="sy0">:</span>
  <span class="kw1">if</span> next <span class="kw4">char</span> <span class="sy0">==</span> <span class="nu12">0x0D</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">1</span>
  <span class="kw1">else</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">0</span>
&#160;
<span class="kw2">function</span> parse_ascii_char_list<span class="sy0">:</span>
  <span class="kw1">if</span> parse_ascii_char<span class="sy0">:</span>
    <span class="kw1">return</span> parse_ascii_char_list
  <span class="kw1">else</span><span class="sy0">:</span>
    <span class="kw1">return</span> parse_nothing
&#160;
<span class="kw2">function</span> parse_ascii_char<span class="sy0">:</span>
  <span class="kw1">if</span> next <span class="kw4">char</span> <span class="sy0">&lt;</span> <span class="nu12">0x01</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">0</span>
  <span class="kw1">else</span> <span class="kw1">if</span> next <span class="kw4">char</span> <span class="sy0">&gt;</span> <span class="nu12">0x7F</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">0</span>
  <span class="kw1">else</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">1</span>
&#160;
<span class="kw2">function</span> parse_null_char<span class="sy0">:</span>
  <span class="kw1">if</span> next <span class="kw4">char</span> <span class="sy0">==</span> <span class="nu12">0x00</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">1</span>
  <span class="kw1">else</span><span class="sy0">:</span>
    <span class="kw1">return</span> <span class="nu0">0</span>
&#160;
<span class="kw2">function</span> parse_nothing<span class="sy0">:</span>
  <span class="kw1">return</span> <span class="nu0">1</span></pre></div></div>
<p>This will work for the vast majority of the AML grammar. In fact, if it weren't for two things, you could write a parser for all of AML by referring only to the 10 pages of formal grammar in the specification and not knowing a thing about what the objects you're parsing <i>mean</i>. Unfortunately, those two things are <b>PkgLength</b> and <b>MethodInvocation</b>.
</p>
<h3> <span class="mw-headline" id="PkgLength">PkgLength</span></h3>
<p><b>PkgLength</b> is an object that appears in some grammars, like <b>DefScope</b>:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">DefScope <span class="sy0">:=</span> ScopeOp PkgLength NameString TermList
ScopeOp <span class="sy0">:=</span> <span class="nu12">0x10</span>
TermList <span class="sy0">:=</span> Nothing <span class="sy0">|</span> <span class="sy0">&lt;</span>TermObj TermList<span class="sy0">&gt;</span>
...</pre></div></div>
<p>Every AML object is either "implicit-length, fixed-length", "implicit-length, nested", or "explicit length". <b>ScopeOp</b> is a simple example of an "implicit-length, fixed-length" object: it's one byte long and wherever it appears, will only be one byte long. <b>TermList</b> is an example of an "implicit-length, nested" object. It's a recursively defined list, and who knows how long it might be. There's a problem with implicit-length, nested objects. What if two are nested within each-other? For example:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">TermObj TermObj TermObj</pre></div></div>
<p>Is this a single TermList containing one TermObj? Or is it a single TermList containing one TermObj and another TermList, which itself contains two TermObjs?
</p><p>To resolve this confusion, "implicit length, nested" objects appear within "explicit length" objects. <b>DefScope</b> is an example of an "explicit length" object. The <b>PkgLength</b> object tells you how many more bytes in the AML bytecode (counting the PkgLength field itself) are part of the explicit length object. This way you know when to stop parsing any implicit-length, nested objects like TermLists.
</p><p>This isn't a huge problem for your parser though. A parsing function for an "implicit length, nested" object like <b>TermList</b> needs to take an argument that tells it how many bytes to parse. This number is determined by the previous <b>PkgLength</b> parser.
</p>
<h3> <span class="mw-headline" id="MethodInvocation">MethodInvocation</span></h3>
<p>The <b>MethodInvocation</b> object is a far bigger problem. <b>MethodInvocation</b> is an "implicit length, nested" object that does <b>not</b> always fall within an "explicit length" object.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1">MethodInvocation <span class="sy0">:=</span> NameString TermArgList
TermArgList <span class="sy0">:=</span> Nothing <span class="sy0">|</span> <span class="sy0">&lt;</span>TermArg TermArgList<span class="sy0">&gt;</span></pre></div></div>
<p>A <b>MethodInvocation</b> can appear all over the place in AML and most of the time the parent object will not have a <b>PkgLength</b> object that can be used to know when to stop parsing the recursively defined <b>TermArgList</b>. Instead, every time you parse the <b>NameString</b> of a <b>MethodInvocation</b> you have to look through the AML for a matching <b>DefMethod</b> and parse its <b>MethodFlags</b> child object to see how many items are in the <b>MethodInvocation'</b>s <b>TermArgList</b>. This means you have to understand how to deal with <b>NameString</b> objects, which are similar to filesystem paths. And this means you have to be able to walk through partially-parsed AML looking at paths and scopes and recursing in and out of various objects looking for a <b>DefMethod</b>.
</p><p>Even worse, sometimes the corresponding <b>DefMethod</b> is defined <i>after</i> the <b>MethodInvocation</b>! Such "forward references" mean that you can't parse AML in one pass. Your parser will have to determine that it can't resolve a <b>MethodInvocation</b> right now and try again later after it parses the corresponding <b>DefMethod</b> object.
</p><p>Suddenly your AML parser is not just a simple recursive descent parser implementing a formal grammar, but a multi-pass beast that understands AML scoping and object paths.
</p><p>On the plus side, <b>MethodInvocation</b> is the <i>only</i> AML object like that.
</p>
<!-- 
NewPP limit report
Preprocessor node count: 123/1000000
Post-expand include size: 597/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3184-0!*!0!!en!2!* and timestamp 20180121035222 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=AML&amp;oldid=20451">http://wiki.osdev.org/index.php?title=AML&amp;oldid=20451</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="Category:Stubs" title="Category:Stubs">Stubs</a></li><li><a href="Category:ACPI" title="Category:ACPI">ACPI</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=AML" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="AML"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:AML&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="AML#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="AML" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=AML&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=AML&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="AML#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="/OSDevWiki:Joininskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/AML" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/AML" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=AML&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=AML&amp;oldid=20451" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 15 February 2017, at 12:11.</li>
											<li id="footer-info-viewcount">This page has been accessed 33,836 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.030 secs. -->
	</body>
</html>
