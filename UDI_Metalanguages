<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>UDI Metalanguages - OSDev Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.18.0" />
<link rel="shortcut icon" href="favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.osdev.org/opensearch_desc.php" title="OSDev Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.osdev.org/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="http://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: wikidb:resourceloader:filter:minify-css:4:c88e2bcd56513749bec09a7e29cb3ffa */
</style>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.config.set({"wgCanonicalNamespace": "", "wgCanonicalSpecialPageName": false, "wgNamespaceNumber": 0, "wgPageName": "UDI_Metalanguages", "wgTitle": "UDI Metalanguages", "wgCurRevisionId": 17189, "wgArticleId": 3374, "wgIsArticle": true, "wgAction": "view", "wgUserName": null, "wgUserGroups": ["*"], "wgCategories": ["Uniform Driver Interface"], "wgBreakFrames": false, "wgRestrictionEdit": [], "wgRestrictionMove": []});
}
</script><script>if(window.mw){
	mw.loader.load(["mediawiki.page.startup"]);
}
</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "http://wiki.osdev.org/index.php?title=MediaWiki:Geshi.css&amp;usemsgcache=yes&amp;action=raw&amp;ctype=text/css&amp;smaxage=18000";
/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-UDI_Metalanguages action-view skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">UDI Metalanguages</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From OSDev Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="UDI_Metalanguages#mw-head">navigation</a>,
					<a href="UDI_Metalanguages#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div lang="en" dir="ltr" class="mw-content-ltr"><p>UDI Metalanguages can be described succinctly as doing two things:
</p>
<ul><li> Defining APIs for IPC between drivers (and the host kernel's userspace).
</li><li> Defining extensions to the Core UDI Specification to enable it to meet the needs of special device driver types.
</li></ul>
<p>Metalanguages are used in every UDI driver, since they are essentially APIs. Any API call that you use to call into a UDI driver is defined by a Metalanguage -- Metalanguages <i>define UDI APIs</i>. For example, if you were to call <tt>udi_devmgmt_req()</tt> to ask a driver to "Prepare to Suspend", you would be calling a function that is part of the UDI Management Metalanguage API. This Management Metalanguage API has other functions grouped under it as well, and together these functions make up the Management Metalanguage API:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">typedef</span> <span class="kw4">const</span> <span class="kw4">struct</span> <span class="br0">&#123;</span>
  udi_usage_ind_op_t <span class="sy0">*</span>usage_ind_op<span class="sy0">;</span>
  udi_enumerate_req_op_t <span class="sy0">*</span>enumerate_req_op<span class="sy0">;</span>
  udi_devmgmt_req_op_t <span class="sy0">*</span>devmgmt_req_op<span class="sy0">;</span>
  udi_final_cleanup_req_op_t <span class="sy0">*</span>final_cleanup_req_op<span class="sy0">;</span>
<span class="br0">&#125;</span> udi_mgmt_ops_t<span class="sy0">;</span></pre></div></div>
<p>Metalanguage APIs form the basis of device-class APIs in UDI.
</p>
<h2> <span class="mw-headline" id="Metalanguage_Operations_Vectors"> Metalanguage Operations Vectors </span></h2>
<p>In the above example for the UDI Management Metalanguage, all of the Management Metalanguage API functions were grouped into one function-pointer struct. This is because the Management Metalanguage is a very <b>simple</b> API, so it can't really be separated into groups of related functions. By all means, every API can be exposed this way -- as a single congested block of functions with no separation or organization.
</p><p>But it is beneficial to allow for the APIs to be broken into sub-groups of functions. Consider for example, yet again, a network card's driver. Most network card drivers can be split up into several groups of functions:
</p>
<ul><li> Functions related to device <b>control</b> and <b>status</b> management.
</li><li> Functions related to <b>sending</b> network frames.
</li><li> Functions related to <b>receiving</b> network frames from the network.
</li></ul>
<p>A naive implementation of a Network Metalanguage API could kludge all of its function together, regardless of their logical sub-grouping, similarly to this example below, where a naive Network Metalanguage groups all of its control, send and receive operations together indiscriminately:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">typedef</span> <span class="kw4">const</span> <span class="kw4">struct</span> <span class="br0">&#123;</span>
<span class="coMULTI">/* Control and status related functions */</span>
	udi_nd_bind_req_op_t <span class="sy0">*</span>nd_bind_req_op<span class="sy0">;</span>
	udi_nd_unbind_req_op_t <span class="sy0">*</span>nd_unbind_req_op<span class="sy0">;</span>
	udi_nd_enable_req_op_t <span class="sy0">*</span>nd_enable_req_op<span class="sy0">;</span>
	udi_nd_disable_req_op_t <span class="sy0">*</span>nd_disable_req_op<span class="sy0">;</span>
	udi_nd_ctrl_req_op_t <span class="sy0">*</span>nd_ctrl_req_op<span class="sy0">;</span>
	udi_nd_info_req_op_t <span class="sy0">*</span>nd_info_req_op<span class="sy0">;</span>
<span class="coMULTI">/* Send functions */</span>
	udi_nd_tx_req_op_t <span class="sy0">*</span>nd_tx_req_op<span class="sy0">;</span>
	udi_nd_exp_tx_req_op_t <span class="sy0">*</span>nd_exp_tx_req_op<span class="sy0">;</span>
<span class="coMULTI">/* Frame receipt notification functions. */</span>
	udi_nd_rx_rdy_op_t <span class="sy0">*</span>nd_rx_rdy_op<span class="sy0">;</span>
<span class="br0">&#125;</span> udi_nd_ctrl_ops_t<span class="sy0">;</span></pre></div></div>
<p>And it would be fine, and functional -- there is nothing technically wrong with this: the host kernel can call into the driver just fine, and the driver can respond to the requests just fine as well. However, if instead the Metalanguage API was to be redesigned, and all of these functions broken into groups of related logical sub-functions:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">typedef</span> <span class="kw4">const</span> <span class="kw4">struct</span> <span class="br0">&#123;</span>
	udi_channel_event_ind_op_t <span class="sy0">*</span>channel_event_ind_op<span class="sy0">;</span>
	udi_nd_rx_rdy_op_t <span class="sy0">*</span>nd_rx_rdy_op<span class="sy0">;</span>
<span class="br0">&#125;</span> udi_nd_rx_ops_t<span class="sy0">;</span>
&#160;
<span class="kw4">typedef</span> <span class="kw4">const</span> <span class="kw4">struct</span> <span class="br0">&#123;</span>
	udi_channel_event_ind_op_t <span class="sy0">*</span>channel_event_ind_op<span class="sy0">;</span>
	udi_nd_tx_req_op_t <span class="sy0">*</span>nd_tx_req_op<span class="sy0">;</span>
	udi_nd_exp_tx_req_op_t <span class="sy0">*</span>nd_exp_tx_req_op<span class="sy0">;</span>
<span class="br0">&#125;</span> udi_nd_tx_ops_t<span class="sy0">;</span>
&#160;
<span class="kw4">typedef</span> <span class="kw4">const</span> <span class="kw4">struct</span> <span class="br0">&#123;</span>
	udi_channel_event_ind_op_t <span class="sy0">*</span>channel_event_ind_op<span class="sy0">;</span>
	udi_nd_bind_req_op_t <span class="sy0">*</span>nd_bind_req_op<span class="sy0">;</span>
	udi_nd_unbind_req_op_t <span class="sy0">*</span>nd_unbind_req_op<span class="sy0">;</span>
	udi_nd_enable_req_op_t <span class="sy0">*</span>nd_enable_req_op<span class="sy0">;</span>
	udi_nd_disable_req_op_t <span class="sy0">*</span>nd_disable_req_op<span class="sy0">;</span>
	udi_nd_ctrl_req_op_t <span class="sy0">*</span>nd_ctrl_req_op<span class="sy0">;</span>
	udi_nd_info_req_op_t <span class="sy0">*</span>nd_info_req_op<span class="sy0">;</span>
<span class="br0">&#125;</span> udi_nd_ctrl_ops_t<span class="sy0">;</span></pre></div></div>
<p>Then the kernel would be calling into a different struct for each of the groups of functions (control, send and receive). This would also enable the kernel to make assumptions about the grouping of these functions. Whereas before, the kernel could not assume that any function within the "big kludge of functions" was functionally distinct from the others, now it can assume that each individual structure containing function pointers <i>implies</i> a logically separate flow of signaling into the driver.
</p><p>This enables the kernel to create separate IPC request queues (a.k.a., <b>UDI Channels</b>) for each group of functions (if it so desires); in the case of our example Network Metalanguage API, separate channels could be created for control IPC messages, send IPC messages and receive IPC notifications. Of course, this only applies to microkernels and hybrid kernels, because monolithic kernels call directly into their drivers without using any messages at all. A monolithic kernel would just ignore all of this.
</p><p>Any single Metalanguage API can specify that its API be broken up into multiple function-groups. That is, any Metalanguage can specify <i>&lt;N&gt;</i> different functions, grouped into <i>&lt;M&gt;</i> different groupings, as seen fit by that Metalanguage. Drivers just provide their entry points for the functions, grouped as recommended by the Metalanguage specification.
</p>
<h2> <span class="mw-headline" id="Conclusion"> Conclusion </span></h2>
<p>Metalanguages extend the UDI Core Specification by introducing new APIs for adoption and standardization. Driver vendors can also choose to provide new metalanguages if they see fit. And drivers can provide any number of APIs as needed.
</p><p>For example, a graphics driver can expose an OpenGL API via an OpenGL Metalanguage, and also expose a Direct 3D API via a D3D Metalanguage.
</p>
<!-- 
NewPP limit report
Preprocessor node count: 37/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3374-0!*!*!!*!*!* and timestamp 20180121080156 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.osdev.org/index.php?title=UDI_Metalanguages&amp;oldid=17189">http://wiki.osdev.org/index.php?title=UDI_Metalanguages&amp;oldid=17189</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="http://wiki.osdev.org/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="Category:Uniform_Driver_Interface" title="Category:Uniform Driver Interface">Uniform Driver Interface</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=UDI_Metalanguages" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="UDI_Metalanguages"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="http://wiki.osdev.org/index.php?title=Talk:UDI_Metalanguages&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="UDI_Metalanguages#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="UDI_Metalanguages" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://wiki.osdev.org/index.php?title=UDI_Metalanguages&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://wiki.osdev.org/index.php?title=UDI_Metalanguages&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="UDI_Metalanguages#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://wiki.osdev.org/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput" />		<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />		<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/skins/common/images/osdev.png);" href="Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="/Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="/Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="/OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="/OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="/OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/UDI_Metalanguages" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/UDI_Metalanguages" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="/index.php?title=UDI_Metalanguages&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=UDI_Metalanguages&amp;oldid=17189" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 1 December 2014, at 14:57.</li>
											<li id="footer-info-viewcount">This page has been accessed 3,507 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="/OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="/OSDev_Wiki:Geskins/common/images/osdev.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-portal"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things">Forums</a></li>
			<li id="n-FAQ"><a href="Category:FAQ">FAQ</a></li>
			<li id="n-OS-Projects"><a href="Projects">OS Projects</a></li>
			<li id="n-randompage"><a href="http://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- about -->
<div class="portal" id='p-about'>
	<h5>About</h5>
	<div class="body">
		<ul>
			<li id="n-This-site"><a href="OSDevWiki:About">This site</a></li>
			<li id="n-Joining"><a href="OSDevWiki:Joining">Joining</a></li>
			<li id="n-Editing-help"><a href="OSDevWiki:Editing">Editing help</a></li>
			<li id="n-recentchanges"><a href="http://wiki.osdev.org/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
		</ul>
	</div>
</div>

<!-- /about -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://wiki.osdev.org/Special:WhatLinksHere/UDI_Metalanguages" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://wiki.osdev.org/Special:RecentChangesLinked/UDI_Metalanguages" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://wiki.osdev.org/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="http://wiki.osdev.org/index.php?title=UDI_Metalanguages&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://wiki.osdev.org/index.php?title=UDI_Metalanguages&amp;oldid=17189" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 1 December 2014, at 14:57.</li>
											<li id="footer-info-viewcount">This page has been accessed 3,507 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="OSDev_Wiki:Privacy_policy" title="OSDev Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="OSDev_Wiki:About" title="OSDev Wiki:About">About OSDev Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="OSDev_Wiki:General_disclaimer" title="OSDev Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.loader.load(["mediawiki.user", "mediawiki.util", "mediawiki.page.ready", "mediawiki.legacy.wikibits", "mediawiki.legacy.ajax"]);
}
</script>
<script src="http://wiki.osdev.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
	mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,
	"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;mw.user.tokens.set({"editToken":"+\\","watchToken":false});;mw.loader.state({"user.options":"ready","user.tokens":"ready"});
	
	/* cache key: wikidb:resourceloader:filter:minify-js:4:19a4b18a9ac79a6b8c60b24af4668814 */
}
</script><!-- Served in 0.063 secs. -->
	</body>
</html>
